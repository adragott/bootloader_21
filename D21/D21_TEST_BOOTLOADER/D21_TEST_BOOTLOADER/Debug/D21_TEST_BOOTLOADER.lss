
D21_TEST_BOOTLOADER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008d4c  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00008d4c  00008d4c  00018d4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  00008d54  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000005a8  200009c0  00009720  000209c0  2**4
                  ALLOC
  4 .stack        00002000  20000f68  00009cc8  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209e8  2**0
                  CONTENTS, READONLY
  7 .debug_info   0002f499  00000000  00000000  00020a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000041dd  00000000  00000000  0004feda  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00006c8e  00000000  00000000  000540b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000578  00000000  00000000  0005ad45  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008b8  00000000  00000000  0005b2bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001bf0d  00000000  00000000  0005bb75  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000d51b  00000000  00000000  00077a82  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00090891  00000000  00000000  00084f9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000019b0  00000000  00000000  00115830  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	68 2f 00 20 51 23 00 00 4d 23 00 00 4d 23 00 00     h/. Q#..M#..M#..
	...
      2c:	4d 23 00 00 00 00 00 00 00 00 00 00 4d 23 00 00     M#..........M#..
      3c:	4d 23 00 00 4d 23 00 00 4d 23 00 00 4d 23 00 00     M#..M#..M#..M#..
      4c:	4d 23 00 00 4d 23 00 00 4d 23 00 00 15 01 00 00     M#..M#..M#......
      5c:	4d 23 00 00 4d 23 00 00 4d 23 00 00 4d 23 00 00     M#..M#..M#..M#..
      6c:	4d 23 00 00 4d 23 00 00 4d 23 00 00 4d 23 00 00     M#..M#..M#..M#..
      7c:	4d 23 00 00 4d 23 00 00 4d 23 00 00 4d 23 00 00     M#..M#..M#..M#..
      8c:	4d 23 00 00 4d 23 00 00 4d 23 00 00 4d 23 00 00     M#..M#..M#..M#..
      9c:	4d 23 00 00 4d 23 00 00 4d 23 00 00 4d 23 00 00     M#..M#..M#..M#..
      ac:	4d 23 00 00 00 00 00 00                             M#......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200009c0 	.word	0x200009c0
      d4:	00000000 	.word	0x00000000
      d8:	00008d54 	.word	0x00008d54

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200009c4 	.word	0x200009c4
     108:	00008d54 	.word	0x00008d54
     10c:	00008d54 	.word	0x00008d54
     110:	00000000 	.word	0x00000000

00000114 <DMAC_Handler>:
	_dma_set_config(resource, config);

	resource->descriptor = NULL;

	/* Log the DMA resource into the internal DMA resource pool */
	_dma_active_resource[resource->channel_id] = resource;
     114:	b510      	push	{r4, lr}
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_leave_critical_section(void)
{
	cpu_irq_leave_critical();
     116:	4b26      	ldr	r3, [pc, #152]	; (1b0 <DMAC_Handler+0x9c>)

	system_interrupt_leave_critical_section();

	return STATUS_OK;
     118:	4798      	blx	r3
}
     11a:	4926      	ldr	r1, [pc, #152]	; (1b4 <DMAC_Handler+0xa0>)
     11c:	8c0b      	ldrh	r3, [r1, #32]
     11e:	220f      	movs	r2, #15
     120:	4013      	ands	r3, r2
     122:	009b      	lsls	r3, r3, #2
     124:	4824      	ldr	r0, [pc, #144]	; (1b8 <DMAC_Handler+0xa4>)
     126:	5818      	ldr	r0, [r3, r0]
     128:	7803      	ldrb	r3, [r0, #0]
     12a:	401a      	ands	r2, r3
     12c:	233f      	movs	r3, #63	; 0x3f
     12e:	54ca      	strb	r2, [r1, r3]
     130:	330f      	adds	r3, #15
     132:	5cca      	ldrb	r2, [r1, r3]
     134:	b2d2      	uxtb	r2, r2
     136:	7803      	ldrb	r3, [r0, #0]
     138:	011b      	lsls	r3, r3, #4
     13a:	4920      	ldr	r1, [pc, #128]	; (1bc <DMAC_Handler+0xa8>)
     13c:	18c9      	adds	r1, r1, r3
     13e:	8849      	ldrh	r1, [r1, #2]
     140:	4c1f      	ldr	r4, [pc, #124]	; (1c0 <DMAC_Handler+0xac>)
     142:	18e3      	adds	r3, r4, r3
     144:	885b      	ldrh	r3, [r3, #2]
     146:	1acb      	subs	r3, r1, r3
	resource->transfered_size = total_size - write_size;
     148:	6143      	str	r3, [r0, #20]
	if (isr & DMAC_CHINTENCLR_TERR) {
     14a:	07d3      	lsls	r3, r2, #31
     14c:	d50f      	bpl.n	16e <DMAC_Handler+0x5a>
		DMAC->CHINTFLAG.reg = DMAC_CHINTENCLR_TERR;
     14e:	2101      	movs	r1, #1
     150:	234e      	movs	r3, #78	; 0x4e
     152:	4a18      	ldr	r2, [pc, #96]	; (1b4 <DMAC_Handler+0xa0>)
     154:	54d1      	strb	r1, [r2, r3]
		resource->job_status = STATUS_ERR_IO;
     156:	3b3e      	subs	r3, #62	; 0x3e
     158:	7443      	strb	r3, [r0, #17]
		if ((resource->callback_enable & (1<<DMA_CALLBACK_TRANSFER_ERROR)) &&
     15a:	7c03      	ldrb	r3, [r0, #16]
     15c:	07db      	lsls	r3, r3, #31
     15e:	d503      	bpl.n	168 <DMAC_Handler+0x54>
				(resource->callback[DMA_CALLBACK_TRANSFER_ERROR])) {
     160:	6843      	ldr	r3, [r0, #4]
		if ((resource->callback_enable & (1<<DMA_CALLBACK_TRANSFER_ERROR)) &&
     162:	2b00      	cmp	r3, #0
     164:	d000      	beq.n	168 <DMAC_Handler+0x54>
			resource->callback[DMA_CALLBACK_TRANSFER_ERROR](resource);
     166:	4798      	blx	r3
     168:	4b16      	ldr	r3, [pc, #88]	; (1c4 <DMAC_Handler+0xb0>)
     16a:	4798      	blx	r3
}
     16c:	bd10      	pop	{r4, pc}
	} else if (isr & DMAC_CHINTENCLR_TCMPL) {
     16e:	0793      	lsls	r3, r2, #30
     170:	d50d      	bpl.n	18e <DMAC_Handler+0x7a>
		DMAC->CHINTFLAG.reg = DMAC_CHINTENCLR_TCMPL;
     172:	2102      	movs	r1, #2
     174:	234e      	movs	r3, #78	; 0x4e
     176:	4a0f      	ldr	r2, [pc, #60]	; (1b4 <DMAC_Handler+0xa0>)
     178:	54d1      	strb	r1, [r2, r3]
		resource->job_status = STATUS_OK;
     17a:	2300      	movs	r3, #0
     17c:	7443      	strb	r3, [r0, #17]
		if ((resource->callback_enable & (1 << DMA_CALLBACK_TRANSFER_DONE)) &&
     17e:	7c03      	ldrb	r3, [r0, #16]
     180:	079b      	lsls	r3, r3, #30
     182:	d5f1      	bpl.n	168 <DMAC_Handler+0x54>
				(resource->callback[DMA_CALLBACK_TRANSFER_DONE])) {
     184:	6883      	ldr	r3, [r0, #8]
		if ((resource->callback_enable & (1 << DMA_CALLBACK_TRANSFER_DONE)) &&
     186:	2b00      	cmp	r3, #0
     188:	d0ee      	beq.n	168 <DMAC_Handler+0x54>
			resource->callback[DMA_CALLBACK_TRANSFER_DONE](resource);
     18a:	4798      	blx	r3
     18c:	e7ec      	b.n	168 <DMAC_Handler+0x54>
	} else if (isr & DMAC_CHINTENCLR_SUSP) {
     18e:	0753      	lsls	r3, r2, #29
     190:	d5ea      	bpl.n	168 <DMAC_Handler+0x54>
		DMAC->CHINTFLAG.reg = DMAC_CHINTENCLR_SUSP;
     192:	2104      	movs	r1, #4
     194:	234e      	movs	r3, #78	; 0x4e
     196:	4a07      	ldr	r2, [pc, #28]	; (1b4 <DMAC_Handler+0xa0>)
     198:	54d1      	strb	r1, [r2, r3]
		resource->job_status = STATUS_SUSPEND;
     19a:	3b48      	subs	r3, #72	; 0x48
     19c:	7443      	strb	r3, [r0, #17]
		if ((resource->callback_enable & (1 << DMA_CALLBACK_CHANNEL_SUSPEND)) &&
     19e:	7c03      	ldrb	r3, [r0, #16]
     1a0:	075b      	lsls	r3, r3, #29
     1a2:	d5e1      	bpl.n	168 <DMAC_Handler+0x54>
			(resource->callback[DMA_CALLBACK_CHANNEL_SUSPEND])){
     1a4:	68c3      	ldr	r3, [r0, #12]
		if ((resource->callback_enable & (1 << DMA_CALLBACK_CHANNEL_SUSPEND)) &&
     1a6:	2b00      	cmp	r3, #0
     1a8:	d0de      	beq.n	168 <DMAC_Handler+0x54>
			resource->callback[DMA_CALLBACK_CHANNEL_SUSPEND](resource);
     1aa:	4798      	blx	r3
     1ac:	e7dc      	b.n	168 <DMAC_Handler+0x54>
     1ae:	46c0      	nop			; (mov r8, r8)
     1b0:	00001475 	.word	0x00001475
     1b4:	41004800 	.word	0x41004800
     1b8:	200009dc 	.word	0x200009dc
     1bc:	20000b80 	.word	0x20000b80
     1c0:	200009f0 	.word	0x200009f0
     1c4:	000014b5 	.word	0x000014b5

000001c8 <nvm_set_config>:
 *                        EEPROM and/or auxiliary space configuration from being
 *                        altered
 */
enum status_code nvm_set_config(
		const struct nvm_config *const config)
{
     1c8:	b510      	push	{r4, lr}
		case SYSTEM_CLOCK_APB_APBA:
			PM->APBAMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
     1ca:	4a1e      	ldr	r2, [pc, #120]	; (244 <nvm_set_config+0x7c>)
     1cc:	69d3      	ldr	r3, [r2, #28]
     1ce:	2104      	movs	r1, #4
     1d0:	430b      	orrs	r3, r1
     1d2:	61d3      	str	r3, [r2, #28]
	/* Turn on the digital interface clock */
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBB, PM_APBBMASK_NVMCTRL);
#endif

	/* Clear error flags */
	nvm_module->STATUS.reg = NVMCTRL_STATUS_MASK;
     1d4:	4b1c      	ldr	r3, [pc, #112]	; (248 <nvm_set_config+0x80>)
     1d6:	2220      	movs	r2, #32
     1d8:	32ff      	adds	r2, #255	; 0xff
     1da:	831a      	strh	r2, [r3, #24]
static inline bool nvm_is_ready(void)
{
	/* Get a pointer to the module hardware instance */
	Nvmctrl *const nvm_module = NVMCTRL;

	return nvm_module->INTFLAG.reg & NVMCTRL_INTFLAG_READY;
     1dc:	7d1a      	ldrb	r2, [r3, #20]

	/* Check if the module is busy */
	if (!nvm_is_ready()) {
		return STATUS_BUSY;
     1de:	2305      	movs	r3, #5
	if (!nvm_is_ready()) {
     1e0:	07d2      	lsls	r2, r2, #31
     1e2:	d401      	bmi.n	1e8 <nvm_set_config+0x20>
	if (nvm_module->STATUS.reg & NVMCTRL_STATUS_SB) {
		return STATUS_ERR_IO;
	}

	return STATUS_OK;
}
     1e4:	0018      	movs	r0, r3
     1e6:	bd10      	pop	{r4, pc}
			NVMCTRL_CTRLB_SLEEPPRM(config->sleep_power_mode) |
     1e8:	7803      	ldrb	r3, [r0, #0]
     1ea:	021b      	lsls	r3, r3, #8
     1ec:	22c0      	movs	r2, #192	; 0xc0
     1ee:	0092      	lsls	r2, r2, #2
     1f0:	4013      	ands	r3, r2
			((config->manual_page_write & 0x01) << NVMCTRL_CTRLB_MANW_Pos) |
     1f2:	7841      	ldrb	r1, [r0, #1]
     1f4:	01c9      	lsls	r1, r1, #7
     1f6:	22ff      	movs	r2, #255	; 0xff
     1f8:	400a      	ands	r2, r1
			NVMCTRL_CTRLB_SLEEPPRM(config->sleep_power_mode) |
     1fa:	4313      	orrs	r3, r2
			NVMCTRL_CTRLB_RWS(config->wait_states) |
     1fc:	7881      	ldrb	r1, [r0, #2]
     1fe:	0049      	lsls	r1, r1, #1
     200:	221e      	movs	r2, #30
     202:	400a      	ands	r2, r1
			((config->manual_page_write & 0x01) << NVMCTRL_CTRLB_MANW_Pos) |
     204:	4313      	orrs	r3, r2
			((config->disable_cache & 0x01) << NVMCTRL_CTRLB_CACHEDIS_Pos) |
     206:	78c2      	ldrb	r2, [r0, #3]
     208:	0492      	lsls	r2, r2, #18
     20a:	2180      	movs	r1, #128	; 0x80
     20c:	02c9      	lsls	r1, r1, #11
     20e:	400a      	ands	r2, r1
			NVMCTRL_CTRLB_RWS(config->wait_states) |
     210:	4313      	orrs	r3, r2
			NVMCTRL_CTRLB_READMODE(config->cache_readmode);
     212:	7902      	ldrb	r2, [r0, #4]
     214:	0412      	lsls	r2, r2, #16
     216:	21c0      	movs	r1, #192	; 0xc0
     218:	0289      	lsls	r1, r1, #10
     21a:	400a      	ands	r2, r1
			((config->disable_cache & 0x01) << NVMCTRL_CTRLB_CACHEDIS_Pos) |
     21c:	4313      	orrs	r3, r2
	nvm_module->CTRLB.reg =
     21e:	4a0a      	ldr	r2, [pc, #40]	; (248 <nvm_set_config+0x80>)
     220:	6053      	str	r3, [r2, #4]
	_nvm_dev.page_size         = (8 << nvm_module->PARAM.bit.PSZ);
     222:	6893      	ldr	r3, [r2, #8]
     224:	035b      	lsls	r3, r3, #13
     226:	0f5b      	lsrs	r3, r3, #29
     228:	4908      	ldr	r1, [pc, #32]	; (24c <nvm_set_config+0x84>)
     22a:	2408      	movs	r4, #8
     22c:	409c      	lsls	r4, r3
     22e:	800c      	strh	r4, [r1, #0]
	_nvm_dev.number_of_pages   = nvm_module->PARAM.bit.NVMP;
     230:	6893      	ldr	r3, [r2, #8]
     232:	804b      	strh	r3, [r1, #2]
	_nvm_dev.manual_page_write = config->manual_page_write;
     234:	7843      	ldrb	r3, [r0, #1]
     236:	710b      	strb	r3, [r1, #4]
	if (nvm_module->STATUS.reg & NVMCTRL_STATUS_SB) {
     238:	8b13      	ldrh	r3, [r2, #24]
     23a:	05db      	lsls	r3, r3, #23
	return STATUS_OK;
     23c:	0fdb      	lsrs	r3, r3, #31
     23e:	011b      	lsls	r3, r3, #4
     240:	e7d0      	b.n	1e4 <nvm_set_config+0x1c>
     242:	46c0      	nop			; (mov r8, r8)
     244:	40000400 	.word	0x40000400
     248:	41004000 	.word	0x41004000
     24c:	20000a40 	.word	0x20000a40

00000250 <nvm_execute_command>:
 */
enum status_code nvm_execute_command(
		const enum nvm_command command,
		const uint32_t address,
		const uint32_t parameter)
{
     250:	b530      	push	{r4, r5, lr}
     252:	0004      	movs	r4, r0
	uint32_t ctrlb_bak;

	/* Check that the address given is valid  */
	if (address > ((uint32_t)_nvm_dev.page_size * _nvm_dev.number_of_pages)
     254:	4a22      	ldr	r2, [pc, #136]	; (2e0 <nvm_execute_command+0x90>)
     256:	8810      	ldrh	r0, [r2, #0]
     258:	8853      	ldrh	r3, [r2, #2]
     25a:	4343      	muls	r3, r0
     25c:	428b      	cmp	r3, r1
     25e:	d206      	bcs.n	26e <nvm_execute_command+0x1e>
		&& !(address >= NVMCTRL_AUX0_ADDRESS && address <= NVMCTRL_AUX1_ADDRESS )){
     260:	2280      	movs	r2, #128	; 0x80
     262:	0192      	lsls	r2, r2, #6
		if (address >= ((uint32_t)NVMCTRL_RWW_EEPROM_SIZE + NVMCTRL_RWW_EEPROM_ADDR)
			|| address < NVMCTRL_RWW_EEPROM_ADDR){
			return STATUS_ERR_BAD_ADDRESS;
		}
#else
		return STATUS_ERR_BAD_ADDRESS;
     264:	2018      	movs	r0, #24
		&& !(address >= NVMCTRL_AUX0_ADDRESS && address <= NVMCTRL_AUX1_ADDRESS )){
     266:	4b1f      	ldr	r3, [pc, #124]	; (2e4 <nvm_execute_command+0x94>)
     268:	18cb      	adds	r3, r1, r3
     26a:	4293      	cmp	r3, r2
     26c:	d80e      	bhi.n	28c <nvm_execute_command+0x3c>

	/* Get a pointer to the module hardware instance */
	Nvmctrl *const nvm_module = NVMCTRL;

	/* Turn off cache before issuing flash commands */
	ctrlb_bak = nvm_module->CTRLB.reg;
     26e:	4b1e      	ldr	r3, [pc, #120]	; (2e8 <nvm_execute_command+0x98>)
     270:	685d      	ldr	r5, [r3, #4]
#if (SAMC20) || (SAMC21)
	nvm_module->CTRLB.reg = ((ctrlb_bak &(~(NVMCTRL_CTRLB_CACHEDIS(0x2))))
							| NVMCTRL_CTRLB_CACHEDIS(0x1));
#else
	nvm_module->CTRLB.reg = ctrlb_bak | NVMCTRL_CTRLB_CACHEDIS;
     272:	2280      	movs	r2, #128	; 0x80
     274:	02d2      	lsls	r2, r2, #11
     276:	432a      	orrs	r2, r5
     278:	605a      	str	r2, [r3, #4]
#endif

	/* Clear error flags */
	nvm_module->STATUS.reg = NVMCTRL_STATUS_MASK;
     27a:	2220      	movs	r2, #32
     27c:	32ff      	adds	r2, #255	; 0xff
     27e:	831a      	strh	r2, [r3, #24]
     280:	7d1b      	ldrb	r3, [r3, #20]

	/* Check if the module is busy */
	if (!nvm_is_ready()) {
     282:	07db      	lsls	r3, r3, #31
     284:	d403      	bmi.n	28e <nvm_execute_command+0x3e>
		/* Restore the setting */
		nvm_module->CTRLB.reg = ctrlb_bak;
     286:	4b18      	ldr	r3, [pc, #96]	; (2e8 <nvm_execute_command+0x98>)
     288:	605d      	str	r5, [r3, #4]
		return STATUS_BUSY;
     28a:	2005      	movs	r0, #5

	/* Restore the setting */
	nvm_module->CTRLB.reg = ctrlb_bak;

	return STATUS_OK;
}
     28c:	bd30      	pop	{r4, r5, pc}
	switch (command) {
     28e:	2c45      	cmp	r4, #69	; 0x45
     290:	d822      	bhi.n	2d8 <nvm_execute_command+0x88>
     292:	00a3      	lsls	r3, r4, #2
     294:	4a15      	ldr	r2, [pc, #84]	; (2ec <nvm_execute_command+0x9c>)
     296:	58d3      	ldr	r3, [r2, r3]
     298:	469f      	mov	pc, r3
			if (nvm_module->STATUS.reg & NVMCTRL_STATUS_SB) {
     29a:	4b13      	ldr	r3, [pc, #76]	; (2e8 <nvm_execute_command+0x98>)
     29c:	8b1b      	ldrh	r3, [r3, #24]
     29e:	05db      	lsls	r3, r3, #23
     2a0:	d503      	bpl.n	2aa <nvm_execute_command+0x5a>
				nvm_module->CTRLB.reg = ctrlb_bak;
     2a2:	4b11      	ldr	r3, [pc, #68]	; (2e8 <nvm_execute_command+0x98>)
     2a4:	605d      	str	r5, [r3, #4]
				return STATUS_ERR_IO;
     2a6:	2010      	movs	r0, #16
     2a8:	e7f0      	b.n	28c <nvm_execute_command+0x3c>
			nvm_module->ADDR.reg = (uintptr_t)&NVM_MEMORY[address / 4];
     2aa:	0889      	lsrs	r1, r1, #2
     2ac:	0049      	lsls	r1, r1, #1
     2ae:	4b0e      	ldr	r3, [pc, #56]	; (2e8 <nvm_execute_command+0x98>)
     2b0:	61d9      	str	r1, [r3, #28]
			break;
     2b2:	e003      	b.n	2bc <nvm_execute_command+0x6c>
			nvm_module->ADDR.reg = (uintptr_t)&NVM_MEMORY[address / 4];
     2b4:	0889      	lsrs	r1, r1, #2
     2b6:	0049      	lsls	r1, r1, #1
     2b8:	4b0b      	ldr	r3, [pc, #44]	; (2e8 <nvm_execute_command+0x98>)
     2ba:	61d9      	str	r1, [r3, #28]
	nvm_module->CTRLA.reg = command | NVMCTRL_CTRLA_CMDEX_KEY;
     2bc:	20a5      	movs	r0, #165	; 0xa5
     2be:	0200      	lsls	r0, r0, #8
     2c0:	4304      	orrs	r4, r0
     2c2:	4b09      	ldr	r3, [pc, #36]	; (2e8 <nvm_execute_command+0x98>)
     2c4:	801c      	strh	r4, [r3, #0]
     2c6:	0019      	movs	r1, r3
	while (!nvm_is_ready()) {
     2c8:	2201      	movs	r2, #1
     2ca:	7d0b      	ldrb	r3, [r1, #20]
     2cc:	4213      	tst	r3, r2
     2ce:	d0fc      	beq.n	2ca <nvm_execute_command+0x7a>
	nvm_module->CTRLB.reg = ctrlb_bak;
     2d0:	4b05      	ldr	r3, [pc, #20]	; (2e8 <nvm_execute_command+0x98>)
     2d2:	605d      	str	r5, [r3, #4]
	return STATUS_OK;
     2d4:	2000      	movs	r0, #0
     2d6:	e7d9      	b.n	28c <nvm_execute_command+0x3c>
			nvm_module->CTRLB.reg = ctrlb_bak;
     2d8:	4b03      	ldr	r3, [pc, #12]	; (2e8 <nvm_execute_command+0x98>)
     2da:	605d      	str	r5, [r3, #4]
			return STATUS_ERR_INVALID_ARG;
     2dc:	2017      	movs	r0, #23
     2de:	e7d5      	b.n	28c <nvm_execute_command+0x3c>
     2e0:	20000a40 	.word	0x20000a40
     2e4:	ff7fc000 	.word	0xff7fc000
     2e8:	41004000 	.word	0x41004000
     2ec:	000086ac 	.word	0x000086ac

000002f0 <nvm_write_buffer>:
 */
enum status_code nvm_write_buffer(
		const uint32_t destination_address,
		const uint8_t *buffer,
		uint16_t length)
{
     2f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	bool is_rww_eeprom = false;
#endif

	/* Check if the destination address is valid */
	if (destination_address >
			((uint32_t)_nvm_dev.page_size * _nvm_dev.number_of_pages)) {
     2f2:	4b25      	ldr	r3, [pc, #148]	; (388 <nvm_write_buffer+0x98>)
     2f4:	881d      	ldrh	r5, [r3, #0]
     2f6:	885b      	ldrh	r3, [r3, #2]
     2f8:	436b      	muls	r3, r5
			|| destination_address < NVMCTRL_RWW_EEPROM_ADDR){
			return STATUS_ERR_BAD_ADDRESS;
		}
		is_rww_eeprom = true;
#else
		return STATUS_ERR_BAD_ADDRESS;
     2fa:	2418      	movs	r4, #24
	if (destination_address >
     2fc:	4283      	cmp	r3, r0
     2fe:	d201      	bcs.n	304 <nvm_write_buffer+0x14>
				destination_address, 0);
#endif
	}

	return STATUS_OK;
}
     300:	0020      	movs	r0, r4
     302:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	if (destination_address & (_nvm_dev.page_size - 1)) {
     304:	1e6b      	subs	r3, r5, #1
     306:	4218      	tst	r0, r3
     308:	d1fa      	bne.n	300 <nvm_write_buffer+0x10>
		return STATUS_ERR_INVALID_ARG;
     30a:	3c01      	subs	r4, #1
	if (length > _nvm_dev.page_size) {
     30c:	4295      	cmp	r5, r2
     30e:	d3f7      	bcc.n	300 <nvm_write_buffer+0x10>
     310:	4b1e      	ldr	r3, [pc, #120]	; (38c <nvm_write_buffer+0x9c>)
     312:	7d1b      	ldrb	r3, [r3, #20]
		return STATUS_BUSY;
     314:	3c12      	subs	r4, #18
	if (!nvm_is_ready()) {
     316:	07db      	lsls	r3, r3, #31
     318:	d5f2      	bpl.n	300 <nvm_write_buffer+0x10>
	nvm_module->CTRLA.reg = NVM_COMMAND_PAGE_BUFFER_CLEAR | NVMCTRL_CTRLA_CMDEX_KEY;
     31a:	4c1d      	ldr	r4, [pc, #116]	; (390 <nvm_write_buffer+0xa0>)
     31c:	4b1b      	ldr	r3, [pc, #108]	; (38c <nvm_write_buffer+0x9c>)
     31e:	801c      	strh	r4, [r3, #0]
     320:	001d      	movs	r5, r3
	while (!nvm_is_ready()) {
     322:	2401      	movs	r4, #1
     324:	7d2b      	ldrb	r3, [r5, #20]
     326:	4223      	tst	r3, r4
     328:	d0fc      	beq.n	324 <nvm_write_buffer+0x34>
	nvm_module->STATUS.reg = NVMCTRL_STATUS_MASK;
     32a:	2420      	movs	r4, #32
     32c:	34ff      	adds	r4, #255	; 0xff
     32e:	4b17      	ldr	r3, [pc, #92]	; (38c <nvm_write_buffer+0x9c>)
     330:	831c      	strh	r4, [r3, #24]
	for (uint16_t i = 0; i < length; i += 2) {
     332:	2a00      	cmp	r2, #0
     334:	d022      	beq.n	37c <nvm_write_buffer+0x8c>
     336:	2301      	movs	r3, #1
     338:	0005      	movs	r5, r0
     33a:	439d      	bics	r5, r3
     33c:	2300      	movs	r3, #0
		if (i < (length - 1)) {
     33e:	1e57      	subs	r7, r2, #1
     340:	e009      	b.n	356 <nvm_write_buffer+0x66>
			data |= (buffer[i + 1] << 8);
     342:	18ce      	adds	r6, r1, r3
     344:	7876      	ldrb	r6, [r6, #1]
     346:	0236      	lsls	r6, r6, #8
     348:	4334      	orrs	r4, r6
		NVM_MEMORY[nvm_address++] = data;
     34a:	802c      	strh	r4, [r5, #0]
	for (uint16_t i = 0; i < length; i += 2) {
     34c:	3302      	adds	r3, #2
     34e:	b29b      	uxth	r3, r3
     350:	3502      	adds	r5, #2
     352:	429a      	cmp	r2, r3
     354:	d904      	bls.n	360 <nvm_write_buffer+0x70>
		data = buffer[i];
     356:	5ccc      	ldrb	r4, [r1, r3]
		if (i < (length - 1)) {
     358:	42bb      	cmp	r3, r7
     35a:	dbf2      	blt.n	342 <nvm_write_buffer+0x52>
		data = buffer[i];
     35c:	b2a4      	uxth	r4, r4
     35e:	e7f4      	b.n	34a <nvm_write_buffer+0x5a>
	if ((_nvm_dev.manual_page_write == false) && (length < NVMCTRL_PAGE_SIZE)) {
     360:	4b09      	ldr	r3, [pc, #36]	; (388 <nvm_write_buffer+0x98>)
     362:	791b      	ldrb	r3, [r3, #4]
	return STATUS_OK;
     364:	2400      	movs	r4, #0
	if ((_nvm_dev.manual_page_write == false) && (length < NVMCTRL_PAGE_SIZE)) {
     366:	2b00      	cmp	r3, #0
     368:	d1ca      	bne.n	300 <nvm_write_buffer+0x10>
     36a:	2a3f      	cmp	r2, #63	; 0x3f
     36c:	d8c8      	bhi.n	300 <nvm_write_buffer+0x10>
		return nvm_execute_command(NVM_COMMAND_WRITE_PAGE,
     36e:	2200      	movs	r2, #0
     370:	0001      	movs	r1, r0
     372:	2004      	movs	r0, #4
     374:	4b07      	ldr	r3, [pc, #28]	; (394 <nvm_write_buffer+0xa4>)
     376:	4798      	blx	r3
     378:	0004      	movs	r4, r0
     37a:	e7c1      	b.n	300 <nvm_write_buffer+0x10>
	if ((_nvm_dev.manual_page_write == false) && (length < NVMCTRL_PAGE_SIZE)) {
     37c:	4b02      	ldr	r3, [pc, #8]	; (388 <nvm_write_buffer+0x98>)
     37e:	791b      	ldrb	r3, [r3, #4]
	return STATUS_OK;
     380:	2400      	movs	r4, #0
	if ((_nvm_dev.manual_page_write == false) && (length < NVMCTRL_PAGE_SIZE)) {
     382:	2b00      	cmp	r3, #0
     384:	d0f3      	beq.n	36e <nvm_write_buffer+0x7e>
     386:	e7bb      	b.n	300 <nvm_write_buffer+0x10>
     388:	20000a40 	.word	0x20000a40
     38c:	41004000 	.word	0x41004000
     390:	ffffa544 	.word	0xffffa544
     394:	00000251 	.word	0x00000251

00000398 <nvm_read_buffer>:
 */
enum status_code nvm_read_buffer(
		const uint32_t source_address,
		uint8_t *const buffer,
		uint16_t length)
{
     398:	b570      	push	{r4, r5, r6, lr}
	/* Check if the source address is valid */
	if (source_address >
			((uint32_t)_nvm_dev.page_size * _nvm_dev.number_of_pages)) {
     39a:	4b18      	ldr	r3, [pc, #96]	; (3fc <nvm_read_buffer+0x64>)
     39c:	881d      	ldrh	r5, [r3, #0]
     39e:	885b      	ldrh	r3, [r3, #2]
     3a0:	436b      	muls	r3, r5
		if (source_address >= ((uint32_t)NVMCTRL_RWW_EEPROM_SIZE + NVMCTRL_RWW_EEPROM_ADDR)
			|| source_address < NVMCTRL_RWW_EEPROM_ADDR){
			return STATUS_ERR_BAD_ADDRESS;
		}
#else
		return STATUS_ERR_BAD_ADDRESS;
     3a2:	2418      	movs	r4, #24
	if (source_address >
     3a4:	4283      	cmp	r3, r0
     3a6:	d201      	bcs.n	3ac <nvm_read_buffer+0x14>
			buffer[i + 1] = (data >> 8);
		}
	}

	return STATUS_OK;
}
     3a8:	0020      	movs	r0, r4
     3aa:	bd70      	pop	{r4, r5, r6, pc}
	if (source_address & (_nvm_dev.page_size - 1)) {
     3ac:	1e6b      	subs	r3, r5, #1
     3ae:	4218      	tst	r0, r3
     3b0:	d1fa      	bne.n	3a8 <nvm_read_buffer+0x10>
		return STATUS_ERR_INVALID_ARG;
     3b2:	3c01      	subs	r4, #1
	if (length > _nvm_dev.page_size) {
     3b4:	4295      	cmp	r5, r2
     3b6:	d3f7      	bcc.n	3a8 <nvm_read_buffer+0x10>
     3b8:	4b11      	ldr	r3, [pc, #68]	; (400 <nvm_read_buffer+0x68>)
     3ba:	7d1b      	ldrb	r3, [r3, #20]
		return STATUS_BUSY;
     3bc:	3c12      	subs	r4, #18
	if (!nvm_is_ready()) {
     3be:	07db      	lsls	r3, r3, #31
     3c0:	d5f2      	bpl.n	3a8 <nvm_read_buffer+0x10>
	nvm_module->STATUS.reg = NVMCTRL_STATUS_MASK;
     3c2:	2420      	movs	r4, #32
     3c4:	34ff      	adds	r4, #255	; 0xff
     3c6:	4b0e      	ldr	r3, [pc, #56]	; (400 <nvm_read_buffer+0x68>)
     3c8:	831c      	strh	r4, [r3, #24]
	for (uint16_t i = 0; i < length; i += 2) {
     3ca:	2a00      	cmp	r2, #0
     3cc:	d014      	beq.n	3f8 <nvm_read_buffer+0x60>
     3ce:	2301      	movs	r3, #1
     3d0:	4398      	bics	r0, r3
     3d2:	2300      	movs	r3, #0
		if (i < (length - 1)) {
     3d4:	1e56      	subs	r6, r2, #1
     3d6:	e004      	b.n	3e2 <nvm_read_buffer+0x4a>
	for (uint16_t i = 0; i < length; i += 2) {
     3d8:	3302      	adds	r3, #2
     3da:	b29b      	uxth	r3, r3
     3dc:	3002      	adds	r0, #2
     3de:	429a      	cmp	r2, r3
     3e0:	d908      	bls.n	3f4 <nvm_read_buffer+0x5c>
		uint16_t data = NVM_MEMORY[page_address++];
     3e2:	8804      	ldrh	r4, [r0, #0]
     3e4:	b2a4      	uxth	r4, r4
		buffer[i] = (data & 0xFF);
     3e6:	54cc      	strb	r4, [r1, r3]
		if (i < (length - 1)) {
     3e8:	42b3      	cmp	r3, r6
     3ea:	daf5      	bge.n	3d8 <nvm_read_buffer+0x40>
			buffer[i + 1] = (data >> 8);
     3ec:	18cd      	adds	r5, r1, r3
     3ee:	0a24      	lsrs	r4, r4, #8
     3f0:	706c      	strb	r4, [r5, #1]
     3f2:	e7f1      	b.n	3d8 <nvm_read_buffer+0x40>
	return STATUS_OK;
     3f4:	2400      	movs	r4, #0
     3f6:	e7d7      	b.n	3a8 <nvm_read_buffer+0x10>
     3f8:	2400      	movs	r4, #0
     3fa:	e7d5      	b.n	3a8 <nvm_read_buffer+0x10>
     3fc:	20000a40 	.word	0x20000a40
     400:	41004000 	.word	0x41004000

00000404 <nvm_erase_row>:
		bool is_rww_eeprom = false;
#endif

	/* Check if the row address is valid */
	if (row_address >
			((uint32_t)_nvm_dev.page_size * _nvm_dev.number_of_pages)) {
     404:	4b13      	ldr	r3, [pc, #76]	; (454 <nvm_erase_row+0x50>)
     406:	881a      	ldrh	r2, [r3, #0]
     408:	885b      	ldrh	r3, [r3, #2]
     40a:	4353      	muls	r3, r2
			|| row_address < NVMCTRL_RWW_EEPROM_ADDR){
			return STATUS_ERR_BAD_ADDRESS;
		}
		is_rww_eeprom = true;
#else
		return STATUS_ERR_BAD_ADDRESS;
     40c:	2118      	movs	r1, #24
	if (row_address >
     40e:	4283      	cmp	r3, r0
     410:	d201      	bcs.n	416 <nvm_erase_row+0x12>
	if ((enum nvm_error)(nvm_module->STATUS.reg & NVM_ERRORS_MASK) != NVM_ERROR_NONE) {
		return STATUS_ABORTED;
	}

	return STATUS_OK;
}
     412:	0008      	movs	r0, r1
     414:	4770      	bx	lr
	if (row_address & ((_nvm_dev.page_size * NVMCTRL_ROW_PAGES) - 1)) {
     416:	0092      	lsls	r2, r2, #2
     418:	3a01      	subs	r2, #1
     41a:	4210      	tst	r0, r2
     41c:	d1f9      	bne.n	412 <nvm_erase_row+0xe>
     41e:	4b0e      	ldr	r3, [pc, #56]	; (458 <nvm_erase_row+0x54>)
     420:	7d1b      	ldrb	r3, [r3, #20]
		return STATUS_BUSY;
     422:	3913      	subs	r1, #19
	if (!nvm_is_ready()) {
     424:	07db      	lsls	r3, r3, #31
     426:	d5f4      	bpl.n	412 <nvm_erase_row+0xe>
	nvm_module->STATUS.reg = NVMCTRL_STATUS_MASK;
     428:	4b0b      	ldr	r3, [pc, #44]	; (458 <nvm_erase_row+0x54>)
     42a:	2220      	movs	r2, #32
     42c:	32ff      	adds	r2, #255	; 0xff
     42e:	831a      	strh	r2, [r3, #24]
	nvm_module->ADDR.reg  = (uintptr_t)&NVM_MEMORY[row_address / 4];
     430:	0880      	lsrs	r0, r0, #2
     432:	0040      	lsls	r0, r0, #1
     434:	61d8      	str	r0, [r3, #28]
	nvm_module->CTRLA.reg = NVM_COMMAND_ERASE_ROW | NVMCTRL_CTRLA_CMDEX_KEY;
     436:	4a09      	ldr	r2, [pc, #36]	; (45c <nvm_erase_row+0x58>)
     438:	801a      	strh	r2, [r3, #0]
     43a:	0019      	movs	r1, r3
	while (!nvm_is_ready()) {
     43c:	2201      	movs	r2, #1
     43e:	7d0b      	ldrb	r3, [r1, #20]
     440:	4213      	tst	r3, r2
     442:	d0fc      	beq.n	43e <nvm_erase_row+0x3a>
	if ((enum nvm_error)(nvm_module->STATUS.reg & NVM_ERRORS_MASK) != NVM_ERROR_NONE) {
     444:	4b04      	ldr	r3, [pc, #16]	; (458 <nvm_erase_row+0x54>)
     446:	8b19      	ldrh	r1, [r3, #24]
     448:	201c      	movs	r0, #28
     44a:	4001      	ands	r1, r0
	return STATUS_OK;
     44c:	1e48      	subs	r0, r1, #1
     44e:	4181      	sbcs	r1, r0
     450:	0089      	lsls	r1, r1, #2
     452:	e7de      	b.n	412 <nvm_erase_row+0xe>
     454:	20000a40 	.word	0x20000a40
     458:	41004000 	.word	0x41004000
     45c:	ffffa502 	.word	0xffffa502

00000460 <nvm_get_parameters>:

	/* Get a pointer to the module hardware instance */
	Nvmctrl *const nvm_module = NVMCTRL;

	/* Clear error flags */
	nvm_module->STATUS.reg = NVMCTRL_STATUS_MASK;
     460:	4b13      	ldr	r3, [pc, #76]	; (4b0 <nvm_get_parameters+0x50>)
     462:	2220      	movs	r2, #32
     464:	32ff      	adds	r2, #255	; 0xff
     466:	831a      	strh	r2, [r3, #24]

	/* Read out from the PARAM register */
	uint32_t param_reg = nvm_module->PARAM.reg;
     468:	6899      	ldr	r1, [r3, #8]

	/* Mask out page size exponent and convert to a number of bytes */
	parameters->page_size =
			8 << ((param_reg & NVMCTRL_PARAM_PSZ_Msk) >> NVMCTRL_PARAM_PSZ_Pos);
     46a:	034a      	lsls	r2, r1, #13
     46c:	0f52      	lsrs	r2, r2, #29
     46e:	2308      	movs	r3, #8
     470:	4093      	lsls	r3, r2
	parameters->page_size =
     472:	7003      	strb	r3, [r0, #0]

	/* Mask out number of pages count */
	parameters->nvm_number_of_pages =
     474:	8041      	strh	r1, [r0, #2]
			(param_reg & NVMCTRL_PARAM_RWWEEP_Msk) >> NVMCTRL_PARAM_RWWEEP_Pos;
#endif

	/* Read the current EEPROM fuse value from the USER row */
	uint16_t eeprom_fuse_value =
			(NVM_USER_MEMORY[NVMCTRL_FUSES_EEPROM_SIZE_Pos / 16] &
     476:	4b0f      	ldr	r3, [pc, #60]	; (4b4 <nvm_get_parameters+0x54>)
     478:	881b      	ldrh	r3, [r3, #0]
	uint16_t eeprom_fuse_value =
     47a:	065b      	lsls	r3, r3, #25
     47c:	0f5b      	lsrs	r3, r3, #29
			NVMCTRL_FUSES_EEPROM_SIZE_Msk) >> NVMCTRL_FUSES_EEPROM_SIZE_Pos;

	/* Translate the EEPROM fuse byte value to a number of NVM pages */
	if (eeprom_fuse_value == 7) {
     47e:	2b07      	cmp	r3, #7
     480:	d010      	beq.n	4a4 <nvm_get_parameters+0x44>
		parameters->eeprom_number_of_pages = 0;
	}
	else {
		parameters->eeprom_number_of_pages =
				NVMCTRL_ROW_PAGES << (6 - eeprom_fuse_value);
     482:	2206      	movs	r2, #6
     484:	1ad2      	subs	r2, r2, r3
     486:	2304      	movs	r3, #4
     488:	4093      	lsls	r3, r2
		parameters->eeprom_number_of_pages =
     48a:	6043      	str	r3, [r0, #4]
	}

	/* Read the current BOOTSZ fuse value from the USER row */
	uint16_t boot_fuse_value =
			(NVM_USER_MEMORY[NVMCTRL_FUSES_BOOTPROT_Pos / 16] &
     48c:	4b09      	ldr	r3, [pc, #36]	; (4b4 <nvm_get_parameters+0x54>)
     48e:	881b      	ldrh	r3, [r3, #0]
	uint16_t boot_fuse_value =
     490:	2207      	movs	r2, #7
     492:	4013      	ands	r3, r2
			NVMCTRL_FUSES_BOOTPROT_Msk) >> NVMCTRL_FUSES_BOOTPROT_Pos;

	/* Translate the BOOTSZ fuse byte value to a number of NVM pages */
	if (boot_fuse_value == 7) {
     494:	2b07      	cmp	r3, #7
     496:	d008      	beq.n	4aa <nvm_get_parameters+0x4a>
		parameters->bootloader_number_of_pages = 0;
	}
	else {
		parameters->bootloader_number_of_pages =
				NVMCTRL_ROW_PAGES << (7 - boot_fuse_value);
     498:	2207      	movs	r2, #7
     49a:	1ad2      	subs	r2, r2, r3
     49c:	2304      	movs	r3, #4
     49e:	4093      	lsls	r3, r2
		parameters->bootloader_number_of_pages =
     4a0:	6083      	str	r3, [r0, #8]
	}
}
     4a2:	4770      	bx	lr
		parameters->eeprom_number_of_pages = 0;
     4a4:	2300      	movs	r3, #0
     4a6:	6043      	str	r3, [r0, #4]
     4a8:	e7f0      	b.n	48c <nvm_get_parameters+0x2c>
		parameters->bootloader_number_of_pages = 0;
     4aa:	2300      	movs	r3, #0
     4ac:	6083      	str	r3, [r0, #8]
     4ae:	e7f8      	b.n	4a2 <nvm_get_parameters+0x42>
     4b0:	41004000 	.word	0x41004000
     4b4:	00804000 	.word	0x00804000

000004b8 <_i2c_master_wait_for_sync>:
{
	/* Sanity check */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_hw = &(module->hw->I2CM);
     4b8:	6801      	ldr	r1, [r0, #0]

#if defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_1)
	return (i2c_hw->STATUS.reg & SERCOM_I2CM_STATUS_SYNCBUSY);
#elif defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_2)
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
     4ba:	2207      	movs	r2, #7
     4bc:	69cb      	ldr	r3, [r1, #28]
		const struct i2c_master_module *const module)
{
	/* Sanity check */
	Assert(module);

	while (i2c_master_is_syncing(module)) {
     4be:	421a      	tst	r2, r3
     4c0:	d1fc      	bne.n	4bc <_i2c_master_wait_for_sync+0x4>
		/* Wait for I2C module to sync. */
	}
}
     4c2:	4770      	bx	lr

000004c4 <i2c_master_init>:
 */
enum status_code i2c_master_init(
		struct i2c_master_module *const module,
		Sercom *const hw,
		const struct i2c_master_config *const config)
{
     4c4:	b5f0      	push	{r4, r5, r6, r7, lr}
     4c6:	46d6      	mov	lr, sl
     4c8:	464f      	mov	r7, r9
     4ca:	4646      	mov	r6, r8
     4cc:	b5c0      	push	{r6, r7, lr}
     4ce:	b08a      	sub	sp, #40	; 0x28
     4d0:	0006      	movs	r6, r0
     4d2:	000f      	movs	r7, r1
     4d4:	0014      	movs	r4, r2
	Assert(module);
	Assert(hw);
	Assert(config);

	/* Initialize software module */
	module->hw = hw;
     4d6:	6031      	str	r1, [r6, #0]

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     4d8:	0008      	movs	r0, r1
     4da:	4b97      	ldr	r3, [pc, #604]	; (738 <i2c_master_init+0x274>)
     4dc:	4798      	blx	r3
			break;

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
     4de:	4a97      	ldr	r2, [pc, #604]	; (73c <i2c_master_init+0x278>)
     4e0:	6a11      	ldr	r1, [r2, #32]
		gclk_index   = SERCOM5_GCLK_ID_CORE;
	} else {
		gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
	}
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
     4e2:	1c85      	adds	r5, r0, #2
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBD, 1 << pm_index);
	} else {
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
	}
#else
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
     4e4:	2301      	movs	r3, #1
     4e6:	40ab      	lsls	r3, r5
     4e8:	430b      	orrs	r3, r1
     4ea:	6213      	str	r3, [r2, #32]
#endif

	/* Set up the GCLK for the module */
	struct system_gclk_chan_config gclk_chan_conf;
	system_gclk_chan_get_config_defaults(&gclk_chan_conf);
	gclk_chan_conf.source_generator = config->generator_source;
     4ec:	a909      	add	r1, sp, #36	; 0x24
     4ee:	7b23      	ldrb	r3, [r4, #12]
     4f0:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     4f2:	3014      	adds	r0, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
     4f4:	b2c5      	uxtb	r5, r0
     4f6:	0028      	movs	r0, r5
     4f8:	4b91      	ldr	r3, [pc, #580]	; (740 <i2c_master_init+0x27c>)
     4fa:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
     4fc:	0028      	movs	r0, r5
     4fe:	4b91      	ldr	r3, [pc, #580]	; (744 <i2c_master_init+0x280>)
     500:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
     502:	7b20      	ldrb	r0, [r4, #12]
     504:	2100      	movs	r1, #0
     506:	4b90      	ldr	r3, [pc, #576]	; (748 <i2c_master_init+0x284>)
     508:	4798      	blx	r3

	/* Check if module is enabled. */
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
     50a:	683b      	ldr	r3, [r7, #0]
		return STATUS_ERR_DENIED;
     50c:	201c      	movs	r0, #28
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
     50e:	079b      	lsls	r3, r3, #30
     510:	d505      	bpl.n	51e <i2c_master_init+0x5a>
	/* Set sercom module to operate in I2C master mode. */
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);

	/* Set config and return status. */
	return _i2c_master_set_config(module, config);
}
     512:	b00a      	add	sp, #40	; 0x28
     514:	bc1c      	pop	{r2, r3, r4}
     516:	4690      	mov	r8, r2
     518:	4699      	mov	r9, r3
     51a:	46a2      	mov	sl, r4
     51c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
     51e:	683b      	ldr	r3, [r7, #0]
		return STATUS_BUSY;
     520:	3817      	subs	r0, #23
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
     522:	07db      	lsls	r3, r3, #31
     524:	d4f5      	bmi.n	512 <i2c_master_init+0x4e>
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);
     526:	2314      	movs	r3, #20
     528:	603b      	str	r3, [r7, #0]
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     52a:	6833      	ldr	r3, [r6, #0]
     52c:	4698      	mov	r8, r3
	uint8_t sercom_index = _sercom_get_sercom_inst_index(sercom_hw);
     52e:	0018      	movs	r0, r3
     530:	4b81      	ldr	r3, [pc, #516]	; (738 <i2c_master_init+0x274>)
     532:	4798      	blx	r3
     534:	0005      	movs	r5, r0
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
     536:	2380      	movs	r3, #128	; 0x80
     538:	aa08      	add	r2, sp, #32
     53a:	7013      	strb	r3, [r2, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     53c:	2300      	movs	r3, #0
     53e:	7053      	strb	r3, [r2, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
     540:	2201      	movs	r2, #1
     542:	a908      	add	r1, sp, #32
     544:	708a      	strb	r2, [r1, #2]
	config->powersave    = false;
     546:	70cb      	strb	r3, [r1, #3]
	uint32_t pad0 = config->pinmux_pad0;
     548:	69e0      	ldr	r0, [r4, #28]
	uint32_t pad1 = config->pinmux_pad1;
     54a:	6a27      	ldr	r7, [r4, #32]
	if (pad0 == PINMUX_DEFAULT) {
     54c:	2800      	cmp	r0, #0
     54e:	d100      	bne.n	552 <i2c_master_init+0x8e>
     550:	e0af      	b.n	6b2 <i2c_master_init+0x1ee>
	pin_conf.mux_position = pad0 & 0xFFFF;
     552:	ab08      	add	r3, sp, #32
     554:	7018      	strb	r0, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
     556:	2302      	movs	r3, #2
     558:	aa08      	add	r2, sp, #32
     55a:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad0 >> 16, &pin_conf);
     55c:	0c00      	lsrs	r0, r0, #16
     55e:	b2c0      	uxtb	r0, r0
     560:	0011      	movs	r1, r2
     562:	4b7a      	ldr	r3, [pc, #488]	; (74c <i2c_master_init+0x288>)
     564:	4798      	blx	r3
	if (pad1 == PINMUX_DEFAULT) {
     566:	2f00      	cmp	r7, #0
     568:	d100      	bne.n	56c <i2c_master_init+0xa8>
     56a:	e0a7      	b.n	6bc <i2c_master_init+0x1f8>
	pin_conf.mux_position = pad1 & 0xFFFF;
     56c:	ab08      	add	r3, sp, #32
     56e:	701f      	strb	r7, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
     570:	2302      	movs	r3, #2
     572:	aa08      	add	r2, sp, #32
     574:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad1 >> 16, &pin_conf);
     576:	0c3f      	lsrs	r7, r7, #16
     578:	b2f8      	uxtb	r0, r7
     57a:	0011      	movs	r1, r2
     57c:	4b73      	ldr	r3, [pc, #460]	; (74c <i2c_master_init+0x288>)
     57e:	4798      	blx	r3
	module->unknown_bus_state_timeout = config->unknown_bus_state_timeout;
     580:	8aa3      	ldrh	r3, [r4, #20]
     582:	80f3      	strh	r3, [r6, #6]
	module->buffer_timeout = config->buffer_timeout;
     584:	8ae3      	ldrh	r3, [r4, #22]
     586:	8133      	strh	r3, [r6, #8]
	if (config->run_in_standby || system_is_debugger_present()) {
     588:	7e23      	ldrb	r3, [r4, #24]
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
     58a:	2280      	movs	r2, #128	; 0x80
	if (config->run_in_standby || system_is_debugger_present()) {
     58c:	2b00      	cmp	r3, #0
     58e:	d104      	bne.n	59a <i2c_master_init+0xd6>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
     590:	4b6f      	ldr	r3, [pc, #444]	; (750 <i2c_master_init+0x28c>)
     592:	789b      	ldrb	r3, [r3, #2]
     594:	079b      	lsls	r3, r3, #30
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
     596:	0fdb      	lsrs	r3, r3, #31
     598:	01da      	lsls	r2, r3, #7
	tmp_ctrla |= config->transfer_speed;
     59a:	68a1      	ldr	r1, [r4, #8]
     59c:	6923      	ldr	r3, [r4, #16]
     59e:	430b      	orrs	r3, r1
     5a0:	4313      	orrs	r3, r2
	if (config->scl_low_timeout) {
     5a2:	2224      	movs	r2, #36	; 0x24
     5a4:	5ca2      	ldrb	r2, [r4, r2]
     5a6:	2a00      	cmp	r2, #0
     5a8:	d002      	beq.n	5b0 <i2c_master_init+0xec>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_LOWTOUTEN;
     5aa:	2280      	movs	r2, #128	; 0x80
     5ac:	05d2      	lsls	r2, r2, #23
     5ae:	4313      	orrs	r3, r2
		tmp_ctrla |= config->inactive_timeout;
     5b0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
     5b2:	4313      	orrs	r3, r2
	if (config->scl_stretch_only_after_ack_bit || (config->transfer_speed == I2C_MASTER_SPEED_HIGH_SPEED)) {
     5b4:	222c      	movs	r2, #44	; 0x2c
     5b6:	5ca2      	ldrb	r2, [r4, r2]
     5b8:	2a00      	cmp	r2, #0
     5ba:	d103      	bne.n	5c4 <i2c_master_init+0x100>
     5bc:	2280      	movs	r2, #128	; 0x80
     5be:	0492      	lsls	r2, r2, #18
     5c0:	4291      	cmp	r1, r2
     5c2:	d102      	bne.n	5ca <i2c_master_init+0x106>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SCLSM;
     5c4:	2280      	movs	r2, #128	; 0x80
     5c6:	0512      	lsls	r2, r2, #20
     5c8:	4313      	orrs	r3, r2
	if (config->slave_scl_low_extend_timeout) {
     5ca:	222d      	movs	r2, #45	; 0x2d
     5cc:	5ca2      	ldrb	r2, [r4, r2]
     5ce:	2a00      	cmp	r2, #0
     5d0:	d002      	beq.n	5d8 <i2c_master_init+0x114>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SEXTTOEN;
     5d2:	2280      	movs	r2, #128	; 0x80
     5d4:	0412      	lsls	r2, r2, #16
     5d6:	4313      	orrs	r3, r2
	if (config->master_scl_low_extend_timeout) {
     5d8:	222e      	movs	r2, #46	; 0x2e
     5da:	5ca2      	ldrb	r2, [r4, r2]
     5dc:	2a00      	cmp	r2, #0
     5de:	d002      	beq.n	5e6 <i2c_master_init+0x122>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_MEXTTOEN;
     5e0:	2280      	movs	r2, #128	; 0x80
     5e2:	03d2      	lsls	r2, r2, #15
     5e4:	4313      	orrs	r3, r2
	i2c_module->CTRLA.reg |= tmp_ctrla;
     5e6:	4642      	mov	r2, r8
     5e8:	6812      	ldr	r2, [r2, #0]
     5ea:	4313      	orrs	r3, r2
     5ec:	4642      	mov	r2, r8
     5ee:	6013      	str	r3, [r2, #0]
	i2c_module->CTRLB.reg = SERCOM_I2CM_CTRLB_SMEN;
     5f0:	2380      	movs	r3, #128	; 0x80
     5f2:	005b      	lsls	r3, r3, #1
     5f4:	6053      	str	r3, [r2, #4]
	uint32_t fgclk       = system_gclk_chan_get_hz(SERCOM0_GCLK_ID_CORE + sercom_index);
     5f6:	0028      	movs	r0, r5
     5f8:	3014      	adds	r0, #20
     5fa:	b2c0      	uxtb	r0, r0
     5fc:	4b55      	ldr	r3, [pc, #340]	; (754 <i2c_master_init+0x290>)
     5fe:	4798      	blx	r3
     600:	9007      	str	r0, [sp, #28]
	uint32_t fscl        = 1000 * config->baud_rate;
     602:	23fa      	movs	r3, #250	; 0xfa
     604:	009b      	lsls	r3, r3, #2
     606:	6822      	ldr	r2, [r4, #0]
     608:	435a      	muls	r2, r3
     60a:	4691      	mov	r9, r2
	uint32_t fscl_hs     = 1000 * config->baud_rate_high_speed;
     60c:	6863      	ldr	r3, [r4, #4]
     60e:	469a      	mov	sl, r3
	tmp_baud = (int32_t)(div_ceil(
     610:	4d51      	ldr	r5, [pc, #324]	; (758 <i2c_master_init+0x294>)
     612:	47a8      	blx	r5
     614:	9000      	str	r0, [sp, #0]
     616:	9101      	str	r1, [sp, #4]
     618:	464b      	mov	r3, r9
     61a:	0058      	lsls	r0, r3, #1
     61c:	47a8      	blx	r5
     61e:	9002      	str	r0, [sp, #8]
     620:	9103      	str	r1, [sp, #12]
     622:	8e20      	ldrh	r0, [r4, #48]	; 0x30
     624:	47a8      	blx	r5
     626:	9004      	str	r0, [sp, #16]
     628:	9105      	str	r1, [sp, #20]
     62a:	4f4c      	ldr	r7, [pc, #304]	; (75c <i2c_master_init+0x298>)
     62c:	4a4c      	ldr	r2, [pc, #304]	; (760 <i2c_master_init+0x29c>)
     62e:	4b4d      	ldr	r3, [pc, #308]	; (764 <i2c_master_init+0x2a0>)
     630:	9800      	ldr	r0, [sp, #0]
     632:	9901      	ldr	r1, [sp, #4]
     634:	47b8      	blx	r7
     636:	0002      	movs	r2, r0
     638:	000b      	movs	r3, r1
     63a:	9804      	ldr	r0, [sp, #16]
     63c:	9905      	ldr	r1, [sp, #20]
     63e:	47b8      	blx	r7
     640:	4e49      	ldr	r6, [pc, #292]	; (768 <i2c_master_init+0x2a4>)
     642:	2200      	movs	r2, #0
     644:	4b49      	ldr	r3, [pc, #292]	; (76c <i2c_master_init+0x2a8>)
     646:	47b0      	blx	r6
     648:	9004      	str	r0, [sp, #16]
     64a:	9105      	str	r1, [sp, #20]
     64c:	4648      	mov	r0, r9
     64e:	47a8      	blx	r5
     650:	0002      	movs	r2, r0
     652:	000b      	movs	r3, r1
     654:	9804      	ldr	r0, [sp, #16]
     656:	9905      	ldr	r1, [sp, #20]
     658:	47b8      	blx	r7
     65a:	0002      	movs	r2, r0
     65c:	000b      	movs	r3, r1
     65e:	4d44      	ldr	r5, [pc, #272]	; (770 <i2c_master_init+0x2ac>)
     660:	9800      	ldr	r0, [sp, #0]
     662:	9901      	ldr	r1, [sp, #4]
     664:	47a8      	blx	r5
     666:	9a02      	ldr	r2, [sp, #8]
     668:	9b03      	ldr	r3, [sp, #12]
     66a:	47b0      	blx	r6
     66c:	2200      	movs	r2, #0
     66e:	4b41      	ldr	r3, [pc, #260]	; (774 <i2c_master_init+0x2b0>)
     670:	47a8      	blx	r5
     672:	9a02      	ldr	r2, [sp, #8]
     674:	9b03      	ldr	r3, [sp, #12]
     676:	4d40      	ldr	r5, [pc, #256]	; (778 <i2c_master_init+0x2b4>)
     678:	47a8      	blx	r5
     67a:	4b40      	ldr	r3, [pc, #256]	; (77c <i2c_master_init+0x2b8>)
     67c:	4798      	blx	r3
     67e:	0005      	movs	r5, r0
	if (config->transfer_speed == I2C_MASTER_SPEED_HIGH_SPEED) {
     680:	2380      	movs	r3, #128	; 0x80
     682:	049b      	lsls	r3, r3, #18
     684:	68a2      	ldr	r2, [r4, #8]
     686:	429a      	cmp	r2, r3
     688:	d01e      	beq.n	6c8 <i2c_master_init+0x204>
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     68a:	0003      	movs	r3, r0
     68c:	2040      	movs	r0, #64	; 0x40
     68e:	2dff      	cmp	r5, #255	; 0xff
     690:	d900      	bls.n	694 <i2c_master_init+0x1d0>
     692:	e73e      	b.n	512 <i2c_master_init+0x4e>
	int32_t tmp_baudlow_hs = 0;
     694:	2400      	movs	r4, #0
	int32_t tmp_baud_hs = 0;
     696:	2000      	movs	r0, #0
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
     698:	25ff      	movs	r5, #255	; 0xff
     69a:	401d      	ands	r5, r3
			SERCOM_I2CM_BAUD_HSBAUD(tmp_baud_hs) | SERCOM_I2CM_BAUD_HSBAUDLOW(tmp_baudlow_hs);
     69c:	0624      	lsls	r4, r4, #24
     69e:	4325      	orrs	r5, r4
     6a0:	0400      	lsls	r0, r0, #16
     6a2:	23ff      	movs	r3, #255	; 0xff
     6a4:	041b      	lsls	r3, r3, #16
     6a6:	4018      	ands	r0, r3
     6a8:	4305      	orrs	r5, r0
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
     6aa:	4643      	mov	r3, r8
     6ac:	60dd      	str	r5, [r3, #12]
	enum status_code tmp_status_code = STATUS_OK;
     6ae:	2000      	movs	r0, #0
     6b0:	e72f      	b.n	512 <i2c_master_init+0x4e>
		pad0 = _sercom_get_default_pad(sercom_hw, 0);
     6b2:	2100      	movs	r1, #0
     6b4:	4640      	mov	r0, r8
     6b6:	4b32      	ldr	r3, [pc, #200]	; (780 <i2c_master_init+0x2bc>)
     6b8:	4798      	blx	r3
     6ba:	e74a      	b.n	552 <i2c_master_init+0x8e>
		pad1 = _sercom_get_default_pad(sercom_hw, 1);
     6bc:	2101      	movs	r1, #1
     6be:	4640      	mov	r0, r8
     6c0:	4b2f      	ldr	r3, [pc, #188]	; (780 <i2c_master_init+0x2bc>)
     6c2:	4798      	blx	r3
     6c4:	0007      	movs	r7, r0
     6c6:	e751      	b.n	56c <i2c_master_init+0xa8>
	uint32_t fscl_hs     = 1000 * config->baud_rate_high_speed;
     6c8:	26fa      	movs	r6, #250	; 0xfa
     6ca:	00b6      	lsls	r6, r6, #2
     6cc:	4653      	mov	r3, sl
     6ce:	435e      	muls	r6, r3
		tmp_baudlow_hs = (int32_t)((fgclk * 2.0) / (3.0 * fscl_hs) - 1);
     6d0:	9800      	ldr	r0, [sp, #0]
     6d2:	9901      	ldr	r1, [sp, #4]
     6d4:	0002      	movs	r2, r0
     6d6:	000b      	movs	r3, r1
     6d8:	4c23      	ldr	r4, [pc, #140]	; (768 <i2c_master_init+0x2a4>)
     6da:	47a0      	blx	r4
     6dc:	9000      	str	r0, [sp, #0]
     6de:	9101      	str	r1, [sp, #4]
     6e0:	0030      	movs	r0, r6
     6e2:	4b1d      	ldr	r3, [pc, #116]	; (758 <i2c_master_init+0x294>)
     6e4:	4798      	blx	r3
     6e6:	2200      	movs	r2, #0
     6e8:	4b26      	ldr	r3, [pc, #152]	; (784 <i2c_master_init+0x2c0>)
     6ea:	47b8      	blx	r7
     6ec:	0002      	movs	r2, r0
     6ee:	000b      	movs	r3, r1
     6f0:	9800      	ldr	r0, [sp, #0]
     6f2:	9901      	ldr	r1, [sp, #4]
     6f4:	4c20      	ldr	r4, [pc, #128]	; (778 <i2c_master_init+0x2b4>)
     6f6:	47a0      	blx	r4
     6f8:	2200      	movs	r2, #0
     6fa:	4b1e      	ldr	r3, [pc, #120]	; (774 <i2c_master_init+0x2b0>)
     6fc:	4c1c      	ldr	r4, [pc, #112]	; (770 <i2c_master_init+0x2ac>)
     6fe:	47a0      	blx	r4
     700:	4b1e      	ldr	r3, [pc, #120]	; (77c <i2c_master_init+0x2b8>)
     702:	4798      	blx	r3
     704:	1e04      	subs	r4, r0, #0
		if (tmp_baudlow_hs) {
     706:	d00c      	beq.n	722 <i2c_master_init+0x25e>
			tmp_baud_hs = (int32_t)(fgclk / fscl_hs) - 2 - tmp_baudlow_hs;
     708:	0031      	movs	r1, r6
     70a:	9807      	ldr	r0, [sp, #28]
     70c:	4b1e      	ldr	r3, [pc, #120]	; (788 <i2c_master_init+0x2c4>)
     70e:	4798      	blx	r3
     710:	3802      	subs	r0, #2
     712:	1b00      	subs	r0, r0, r4
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     714:	002b      	movs	r3, r5
     716:	2dff      	cmp	r5, #255	; 0xff
     718:	d80c      	bhi.n	734 <i2c_master_init+0x270>
     71a:	28ff      	cmp	r0, #255	; 0xff
     71c:	d9bc      	bls.n	698 <i2c_master_init+0x1d4>
     71e:	2040      	movs	r0, #64	; 0x40
     720:	e6f7      	b.n	512 <i2c_master_init+0x4e>
			tmp_baud_hs = (int32_t)(div_ceil(fgclk, 2 * fscl_hs)) - 1;
     722:	0071      	lsls	r1, r6, #1
     724:	1e48      	subs	r0, r1, #1
     726:	9b07      	ldr	r3, [sp, #28]
     728:	469c      	mov	ip, r3
     72a:	4460      	add	r0, ip
     72c:	4b16      	ldr	r3, [pc, #88]	; (788 <i2c_master_init+0x2c4>)
     72e:	4798      	blx	r3
     730:	3801      	subs	r0, #1
     732:	e7ef      	b.n	714 <i2c_master_init+0x250>
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     734:	2040      	movs	r0, #64	; 0x40
     736:	e6ec      	b.n	512 <i2c_master_init+0x4e>
     738:	0000187d 	.word	0x0000187d
     73c:	40000400 	.word	0x40000400
     740:	000021f5 	.word	0x000021f5
     744:	00002169 	.word	0x00002169
     748:	000016b9 	.word	0x000016b9
     74c:	000022ed 	.word	0x000022ed
     750:	41002000 	.word	0x41002000
     754:	00002211 	.word	0x00002211
     758:	00003fbd 	.word	0x00003fbd
     75c:	00003429 	.word	0x00003429
     760:	e826d695 	.word	0xe826d695
     764:	3e112e0b 	.word	0x3e112e0b
     768:	000027a1 	.word	0x000027a1
     76c:	40240000 	.word	0x40240000
     770:	00003929 	.word	0x00003929
     774:	3ff00000 	.word	0x3ff00000
     778:	00002dc1 	.word	0x00002dc1
     77c:	00003f55 	.word	0x00003f55
     780:	00001705 	.word	0x00001705
     784:	40080000 	.word	0x40080000
     788:	00002635 	.word	0x00002635

0000078c <_i2c_master_address_response>:
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     78c:	6803      	ldr	r3, [r0, #0]

	/* Check for error and ignore bus-error; workaround for BUSSTATE stuck in
	 * BUSY */
	if (i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB) {
     78e:	7e1a      	ldrb	r2, [r3, #24]
     790:	0792      	lsls	r2, r2, #30
     792:	d507      	bpl.n	7a4 <_i2c_master_address_response+0x18>

		/* Clear write interrupt flag */
		i2c_module->INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     794:	2202      	movs	r2, #2
     796:	761a      	strb	r2, [r3, #24]

		/* Check arbitration. */
		if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_ARBLOST) {
     798:	8b5b      	ldrh	r3, [r3, #26]
     79a:	079b      	lsls	r3, r3, #30
			/* Return packet collision. */
			return STATUS_ERR_PACKET_COLLISION;
     79c:	2041      	movs	r0, #65	; 0x41

		/* Return bad address value. */
		return STATUS_ERR_BAD_ADDRESS;
	}

	return STATUS_OK;
     79e:	17db      	asrs	r3, r3, #31
     7a0:	4018      	ands	r0, r3
}
     7a2:	4770      	bx	lr
	} else if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
     7a4:	8b5a      	ldrh	r2, [r3, #26]
     7a6:	0752      	lsls	r2, r2, #29
     7a8:	d506      	bpl.n	7b8 <_i2c_master_address_response+0x2c>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     7aa:	6859      	ldr	r1, [r3, #4]
     7ac:	22c0      	movs	r2, #192	; 0xc0
     7ae:	0292      	lsls	r2, r2, #10
     7b0:	430a      	orrs	r2, r1
     7b2:	605a      	str	r2, [r3, #4]
		return STATUS_ERR_BAD_ADDRESS;
     7b4:	2018      	movs	r0, #24
     7b6:	e7f4      	b.n	7a2 <_i2c_master_address_response+0x16>
	return STATUS_OK;
     7b8:	2000      	movs	r0, #0
     7ba:	e7f2      	b.n	7a2 <_i2c_master_address_response+0x16>

000007bc <_i2c_master_wait_for_bus>:
 * \retval STATUS_ERR_TIMEOUT  If no response was given within specified timeout
 *                             period
 */
enum status_code _i2c_master_wait_for_bus(
		struct i2c_master_module *const module)
{
     7bc:	b530      	push	{r4, r5, lr}
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     7be:	6802      	ldr	r2, [r0, #0]

	/* Wait for reply. */
	uint16_t timeout_counter = 0;
     7c0:	2300      	movs	r3, #0
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
     7c2:	2401      	movs	r4, #1
     7c4:	2502      	movs	r5, #2
     7c6:	7e11      	ldrb	r1, [r2, #24]
     7c8:	4221      	tst	r1, r4
     7ca:	d10b      	bne.n	7e4 <_i2c_master_wait_for_bus+0x28>
			!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB)) {
     7cc:	7e11      	ldrb	r1, [r2, #24]
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
     7ce:	4229      	tst	r1, r5
     7d0:	d106      	bne.n	7e0 <_i2c_master_wait_for_bus+0x24>

		/* Check timeout condition. */
		if (++timeout_counter >= module->buffer_timeout) {
     7d2:	3301      	adds	r3, #1
     7d4:	b29b      	uxth	r3, r3
     7d6:	8901      	ldrh	r1, [r0, #8]
     7d8:	4299      	cmp	r1, r3
     7da:	d8f4      	bhi.n	7c6 <_i2c_master_wait_for_bus+0xa>
			return STATUS_ERR_TIMEOUT;
     7dc:	2012      	movs	r0, #18
     7de:	e002      	b.n	7e6 <_i2c_master_wait_for_bus+0x2a>
		}
	}
	return STATUS_OK;
     7e0:	2000      	movs	r0, #0
     7e2:	e000      	b.n	7e6 <_i2c_master_wait_for_bus+0x2a>
     7e4:	2000      	movs	r0, #0
}
     7e6:	bd30      	pop	{r4, r5, pc}

000007e8 <_i2c_master_send_hs_master_code>:
 * \retval STATUS_OK           No error happen
 */
enum status_code _i2c_master_send_hs_master_code(
		struct i2c_master_module *const module,
		uint8_t hs_master_code)
{
     7e8:	b510      	push	{r4, lr}
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     7ea:	6804      	ldr	r4, [r0, #0]
	/* Return value. */
	enum status_code tmp_status;

	/* Set NACK for high speed code */
	i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     7ec:	6862      	ldr	r2, [r4, #4]
     7ee:	2380      	movs	r3, #128	; 0x80
     7f0:	02db      	lsls	r3, r3, #11
     7f2:	4313      	orrs	r3, r2
     7f4:	6063      	str	r3, [r4, #4]
	/* Send high speed code */
	i2c_module->ADDR.reg = hs_master_code;
     7f6:	6261      	str	r1, [r4, #36]	; 0x24
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     7f8:	4b02      	ldr	r3, [pc, #8]	; (804 <_i2c_master_send_hs_master_code+0x1c>)
     7fa:	4798      	blx	r3
	/* Clear write interrupt flag */
	i2c_module->INTFLAG.reg = SERCOM_I2CM_INTENCLR_MB;
     7fc:	2301      	movs	r3, #1
     7fe:	7623      	strb	r3, [r4, #24]

	return tmp_status;
}
     800:	bd10      	pop	{r4, pc}
     802:	46c0      	nop			; (mov r8, r8)
     804:	000007bd 	.word	0x000007bd

00000808 <_i2c_master_read_packet>:
 *
 */
static enum status_code _i2c_master_read_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     808:	b5f0      	push	{r4, r5, r6, r7, lr}
     80a:	46de      	mov	lr, fp
     80c:	4657      	mov	r7, sl
     80e:	464e      	mov	r6, r9
     810:	4645      	mov	r5, r8
     812:	b5e0      	push	{r5, r6, r7, lr}
     814:	b083      	sub	sp, #12
     816:	0006      	movs	r6, r0
     818:	4689      	mov	r9, r1
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     81a:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
     81c:	884c      	ldrh	r4, [r1, #2]

	/* Written buffer counter. */
	uint16_t counter = 0;

	bool sclsm_flag = i2c_module->CTRLA.bit.SCLSM;
     81e:	682b      	ldr	r3, [r5, #0]
     820:	011b      	lsls	r3, r3, #4
     822:	0fdb      	lsrs	r3, r3, #31
     824:	469a      	mov	sl, r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
     826:	7a4b      	ldrb	r3, [r1, #9]
     828:	2b00      	cmp	r3, #0
     82a:	d12b      	bne.n	884 <_i2c_master_read_packet+0x7c>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     82c:	686b      	ldr	r3, [r5, #4]
     82e:	4a58      	ldr	r2, [pc, #352]	; (990 <_i2c_master_read_packet+0x188>)
     830:	4013      	ands	r3, r2
     832:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
     834:	464b      	mov	r3, r9
     836:	7a1b      	ldrb	r3, [r3, #8]
     838:	2b00      	cmp	r3, #0
     83a:	d127      	bne.n	88c <_i2c_master_read_packet+0x84>
				I2C_TRANSFER_READ;
		} else {
			return tmp_status;
		}
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
     83c:	464b      	mov	r3, r9
     83e:	881b      	ldrh	r3, [r3, #0]
     840:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
     842:	464a      	mov	r2, r9
     844:	7a52      	ldrb	r2, [r2, #9]
     846:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
     848:	4313      	orrs	r3, r2
     84a:	2201      	movs	r2, #1
     84c:	4313      	orrs	r3, r2
     84e:	626b      	str	r3, [r5, #36]	; 0x24
	}

	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     850:	0030      	movs	r0, r6
     852:	4b50      	ldr	r3, [pc, #320]	; (994 <_i2c_master_read_packet+0x18c>)
     854:	4798      	blx	r3
     856:	9001      	str	r0, [sp, #4]

	/* Set action to ack or nack. */
	if ((sclsm_flag) && (packet->data_length == 1)) {
     858:	4653      	mov	r3, sl
     85a:	2b00      	cmp	r3, #0
     85c:	d003      	beq.n	866 <_i2c_master_read_packet+0x5e>
     85e:	464b      	mov	r3, r9
     860:	885b      	ldrh	r3, [r3, #2]
     862:	2b01      	cmp	r3, #1
     864:	d03b      	beq.n	8de <_i2c_master_read_packet+0xd6>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
	} else {
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;	
     866:	686b      	ldr	r3, [r5, #4]
     868:	4a49      	ldr	r2, [pc, #292]	; (990 <_i2c_master_read_packet+0x188>)
     86a:	4013      	ands	r3, r2
     86c:	606b      	str	r3, [r5, #4]
	}

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
     86e:	9b01      	ldr	r3, [sp, #4]
     870:	2b00      	cmp	r3, #0
     872:	d03a      	beq.n	8ea <_i2c_master_read_packet+0xe2>
		_i2c_master_wait_for_sync(module);
		packet->data[counter] = i2c_module->DATA.reg;
	}

	return tmp_status;
}
     874:	9801      	ldr	r0, [sp, #4]
     876:	b003      	add	sp, #12
     878:	bc3c      	pop	{r2, r3, r4, r5}
     87a:	4690      	mov	r8, r2
     87c:	4699      	mov	r9, r3
     87e:	46a2      	mov	sl, r4
     880:	46ab      	mov	fp, r5
     882:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
     884:	7a89      	ldrb	r1, [r1, #10]
     886:	4b44      	ldr	r3, [pc, #272]	; (998 <_i2c_master_read_packet+0x190>)
     888:	4798      	blx	r3
     88a:	e7cf      	b.n	82c <_i2c_master_read_packet+0x24>
		i2c_module->ADDR.reg = (packet->address << 1) |
     88c:	464b      	mov	r3, r9
     88e:	881b      	ldrh	r3, [r3, #0]
     890:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     892:	464a      	mov	r2, r9
     894:	7a52      	ldrb	r2, [r2, #9]
     896:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) |
     898:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     89a:	2280      	movs	r2, #128	; 0x80
     89c:	0212      	lsls	r2, r2, #8
     89e:	4313      	orrs	r3, r2
		i2c_module->ADDR.reg = (packet->address << 1) |
     8a0:	626b      	str	r3, [r5, #36]	; 0x24
		tmp_status = _i2c_master_wait_for_bus(module);
     8a2:	0030      	movs	r0, r6
     8a4:	4b3b      	ldr	r3, [pc, #236]	; (994 <_i2c_master_read_packet+0x18c>)
     8a6:	4798      	blx	r3
     8a8:	9001      	str	r0, [sp, #4]
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     8aa:	686b      	ldr	r3, [r5, #4]
     8ac:	4a38      	ldr	r2, [pc, #224]	; (990 <_i2c_master_read_packet+0x188>)
     8ae:	4013      	ands	r3, r2
     8b0:	606b      	str	r3, [r5, #4]
		if (tmp_status == STATUS_OK) {
     8b2:	2800      	cmp	r0, #0
     8b4:	d1de      	bne.n	874 <_i2c_master_read_packet+0x6c>
			tmp_status = _i2c_master_address_response(module);
     8b6:	0030      	movs	r0, r6
     8b8:	4b38      	ldr	r3, [pc, #224]	; (99c <_i2c_master_read_packet+0x194>)
     8ba:	4798      	blx	r3
     8bc:	9001      	str	r0, [sp, #4]
		if (tmp_status == STATUS_OK) {
     8be:	2800      	cmp	r0, #0
     8c0:	d1d8      	bne.n	874 <_i2c_master_read_packet+0x6c>
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
     8c2:	464b      	mov	r3, r9
     8c4:	881b      	ldrh	r3, [r3, #0]
     8c6:	0a1b      	lsrs	r3, r3, #8
     8c8:	2278      	movs	r2, #120	; 0x78
     8ca:	4313      	orrs	r3, r2
     8cc:	005b      	lsls	r3, r3, #1
				(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     8ce:	464a      	mov	r2, r9
     8d0:	7a52      	ldrb	r2, [r2, #9]
     8d2:	0392      	lsls	r2, r2, #14
     8d4:	2101      	movs	r1, #1
     8d6:	430a      	orrs	r2, r1
     8d8:	4313      	orrs	r3, r2
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
     8da:	626b      	str	r3, [r5, #36]	; 0x24
     8dc:	e7b8      	b.n	850 <_i2c_master_read_packet+0x48>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     8de:	686a      	ldr	r2, [r5, #4]
     8e0:	2380      	movs	r3, #128	; 0x80
     8e2:	02db      	lsls	r3, r3, #11
     8e4:	4313      	orrs	r3, r2
     8e6:	606b      	str	r3, [r5, #4]
     8e8:	e7c1      	b.n	86e <_i2c_master_read_packet+0x66>
		tmp_status = _i2c_master_address_response(module);
     8ea:	0030      	movs	r0, r6
     8ec:	4b2b      	ldr	r3, [pc, #172]	; (99c <_i2c_master_read_packet+0x194>)
     8ee:	4798      	blx	r3
     8f0:	9001      	str	r0, [sp, #4]
	if (tmp_status == STATUS_OK) {
     8f2:	2800      	cmp	r0, #0
     8f4:	d1be      	bne.n	874 <_i2c_master_read_packet+0x6c>
     8f6:	3c01      	subs	r4, #1
     8f8:	b2a4      	uxth	r4, r4
     8fa:	4680      	mov	r8, r0
		while (tmp_data_length--) {
     8fc:	4b28      	ldr	r3, [pc, #160]	; (9a0 <_i2c_master_read_packet+0x198>)
     8fe:	469b      	mov	fp, r3
     900:	e015      	b.n	92e <_i2c_master_read_packet+0x126>
					((sclsm_flag) && (tmp_data_length == 1)))) {
     902:	2c01      	cmp	r4, #1
     904:	d020      	beq.n	948 <_i2c_master_read_packet+0x140>
				_i2c_master_wait_for_sync(module);
     906:	0030      	movs	r0, r6
     908:	4b26      	ldr	r3, [pc, #152]	; (9a4 <_i2c_master_read_packet+0x19c>)
     90a:	4798      	blx	r3
				packet->data[counter++] = i2c_module->DATA.reg;
     90c:	4643      	mov	r3, r8
     90e:	1c5f      	adds	r7, r3, #1
     910:	b2bf      	uxth	r7, r7
     912:	2328      	movs	r3, #40	; 0x28
     914:	5ceb      	ldrb	r3, [r5, r3]
     916:	464a      	mov	r2, r9
     918:	6852      	ldr	r2, [r2, #4]
     91a:	4641      	mov	r1, r8
     91c:	5453      	strb	r3, [r2, r1]
				tmp_status = _i2c_master_wait_for_bus(module);
     91e:	0030      	movs	r0, r6
     920:	4b1c      	ldr	r3, [pc, #112]	; (994 <_i2c_master_read_packet+0x18c>)
     922:	4798      	blx	r3
     924:	3c01      	subs	r4, #1
     926:	b2a4      	uxth	r4, r4
			if (tmp_status != STATUS_OK) {
     928:	2800      	cmp	r0, #0
     92a:	d115      	bne.n	958 <_i2c_master_read_packet+0x150>
				packet->data[counter++] = i2c_module->DATA.reg;
     92c:	46b8      	mov	r8, r7
		while (tmp_data_length--) {
     92e:	455c      	cmp	r4, fp
     930:	d014      	beq.n	95c <_i2c_master_read_packet+0x154>
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     932:	8b6b      	ldrh	r3, [r5, #26]
     934:	069b      	lsls	r3, r3, #26
     936:	d527      	bpl.n	988 <_i2c_master_read_packet+0x180>
			if (module->send_nack && (((!sclsm_flag) && (tmp_data_length == 0)) ||
     938:	7af3      	ldrb	r3, [r6, #11]
     93a:	2b00      	cmp	r3, #0
     93c:	d0e3      	beq.n	906 <_i2c_master_read_packet+0xfe>
     93e:	4653      	mov	r3, sl
     940:	2b00      	cmp	r3, #0
     942:	d1de      	bne.n	902 <_i2c_master_read_packet+0xfa>
     944:	2c00      	cmp	r4, #0
     946:	d1de      	bne.n	906 <_i2c_master_read_packet+0xfe>
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     948:	686a      	ldr	r2, [r5, #4]
     94a:	2380      	movs	r3, #128	; 0x80
     94c:	02db      	lsls	r3, r3, #11
     94e:	4313      	orrs	r3, r2
     950:	606b      	str	r3, [r5, #4]
     952:	3c01      	subs	r4, #1
     954:	b2a4      	uxth	r4, r4
     956:	e7ea      	b.n	92e <_i2c_master_read_packet+0x126>
				packet->data[counter++] = i2c_module->DATA.reg;
     958:	46b8      	mov	r8, r7
				tmp_status = _i2c_master_wait_for_bus(module);
     95a:	9001      	str	r0, [sp, #4]
		if (module->send_stop) {
     95c:	7ab3      	ldrb	r3, [r6, #10]
     95e:	2b00      	cmp	r3, #0
     960:	d109      	bne.n	976 <_i2c_master_read_packet+0x16e>
		_i2c_master_wait_for_sync(module);
     962:	0030      	movs	r0, r6
     964:	4b0f      	ldr	r3, [pc, #60]	; (9a4 <_i2c_master_read_packet+0x19c>)
     966:	4798      	blx	r3
		packet->data[counter] = i2c_module->DATA.reg;
     968:	2328      	movs	r3, #40	; 0x28
     96a:	5cea      	ldrb	r2, [r5, r3]
     96c:	464b      	mov	r3, r9
     96e:	685b      	ldr	r3, [r3, #4]
     970:	4641      	mov	r1, r8
     972:	545a      	strb	r2, [r3, r1]
     974:	e77e      	b.n	874 <_i2c_master_read_packet+0x6c>
			_i2c_master_wait_for_sync(module);
     976:	0030      	movs	r0, r6
     978:	4b0a      	ldr	r3, [pc, #40]	; (9a4 <_i2c_master_read_packet+0x19c>)
     97a:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     97c:	686a      	ldr	r2, [r5, #4]
     97e:	23c0      	movs	r3, #192	; 0xc0
     980:	029b      	lsls	r3, r3, #10
     982:	4313      	orrs	r3, r2
     984:	606b      	str	r3, [r5, #4]
     986:	e7ec      	b.n	962 <_i2c_master_read_packet+0x15a>
				return STATUS_ERR_PACKET_COLLISION;
     988:	2341      	movs	r3, #65	; 0x41
     98a:	9301      	str	r3, [sp, #4]
     98c:	e772      	b.n	874 <_i2c_master_read_packet+0x6c>
     98e:	46c0      	nop			; (mov r8, r8)
     990:	fffbffff 	.word	0xfffbffff
     994:	000007bd 	.word	0x000007bd
     998:	000007e9 	.word	0x000007e9
     99c:	0000078d 	.word	0x0000078d
     9a0:	0000ffff 	.word	0x0000ffff
     9a4:	000004b9 	.word	0x000004b9

000009a8 <_i2c_master_write_packet>:
 *                                      acknowledged the address
 */
static enum status_code _i2c_master_write_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     9a8:	b5f0      	push	{r4, r5, r6, r7, lr}
     9aa:	46de      	mov	lr, fp
     9ac:	4657      	mov	r7, sl
     9ae:	464e      	mov	r6, r9
     9b0:	4645      	mov	r5, r8
     9b2:	b5e0      	push	{r5, r6, r7, lr}
     9b4:	b083      	sub	sp, #12
     9b6:	0006      	movs	r6, r0
     9b8:	000f      	movs	r7, r1
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     9ba:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
     9bc:	884c      	ldrh	r4, [r1, #2]

	_i2c_master_wait_for_sync(module);
     9be:	4b32      	ldr	r3, [pc, #200]	; (a88 <_i2c_master_write_packet+0xe0>)
     9c0:	4798      	blx	r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
     9c2:	7a7b      	ldrb	r3, [r7, #9]
     9c4:	2b00      	cmp	r3, #0
     9c6:	d11d      	bne.n	a04 <_i2c_master_write_packet+0x5c>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     9c8:	686b      	ldr	r3, [r5, #4]
     9ca:	4a30      	ldr	r2, [pc, #192]	; (a8c <_i2c_master_write_packet+0xe4>)
     9cc:	4013      	ands	r3, r2
     9ce:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
     9d0:	7a3b      	ldrb	r3, [r7, #8]
     9d2:	2b00      	cmp	r3, #0
     9d4:	d01b      	beq.n	a0e <_i2c_master_write_packet+0x66>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     9d6:	883b      	ldrh	r3, [r7, #0]
     9d8:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     9da:	7a7a      	ldrb	r2, [r7, #9]
     9dc:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     9de:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     9e0:	2280      	movs	r2, #128	; 0x80
     9e2:	0212      	lsls	r2, r2, #8
     9e4:	4313      	orrs	r3, r2
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     9e6:	626b      	str	r3, [r5, #36]	; 0x24
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
	}
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     9e8:	0030      	movs	r0, r6
     9ea:	4b29      	ldr	r3, [pc, #164]	; (a90 <_i2c_master_write_packet+0xe8>)
     9ec:	4798      	blx	r3
     9ee:	9001      	str	r0, [sp, #4]

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
     9f0:	2800      	cmp	r0, #0
     9f2:	d013      	beq.n	a1c <_i2c_master_write_packet+0x74>
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
		}
	}

	return tmp_status;
}
     9f4:	9801      	ldr	r0, [sp, #4]
     9f6:	b003      	add	sp, #12
     9f8:	bc3c      	pop	{r2, r3, r4, r5}
     9fa:	4690      	mov	r8, r2
     9fc:	4699      	mov	r9, r3
     9fe:	46a2      	mov	sl, r4
     a00:	46ab      	mov	fp, r5
     a02:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
     a04:	7ab9      	ldrb	r1, [r7, #10]
     a06:	0030      	movs	r0, r6
     a08:	4b22      	ldr	r3, [pc, #136]	; (a94 <_i2c_master_write_packet+0xec>)
     a0a:	4798      	blx	r3
     a0c:	e7dc      	b.n	9c8 <_i2c_master_write_packet+0x20>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     a0e:	883b      	ldrh	r3, [r7, #0]
     a10:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
     a12:	7a7a      	ldrb	r2, [r7, #9]
     a14:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     a16:	4313      	orrs	r3, r2
     a18:	626b      	str	r3, [r5, #36]	; 0x24
     a1a:	e7e5      	b.n	9e8 <_i2c_master_write_packet+0x40>
		tmp_status = _i2c_master_address_response(module);
     a1c:	0030      	movs	r0, r6
     a1e:	4b1e      	ldr	r3, [pc, #120]	; (a98 <_i2c_master_write_packet+0xf0>)
     a20:	4798      	blx	r3
     a22:	1e03      	subs	r3, r0, #0
     a24:	9001      	str	r0, [sp, #4]
	if (tmp_status == STATUS_OK) {
     a26:	d1e5      	bne.n	9f4 <_i2c_master_write_packet+0x4c>
     a28:	46a0      	mov	r8, r4
     a2a:	2400      	movs	r4, #0
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     a2c:	3320      	adds	r3, #32
     a2e:	4699      	mov	r9, r3
			_i2c_master_wait_for_sync(module);
     a30:	4b15      	ldr	r3, [pc, #84]	; (a88 <_i2c_master_write_packet+0xe0>)
     a32:	469b      	mov	fp, r3
			tmp_status = _i2c_master_wait_for_bus(module);
     a34:	4b16      	ldr	r3, [pc, #88]	; (a90 <_i2c_master_write_packet+0xe8>)
     a36:	469a      	mov	sl, r3
		while (tmp_data_length--) {
     a38:	4544      	cmp	r4, r8
     a3a:	d015      	beq.n	a68 <_i2c_master_write_packet+0xc0>
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     a3c:	8b6b      	ldrh	r3, [r5, #26]
     a3e:	464a      	mov	r2, r9
     a40:	4213      	tst	r3, r2
     a42:	d01d      	beq.n	a80 <_i2c_master_write_packet+0xd8>
			_i2c_master_wait_for_sync(module);
     a44:	0030      	movs	r0, r6
     a46:	47d8      	blx	fp
			i2c_module->DATA.reg = packet->data[buffer_counter++];
     a48:	687b      	ldr	r3, [r7, #4]
     a4a:	5d1a      	ldrb	r2, [r3, r4]
     a4c:	2328      	movs	r3, #40	; 0x28
     a4e:	54ea      	strb	r2, [r5, r3]
			tmp_status = _i2c_master_wait_for_bus(module);
     a50:	0030      	movs	r0, r6
     a52:	47d0      	blx	sl
			if (tmp_status != STATUS_OK) {
     a54:	2800      	cmp	r0, #0
     a56:	d106      	bne.n	a66 <_i2c_master_write_packet+0xbe>
			if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
     a58:	8b6b      	ldrh	r3, [r5, #26]
     a5a:	3401      	adds	r4, #1
     a5c:	075b      	lsls	r3, r3, #29
     a5e:	d5eb      	bpl.n	a38 <_i2c_master_write_packet+0x90>
				tmp_status = STATUS_ERR_OVERFLOW;
     a60:	231e      	movs	r3, #30
     a62:	9301      	str	r3, [sp, #4]
     a64:	e000      	b.n	a68 <_i2c_master_write_packet+0xc0>
			tmp_status = _i2c_master_wait_for_bus(module);
     a66:	9001      	str	r0, [sp, #4]
		if (module->send_stop) {
     a68:	7ab3      	ldrb	r3, [r6, #10]
     a6a:	2b00      	cmp	r3, #0
     a6c:	d0c2      	beq.n	9f4 <_i2c_master_write_packet+0x4c>
			_i2c_master_wait_for_sync(module);
     a6e:	0030      	movs	r0, r6
     a70:	4b05      	ldr	r3, [pc, #20]	; (a88 <_i2c_master_write_packet+0xe0>)
     a72:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     a74:	686a      	ldr	r2, [r5, #4]
     a76:	23c0      	movs	r3, #192	; 0xc0
     a78:	029b      	lsls	r3, r3, #10
     a7a:	4313      	orrs	r3, r2
     a7c:	606b      	str	r3, [r5, #4]
     a7e:	e7b9      	b.n	9f4 <_i2c_master_write_packet+0x4c>
				return STATUS_ERR_PACKET_COLLISION;
     a80:	2341      	movs	r3, #65	; 0x41
     a82:	9301      	str	r3, [sp, #4]
     a84:	e7b6      	b.n	9f4 <_i2c_master_write_packet+0x4c>
     a86:	46c0      	nop			; (mov r8, r8)
     a88:	000004b9 	.word	0x000004b9
     a8c:	fffbffff 	.word	0xfffbffff
     a90:	000007bd 	.word	0x000007bd
     a94:	000007e9 	.word	0x000007e9
     a98:	0000078d 	.word	0x0000078d

00000a9c <i2c_master_read_packet_wait>:
{
     a9c:	b510      	push	{r4, lr}
	module->send_stop = true;
     a9e:	2301      	movs	r3, #1
     aa0:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     aa2:	72c3      	strb	r3, [r0, #11]
	return _i2c_master_read_packet(module, packet);
     aa4:	4b01      	ldr	r3, [pc, #4]	; (aac <i2c_master_read_packet_wait+0x10>)
     aa6:	4798      	blx	r3
}
     aa8:	bd10      	pop	{r4, pc}
     aaa:	46c0      	nop			; (mov r8, r8)
     aac:	00000809 	.word	0x00000809

00000ab0 <i2c_master_read_packet_wait_no_stop>:
{
     ab0:	b510      	push	{r4, lr}
	module->send_stop = false;
     ab2:	2300      	movs	r3, #0
     ab4:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     ab6:	3301      	adds	r3, #1
     ab8:	72c3      	strb	r3, [r0, #11]
	return _i2c_master_read_packet(module, packet);
     aba:	4b01      	ldr	r3, [pc, #4]	; (ac0 <i2c_master_read_packet_wait_no_stop+0x10>)
     abc:	4798      	blx	r3
}
     abe:	bd10      	pop	{r4, pc}
     ac0:	00000809 	.word	0x00000809

00000ac4 <i2c_master_write_packet_wait>:
 *                                      last data sent
 */
enum status_code i2c_master_write_packet_wait(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     ac4:	b510      	push	{r4, lr}
	if (module->buffer_remaining > 0) {
		return STATUS_BUSY;
	}
#endif

	module->send_stop = true;
     ac6:	2301      	movs	r3, #1
     ac8:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     aca:	72c3      	strb	r3, [r0, #11]

	return _i2c_master_write_packet(module, packet);
     acc:	4b01      	ldr	r3, [pc, #4]	; (ad4 <i2c_master_write_packet_wait+0x10>)
     ace:	4798      	blx	r3
}
     ad0:	bd10      	pop	{r4, pc}
     ad2:	46c0      	nop			; (mov r8, r8)
     ad4:	000009a9 	.word	0x000009a9

00000ad8 <i2c_master_write_packet_wait_no_stop>:
 *                                      more data
 */
enum status_code i2c_master_write_packet_wait_no_stop(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     ad8:	b510      	push	{r4, lr}
	if (module->buffer_remaining > 0) {
		return STATUS_BUSY;
	}
#endif

	module->send_stop = false;
     ada:	2300      	movs	r3, #0
     adc:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     ade:	3301      	adds	r3, #1
     ae0:	72c3      	strb	r3, [r0, #11]

	return _i2c_master_write_packet(module, packet);
     ae2:	4b01      	ldr	r3, [pc, #4]	; (ae8 <i2c_master_write_packet_wait_no_stop+0x10>)
     ae4:	4798      	blx	r3
}
     ae6:	bd10      	pop	{r4, pc}
     ae8:	000009a9 	.word	0x000009a9

00000aec <br24_init>:
#include "pusart.h"
uint8_t br24_buffer[256];


void br24_init(void)
{
     aec:	b5f0      	push	{r4, r5, r6, r7, lr}
     aee:	46ce      	mov	lr, r9
     af0:	4647      	mov	r7, r8
     af2:	b580      	push	{r7, lr}
     af4:	b085      	sub	sp, #20
	br24.addr = 0x50;
     af6:	4c30      	ldr	r4, [pc, #192]	; (bb8 <br24_init+0xcc>)
     af8:	2350      	movs	r3, #80	; 0x50
     afa:	7023      	strb	r3, [r4, #0]
	br24.buffer = br24_buffer;
     afc:	4d2f      	ldr	r5, [pc, #188]	; (bbc <br24_init+0xd0>)
     afe:	6065      	str	r5, [r4, #4]
	br24.buffer_size = 256;
     b00:	33b0      	adds	r3, #176	; 0xb0
     b02:	4699      	mov	r9, r3
     b04:	8123      	strh	r3, [r4, #8]
	
	//writing a byte to address 0x0004
	//address
	br24_buffer[0] = 0x00;
     b06:	2700      	movs	r7, #0
     b08:	702f      	strb	r7, [r5, #0]
	br24_buffer[1] = 0x09;
     b0a:	2309      	movs	r3, #9
     b0c:	706b      	strb	r3, [r5, #1]
	//data
	br24_buffer[2] = 3;
     b0e:	3b06      	subs	r3, #6
     b10:	70ab      	strb	r3, [r5, #2]
	
	
	////Clear R/~W bit to signify a write
	br24.addr &= ~0x01;
	//test write
	i2c_write_bytes(&br24, 3, true);
     b12:	2201      	movs	r2, #1
     b14:	2103      	movs	r1, #3
     b16:	0020      	movs	r0, r4
     b18:	4b29      	ldr	r3, [pc, #164]	; (bc0 <br24_init+0xd4>)
     b1a:	4698      	mov	r8, r3
     b1c:	4798      	blx	r3
	////Or 0x01 with 0x50 to signify a read
	//br24.addr |= 0x01;
	//i2c_read(&br24, 1, true);
	//uint8_t result = br24_buffer[0];

	char charArrCol[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
     b1e:	466a      	mov	r2, sp
     b20:	4b28      	ldr	r3, [pc, #160]	; (bc4 <br24_init+0xd8>)
     b22:	cb43      	ldmia	r3!, {r0, r1, r6}
     b24:	c243      	stmia	r2!, {r0, r1, r6}
     b26:	681b      	ldr	r3, [r3, #0]
     b28:	6013      	str	r3, [r2, #0]
	
	
	//Let's read the entire first page of eeprom, which is 256 bytes for us
	br24.addr &= ~0x01;
     b2a:	7823      	ldrb	r3, [r4, #0]
     b2c:	2201      	movs	r2, #1
     b2e:	4393      	bics	r3, r2
     b30:	7023      	strb	r3, [r4, #0]
	br24_buffer[0] = 0x0;
     b32:	702f      	strb	r7, [r5, #0]
	br24_buffer[1] = 0x0;
     b34:	706f      	strb	r7, [r5, #1]
	i2c_write_bytes(&br24, 2, true);
     b36:	2102      	movs	r1, #2
     b38:	0020      	movs	r0, r4
     b3a:	47c0      	blx	r8
	br24.addr |= 0x01;
     b3c:	7823      	ldrb	r3, [r4, #0]
     b3e:	2201      	movs	r2, #1
     b40:	4313      	orrs	r3, r2
     b42:	7023      	strb	r3, [r4, #0]
	i2c_read(&br24, 256, true);
     b44:	2201      	movs	r2, #1
     b46:	4649      	mov	r1, r9
     b48:	0020      	movs	r0, r4
     b4a:	4b1f      	ldr	r3, [pc, #124]	; (bc8 <br24_init+0xdc>)
     b4c:	4798      	blx	r3
	int zctr = 0;
	DEBUG("%5s", " ");
     b4e:	4a1f      	ldr	r2, [pc, #124]	; (bcc <br24_init+0xe0>)
     b50:	491f      	ldr	r1, [pc, #124]	; (bd0 <br24_init+0xe4>)
     b52:	4820      	ldr	r0, [pc, #128]	; (bd4 <br24_init+0xe8>)
     b54:	4b20      	ldr	r3, [pc, #128]	; (bd8 <br24_init+0xec>)
     b56:	4798      	blx	r3
	for(int x = 0; x < 16; x++)
     b58:	2400      	movs	r4, #0
	{
		DEBUG("0%c ", charArrCol[x]);
     b5a:	4e20      	ldr	r6, [pc, #128]	; (bdc <br24_init+0xf0>)
     b5c:	4d1d      	ldr	r5, [pc, #116]	; (bd4 <br24_init+0xe8>)
     b5e:	4f1e      	ldr	r7, [pc, #120]	; (bd8 <br24_init+0xec>)
     b60:	466b      	mov	r3, sp
     b62:	5ce2      	ldrb	r2, [r4, r3]
     b64:	0031      	movs	r1, r6
     b66:	0028      	movs	r0, r5
     b68:	47b8      	blx	r7
	for(int x = 0; x < 16; x++)
     b6a:	3401      	adds	r4, #1
     b6c:	2c10      	cmp	r4, #16
     b6e:	d1f7      	bne.n	b60 <br24_init+0x74>
	}
	DEBUG("\n");
     b70:	491b      	ldr	r1, [pc, #108]	; (be0 <br24_init+0xf4>)
     b72:	4818      	ldr	r0, [pc, #96]	; (bd4 <br24_init+0xe8>)
     b74:	4b18      	ldr	r3, [pc, #96]	; (bd8 <br24_init+0xec>)
     b76:	4798      	blx	r3
     b78:	4d10      	ldr	r5, [pc, #64]	; (bbc <br24_init+0xd0>)
	for(int row = 0; row < 16; row++)
     b7a:	2700      	movs	r7, #0
	{
		DEBUG("%c0:  ", charArrCol[row]);
     b7c:	4b16      	ldr	r3, [pc, #88]	; (bd8 <br24_init+0xec>)
     b7e:	4698      	mov	r8, r3
     b80:	466b      	mov	r3, sp
     b82:	5cfa      	ldrb	r2, [r7, r3]
     b84:	4917      	ldr	r1, [pc, #92]	; (be4 <br24_init+0xf8>)
     b86:	4813      	ldr	r0, [pc, #76]	; (bd4 <br24_init+0xe8>)
     b88:	47c0      	blx	r8
		for(int col = 0; col < 16; col++)
     b8a:	2400      	movs	r4, #0
		{
			DEBUG("%2x ", br24_buffer[zctr++]);
     b8c:	4e12      	ldr	r6, [pc, #72]	; (bd8 <br24_init+0xec>)
     b8e:	5d2a      	ldrb	r2, [r5, r4]
     b90:	4915      	ldr	r1, [pc, #84]	; (be8 <br24_init+0xfc>)
     b92:	4810      	ldr	r0, [pc, #64]	; (bd4 <br24_init+0xe8>)
     b94:	47b0      	blx	r6
		for(int col = 0; col < 16; col++)
     b96:	3401      	adds	r4, #1
     b98:	2c10      	cmp	r4, #16
     b9a:	d1f8      	bne.n	b8e <br24_init+0xa2>
		}
		DEBUG("\n");
     b9c:	4910      	ldr	r1, [pc, #64]	; (be0 <br24_init+0xf4>)
     b9e:	480d      	ldr	r0, [pc, #52]	; (bd4 <br24_init+0xe8>)
     ba0:	4b0d      	ldr	r3, [pc, #52]	; (bd8 <br24_init+0xec>)
     ba2:	4798      	blx	r3
	for(int row = 0; row < 16; row++)
     ba4:	3701      	adds	r7, #1
     ba6:	3510      	adds	r5, #16
     ba8:	2f10      	cmp	r7, #16
     baa:	d1e9      	bne.n	b80 <br24_init+0x94>
	}
	
	
}
     bac:	b005      	add	sp, #20
     bae:	bc0c      	pop	{r2, r3}
     bb0:	4690      	mov	r8, r2
     bb2:	4699      	mov	r9, r3
     bb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     bb6:	46c0      	nop			; (mov r8, r8)
     bb8:	20000bd0 	.word	0x20000bd0
     bbc:	20000bdc 	.word	0x20000bdc
     bc0:	00000bed 	.word	0x00000bed
     bc4:	000087c4 	.word	0x000087c4
     bc8:	00000c91 	.word	0x00000c91
     bcc:	000088ac 	.word	0x000088ac
     bd0:	000087d4 	.word	0x000087d4
     bd4:	20000cdc 	.word	0x20000cdc
     bd8:	00001371 	.word	0x00001371
     bdc:	000087d8 	.word	0x000087d8
     be0:	000088a0 	.word	0x000088a0
     be4:	000087e0 	.word	0x000087e0
     be8:	000087e8 	.word	0x000087e8

00000bec <i2c_write_bytes>:
		}
	}
}

void i2c_write_bytes(i2c_device* dev, uint16_t numBytes, _Bool bShouldStop)
{
     bec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     bee:	0004      	movs	r4, r0
     bf0:	000d      	movs	r5, r1
     bf2:	0016      	movs	r6, r2
	#warning need to optimize this
	memset(I_MASTER_PKT->data, '\0', numBytes);
     bf4:	4b1e      	ldr	r3, [pc, #120]	; (c70 <i2c_write_bytes+0x84>)
     bf6:	6858      	ldr	r0, [r3, #4]
     bf8:	000a      	movs	r2, r1
     bfa:	2100      	movs	r1, #0
     bfc:	4b1d      	ldr	r3, [pc, #116]	; (c74 <i2c_write_bytes+0x88>)
     bfe:	4798      	blx	r3
	for(int x = 0; x < numBytes; x++)
     c00:	1e29      	subs	r1, r5, #0
     c02:	dd08      	ble.n	c16 <i2c_write_bytes+0x2a>
     c04:	2300      	movs	r3, #0
	{
		I_MASTER_PKT->data[x] = dev->buffer[x];	
     c06:	481a      	ldr	r0, [pc, #104]	; (c70 <i2c_write_bytes+0x84>)
     c08:	6862      	ldr	r2, [r4, #4]
     c0a:	5cd2      	ldrb	r2, [r2, r3]
     c0c:	6847      	ldr	r7, [r0, #4]
     c0e:	54fa      	strb	r2, [r7, r3]
	for(int x = 0; x < numBytes; x++)
     c10:	3301      	adds	r3, #1
     c12:	428b      	cmp	r3, r1
     c14:	dbf8      	blt.n	c08 <i2c_write_bytes+0x1c>
		//for debugging
	}
	#warning add timeout
	I_MASTER_PKT->address = dev->addr;
     c16:	4b16      	ldr	r3, [pc, #88]	; (c70 <i2c_write_bytes+0x84>)
     c18:	7822      	ldrb	r2, [r4, #0]
     c1a:	801a      	strh	r2, [r3, #0]
	I_MASTER_PKT->data_length = numBytes;
     c1c:	805d      	strh	r5, [r3, #2]
	enum status_code ret = STATUS_OK;
	if(bShouldStop)
     c1e:	2e00      	cmp	r6, #0
     c20:	d112      	bne.n	c48 <i2c_write_bytes+0x5c>
		}
		ctr = 0;
	}
	else
	{
		while(i2c_master_write_packet_wait_no_stop(I_MASTER, I_MASTER_PKT) != STATUS_OK)
     c22:	001d      	movs	r5, r3
     c24:	4c14      	ldr	r4, [pc, #80]	; (c78 <i2c_write_bytes+0x8c>)
     c26:	4e15      	ldr	r6, [pc, #84]	; (c7c <i2c_write_bytes+0x90>)
     c28:	0029      	movs	r1, r5
     c2a:	0020      	movs	r0, r4
     c2c:	47b0      	blx	r6
     c2e:	2800      	cmp	r0, #0
     c30:	d006      	beq.n	c40 <i2c_write_bytes+0x54>
		{
			if(ctr++ >= 1000)
     c32:	4a13      	ldr	r2, [pc, #76]	; (c80 <i2c_write_bytes+0x94>)
     c34:	6813      	ldr	r3, [r2, #0]
     c36:	1c59      	adds	r1, r3, #1
     c38:	6011      	str	r1, [r2, #0]
     c3a:	4a12      	ldr	r2, [pc, #72]	; (c84 <i2c_write_bytes+0x98>)
     c3c:	4293      	cmp	r3, r2
     c3e:	ddf3      	ble.n	c28 <i2c_write_bytes+0x3c>
			{
				
				break;
			}
		}
		ctr = 0;
     c40:	2200      	movs	r2, #0
     c42:	4b0f      	ldr	r3, [pc, #60]	; (c80 <i2c_write_bytes+0x94>)
     c44:	601a      	str	r2, [r3, #0]
	}
}
     c46:	e011      	b.n	c6c <i2c_write_bytes+0x80>
		while((ret = i2c_master_write_packet_wait(I_MASTER, I_MASTER_PKT)) != STATUS_OK)
     c48:	4d09      	ldr	r5, [pc, #36]	; (c70 <i2c_write_bytes+0x84>)
     c4a:	4c0b      	ldr	r4, [pc, #44]	; (c78 <i2c_write_bytes+0x8c>)
     c4c:	4e0e      	ldr	r6, [pc, #56]	; (c88 <i2c_write_bytes+0x9c>)
     c4e:	0029      	movs	r1, r5
     c50:	0020      	movs	r0, r4
     c52:	47b0      	blx	r6
     c54:	2800      	cmp	r0, #0
     c56:	d006      	beq.n	c66 <i2c_write_bytes+0x7a>
			if(ctr++ >= 2000)
     c58:	4a09      	ldr	r2, [pc, #36]	; (c80 <i2c_write_bytes+0x94>)
     c5a:	6813      	ldr	r3, [r2, #0]
     c5c:	1c59      	adds	r1, r3, #1
     c5e:	6011      	str	r1, [r2, #0]
     c60:	4a0a      	ldr	r2, [pc, #40]	; (c8c <i2c_write_bytes+0xa0>)
     c62:	4293      	cmp	r3, r2
     c64:	ddf3      	ble.n	c4e <i2c_write_bytes+0x62>
		ctr = 0;
     c66:	2200      	movs	r2, #0
     c68:	4b05      	ldr	r3, [pc, #20]	; (c80 <i2c_write_bytes+0x94>)
     c6a:	601a      	str	r2, [r3, #0]
}
     c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     c6e:	46c0      	nop			; (mov r8, r8)
     c70:	20000ce8 	.word	0x20000ce8
     c74:	00004135 	.word	0x00004135
     c78:	20000df4 	.word	0x20000df4
     c7c:	00000ad9 	.word	0x00000ad9
     c80:	20000a48 	.word	0x20000a48
     c84:	000003e7 	.word	0x000003e7
     c88:	00000ac5 	.word	0x00000ac5
     c8c:	000007cf 	.word	0x000007cf

00000c90 <i2c_read>:

void i2c_read(i2c_device* dev, uint16_t numBytes, _Bool bShouldStop)
{
     c90:	b5f0      	push	{r4, r5, r6, r7, lr}
     c92:	b083      	sub	sp, #12
     c94:	0005      	movs	r5, r0
     c96:	000f      	movs	r7, r1
     c98:	9101      	str	r1, [sp, #4]
     c9a:	0016      	movs	r6, r2
	#warning add timeout
	//clear buffer just in case
	//weird things happen every now and then if I don't clear the buffer
	I_MASTER_PKT->data = i2c_master_buff;
     c9c:	4c11      	ldr	r4, [pc, #68]	; (ce4 <i2c_read+0x54>)
     c9e:	4812      	ldr	r0, [pc, #72]	; (ce8 <i2c_read+0x58>)
     ca0:	6060      	str	r0, [r4, #4]
	memset(I_MASTER_PKT->data, '\0', numBytes);
     ca2:	000a      	movs	r2, r1
     ca4:	2100      	movs	r1, #0
     ca6:	4b11      	ldr	r3, [pc, #68]	; (cec <i2c_read+0x5c>)
     ca8:	4798      	blx	r3
	I_MASTER_PKT->address = dev->addr;
     caa:	782b      	ldrb	r3, [r5, #0]
     cac:	8023      	strh	r3, [r4, #0]
	I_MASTER_PKT->data_length = numBytes;
     cae:	8067      	strh	r7, [r4, #2]
	if(bShouldStop)
     cb0:	2e00      	cmp	r6, #0
     cb2:	d00e      	beq.n	cd2 <i2c_read+0x42>
	{
		#warning add timeout handling
		while(i2c_master_read_packet_wait(I_MASTER, I_MASTER_PKT) != STATUS_OK);
     cb4:	4e0b      	ldr	r6, [pc, #44]	; (ce4 <i2c_read+0x54>)
     cb6:	4c0e      	ldr	r4, [pc, #56]	; (cf0 <i2c_read+0x60>)
     cb8:	4f0e      	ldr	r7, [pc, #56]	; (cf4 <i2c_read+0x64>)
     cba:	0031      	movs	r1, r6
     cbc:	0020      	movs	r0, r4
     cbe:	47b8      	blx	r7
     cc0:	2800      	cmp	r0, #0
     cc2:	d1fa      	bne.n	cba <i2c_read+0x2a>
		#warning add timeout handling
		while(i2c_master_read_packet_wait_no_stop(I_MASTER, I_MASTER_PKT) != STATUS_OK);
	}
	
	//deliver the goods
	memcpy(dev->buffer, i2c_master_buff, numBytes);
     cc4:	6868      	ldr	r0, [r5, #4]
     cc6:	9a01      	ldr	r2, [sp, #4]
     cc8:	4907      	ldr	r1, [pc, #28]	; (ce8 <i2c_read+0x58>)
     cca:	4b0b      	ldr	r3, [pc, #44]	; (cf8 <i2c_read+0x68>)
     ccc:	4798      	blx	r3

}
     cce:	b003      	add	sp, #12
     cd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while(i2c_master_read_packet_wait_no_stop(I_MASTER, I_MASTER_PKT) != STATUS_OK);
     cd2:	4e04      	ldr	r6, [pc, #16]	; (ce4 <i2c_read+0x54>)
     cd4:	4c06      	ldr	r4, [pc, #24]	; (cf0 <i2c_read+0x60>)
     cd6:	4f09      	ldr	r7, [pc, #36]	; (cfc <i2c_read+0x6c>)
     cd8:	0031      	movs	r1, r6
     cda:	0020      	movs	r0, r4
     cdc:	47b8      	blx	r7
     cde:	2800      	cmp	r0, #0
     ce0:	d1fa      	bne.n	cd8 <i2c_read+0x48>
     ce2:	e7ef      	b.n	cc4 <i2c_read+0x34>
     ce4:	20000ce8 	.word	0x20000ce8
     ce8:	20000cf4 	.word	0x20000cf4
     cec:	00004135 	.word	0x00004135
     cf0:	20000df4 	.word	0x20000df4
     cf4:	00000a9d 	.word	0x00000a9d
     cf8:	000040b1 	.word	0x000040b1
     cfc:	00000ab1 	.word	0x00000ab1

00000d00 <i2c_master_bus_init>:

void i2c_master_bus_init(void)
{
     d00:	b530      	push	{r4, r5, lr}
     d02:	b08f      	sub	sp, #60	; 0x3c
	/*Sanity check argument */
	Assert(config);
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
     d04:	ab01      	add	r3, sp, #4
     d06:	2200      	movs	r2, #0
     d08:	9203      	str	r2, [sp, #12]
#endif
	config->generator_source = GCLK_GENERATOR_0;
     d0a:	731a      	strb	r2, [r3, #12]
	config->run_in_standby   = false;
     d0c:	761a      	strb	r2, [r3, #24]
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
     d0e:	2180      	movs	r1, #128	; 0x80
     d10:	0389      	lsls	r1, r1, #14
     d12:	9105      	str	r1, [sp, #20]
	config->buffer_timeout   = 65535;
     d14:	2101      	movs	r1, #1
     d16:	4249      	negs	r1, r1
     d18:	82d9      	strh	r1, [r3, #22]
	config->unknown_bus_state_timeout = 65535;
     d1a:	8299      	strh	r1, [r3, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->scl_low_timeout  = false;
     d1c:	3125      	adds	r1, #37	; 0x25
     d1e:	545a      	strb	r2, [r3, r1]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
     d20:	920b      	str	r2, [sp, #44]	; 0x2c
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
     d22:	3108      	adds	r1, #8
     d24:	545a      	strb	r2, [r3, r1]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
     d26:	3101      	adds	r1, #1
     d28:	545a      	strb	r2, [r3, r1]
	config->master_scl_low_extend_timeout  = false;
     d2a:	3101      	adds	r1, #1
     d2c:	545a      	strb	r2, [r3, r1]
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
     d2e:	31a9      	adds	r1, #169	; 0xa9
     d30:	8619      	strh	r1, [r3, #48]	; 0x30
	struct i2c_master_config i2c_conf;
	i2c_master_get_config_defaults(&i2c_conf);
	i2c_conf.pinmux_pad0 = I_MASTER_PIN0;
     d32:	4918      	ldr	r1, [pc, #96]	; (d94 <i2c_master_bus_init+0x94>)
     d34:	9108      	str	r1, [sp, #32]
	i2c_conf.pinmux_pad1 = I_MASTER_PIN1;
     d36:	4918      	ldr	r1, [pc, #96]	; (d98 <i2c_master_bus_init+0x98>)
     d38:	9109      	str	r1, [sp, #36]	; 0x24
	i2c_conf.baud_rate = I_MASTER_BAUD;
     d3a:	21c8      	movs	r1, #200	; 0xc8
     d3c:	0049      	lsls	r1, r1, #1
     d3e:	9101      	str	r1, [sp, #4]
	i2c_conf.baud_rate_high_speed = false;
     d40:	9202      	str	r2, [sp, #8]
	i2c_conf.run_in_standby = false;
	I_MASTER_PKT->address = 0x04;
     d42:	4b16      	ldr	r3, [pc, #88]	; (d9c <i2c_master_bus_init+0x9c>)
     d44:	398d      	subs	r1, #141	; 0x8d
     d46:	39ff      	subs	r1, #255	; 0xff
     d48:	8019      	strh	r1, [r3, #0]
	I_MASTER_PKT->data = i2c_master_buff;
     d4a:	4915      	ldr	r1, [pc, #84]	; (da0 <i2c_master_bus_init+0xa0>)
     d4c:	6059      	str	r1, [r3, #4]
	I_MASTER_PKT->data_length = 2;
     d4e:	2102      	movs	r1, #2
     d50:	8059      	strh	r1, [r3, #2]
	I_MASTER_PKT->ten_bit_address = I_MASTER_ADDR_MODE;
     d52:	721a      	strb	r2, [r3, #8]
	while(i2c_master_init(I_MASTER, I_MASTER_SERCOM, &i2c_conf) != STATUS_OK);
     d54:	4d13      	ldr	r5, [pc, #76]	; (da4 <i2c_master_bus_init+0xa4>)
     d56:	4c14      	ldr	r4, [pc, #80]	; (da8 <i2c_master_bus_init+0xa8>)
     d58:	aa01      	add	r2, sp, #4
     d5a:	4914      	ldr	r1, [pc, #80]	; (dac <i2c_master_bus_init+0xac>)
     d5c:	0028      	movs	r0, r5
     d5e:	47a0      	blx	r4
     d60:	2800      	cmp	r0, #0
     d62:	d1f9      	bne.n	d58 <i2c_master_bus_init+0x58>
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     d64:	4b0f      	ldr	r3, [pc, #60]	; (da4 <i2c_master_bus_init+0xa4>)
     d66:	681a      	ldr	r2, [r3, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
     d68:	2107      	movs	r1, #7
     d6a:	69d3      	ldr	r3, [r2, #28]
	while (i2c_master_is_syncing(module)) {
     d6c:	4219      	tst	r1, r3
     d6e:	d1fc      	bne.n	d6a <i2c_master_bus_init+0x6a>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
     d70:	6813      	ldr	r3, [r2, #0]
     d72:	2102      	movs	r1, #2
     d74:	430b      	orrs	r3, r1
     d76:	6013      	str	r3, [r2, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
     d78:	4b0a      	ldr	r3, [pc, #40]	; (da4 <i2c_master_bus_init+0xa4>)
     d7a:	88dc      	ldrh	r4, [r3, #6]
	uint32_t timeout_counter = 0;
     d7c:	2300      	movs	r3, #0
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
     d7e:	2010      	movs	r0, #16
     d80:	8b51      	ldrh	r1, [r2, #26]
     d82:	4201      	tst	r1, r0
     d84:	d104      	bne.n	d90 <i2c_master_bus_init+0x90>
		timeout_counter++;
     d86:	3301      	adds	r3, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
     d88:	42a3      	cmp	r3, r4
     d8a:	d3f9      	bcc.n	d80 <i2c_master_bus_init+0x80>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
     d8c:	2310      	movs	r3, #16
     d8e:	8353      	strh	r3, [r2, #26]
	i2c_master_enable(&i2c_mod);
}
     d90:	b00f      	add	sp, #60	; 0x3c
     d92:	bd30      	pop	{r4, r5, pc}
     d94:	00100002 	.word	0x00100002
     d98:	00110002 	.word	0x00110002
     d9c:	20000ce8 	.word	0x20000ce8
     da0:	20000cf4 	.word	0x20000cf4
     da4:	20000df4 	.word	0x20000df4
     da8:	000004c5 	.word	0x000004c5
     dac:	42000c00 	.word	0x42000c00

00000db0 <_eeprom_emulator_nvm_erase_row>:
 *
 *  \param[in] row  Physical row in EEPROM space to erase
 */
static void _eeprom_emulator_nvm_erase_row(
		const uint8_t row)
{
     db0:	b570      	push	{r4, r5, r6, lr}
	enum status_code error_code = STATUS_OK;

	do {
		error_code = nvm_erase_row(
				(uint32_t)&_eeprom_instance.flash[row * NVMCTRL_ROW_PAGES]);
     db2:	0204      	lsls	r4, r0, #8
     db4:	4e03      	ldr	r6, [pc, #12]	; (dc4 <_eeprom_emulator_nvm_erase_row+0x14>)
		error_code = nvm_erase_row(
     db6:	4d04      	ldr	r5, [pc, #16]	; (dc8 <_eeprom_emulator_nvm_erase_row+0x18>)
				(uint32_t)&_eeprom_instance.flash[row * NVMCTRL_ROW_PAGES]);
     db8:	6873      	ldr	r3, [r6, #4]
     dba:	1918      	adds	r0, r3, r4
		error_code = nvm_erase_row(
     dbc:	47a8      	blx	r5
	} while (error_code == STATUS_BUSY);
     dbe:	2805      	cmp	r0, #5
     dc0:	d0fa      	beq.n	db8 <_eeprom_emulator_nvm_erase_row+0x8>
}
     dc2:	bd70      	pop	{r4, r5, r6, pc}
     dc4:	20000a4c 	.word	0x20000a4c
     dc8:	00000405 	.word	0x00000405

00000dcc <_eeprom_emulator_update_page_mapping>:

/**
 * \brief Creates a map in SRAM to translate logical EEPROM pages to physical FLASH pages.
 */
static void _eeprom_emulator_update_page_mapping(void)
{
     dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
     dce:	46de      	mov	lr, fp
     dd0:	4657      	mov	r7, sl
     dd2:	464e      	mov	r6, r9
     dd4:	4645      	mov	r5, r8
     dd6:	b5e0      	push	{r5, r6, r7, lr}
     dd8:	b083      	sub	sp, #12
	for (i = 0; i < _eeprom_instance.physical_pages; i=i+4) {
     dda:	4b4d      	ldr	r3, [pc, #308]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     ddc:	891b      	ldrh	r3, [r3, #8]
     dde:	2b00      	cmp	r3, #0
     de0:	d100      	bne.n	de4 <_eeprom_emulator_update_page_mapping+0x18>
     de2:	e08f      	b.n	f04 <_eeprom_emulator_update_page_mapping+0x138>
     de4:	2500      	movs	r5, #0
		uint16_t pre_logical_page = _eeprom_instance.flash[i].header.logical_page;
     de6:	4b4a      	ldr	r3, [pc, #296]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     de8:	469a      	mov	sl, r3
			uint16_t next_logical_page = _eeprom_instance.flash[j].header.logical_page;
     dea:	001f      	movs	r7, r3
     dec:	e027      	b.n	e3e <_eeprom_emulator_update_page_mapping+0x72>
		 _eeprom_emulator_nvm_erase_row(pre_phy_page/4);
     dee:	9801      	ldr	r0, [sp, #4]
     df0:	4b48      	ldr	r3, [pc, #288]	; (f14 <_eeprom_emulator_update_page_mapping+0x148>)
     df2:	4798      	blx	r3
		for (j = NVMCTRL_ROW_PAGES+i; j < _eeprom_instance.physical_pages; j=j+4) {
     df4:	3404      	adds	r4, #4
     df6:	b2a4      	uxth	r4, r4
     df8:	4b45      	ldr	r3, [pc, #276]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     dfa:	891b      	ldrh	r3, [r3, #8]
     dfc:	42a3      	cmp	r3, r4
     dfe:	d918      	bls.n	e32 <_eeprom_emulator_update_page_mapping+0x66>
			if (j == EEPROM_MASTER_PAGE_NUMBER) {
     e00:	3b01      	subs	r3, #1
     e02:	429c      	cmp	r4, r3
     e04:	d0f6      	beq.n	df4 <_eeprom_emulator_update_page_mapping+0x28>
			uint16_t next_logical_page = _eeprom_instance.flash[j].header.logical_page;
     e06:	687a      	ldr	r2, [r7, #4]
     e08:	01a3      	lsls	r3, r4, #6
     e0a:	5cd3      	ldrb	r3, [r2, r3]
			if( next_logical_page == EEPROM_INVALID_PAGE_NUMBER) {
     e0c:	2bff      	cmp	r3, #255	; 0xff
     e0e:	d0f1      	beq.n	df4 <_eeprom_emulator_update_page_mapping+0x28>
			if(pre_logical_page == next_logical_page) {
     e10:	429e      	cmp	r6, r3
     e12:	d1ef      	bne.n	df4 <_eeprom_emulator_update_page_mapping+0x28>
		== _eeprom_instance.flash[phy_page+2].header.logical_page)
     e14:	464b      	mov	r3, r9
     e16:	5cd3      	ldrb	r3, [r2, r3]
	if((_eeprom_instance.flash[phy_page].header.logical_page
     e18:	4641      	mov	r1, r8
     e1a:	5c51      	ldrb	r1, [r2, r1]
     e1c:	4299      	cmp	r1, r3
     e1e:	d0e6      	beq.n	dee <_eeprom_emulator_update_page_mapping+0x22>
	if(_eeprom_emulator_is_full_row(pre_phy_page)) {
     e20:	4659      	mov	r1, fp
     e22:	5c52      	ldrb	r2, [r2, r1]
     e24:	429a      	cmp	r2, r3
     e26:	d0e2      	beq.n	dee <_eeprom_emulator_update_page_mapping+0x22>
		_eeprom_emulator_nvm_erase_row(next_phy_page/4);
     e28:	08a0      	lsrs	r0, r4, #2
     e2a:	b2c0      	uxtb	r0, r0
     e2c:	4b39      	ldr	r3, [pc, #228]	; (f14 <_eeprom_emulator_update_page_mapping+0x148>)
     e2e:	4798      	blx	r3
     e30:	e7e0      	b.n	df4 <_eeprom_emulator_update_page_mapping+0x28>
	for (i = 0; i < _eeprom_instance.physical_pages; i=i+4) {
     e32:	3504      	adds	r5, #4
     e34:	b2ad      	uxth	r5, r5
     e36:	4b36      	ldr	r3, [pc, #216]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     e38:	891b      	ldrh	r3, [r3, #8]
     e3a:	429d      	cmp	r5, r3
     e3c:	d217      	bcs.n	e6e <_eeprom_emulator_update_page_mapping+0xa2>
		uint16_t pre_logical_page = _eeprom_instance.flash[i].header.logical_page;
     e3e:	01ab      	lsls	r3, r5, #6
     e40:	4698      	mov	r8, r3
     e42:	4653      	mov	r3, sl
     e44:	685b      	ldr	r3, [r3, #4]
     e46:	4642      	mov	r2, r8
     e48:	5c9e      	ldrb	r6, [r3, r2]
		if( pre_logical_page == EEPROM_INVALID_PAGE_NUMBER) {
     e4a:	2eff      	cmp	r6, #255	; 0xff
     e4c:	d0f1      	beq.n	e32 <_eeprom_emulator_update_page_mapping+0x66>
		for (j = NVMCTRL_ROW_PAGES+i; j < _eeprom_instance.physical_pages; j=j+4) {
     e4e:	1d2c      	adds	r4, r5, #4
     e50:	b2a4      	uxth	r4, r4
     e52:	4b2f      	ldr	r3, [pc, #188]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     e54:	891b      	ldrh	r3, [r3, #8]
     e56:	429c      	cmp	r4, r3
     e58:	d209      	bcs.n	e6e <_eeprom_emulator_update_page_mapping+0xa2>
		== _eeprom_instance.flash[phy_page+2].header.logical_page)
     e5a:	2280      	movs	r2, #128	; 0x80
     e5c:	4442      	add	r2, r8
     e5e:	4691      	mov	r9, r2
		|| (_eeprom_instance.flash[phy_page+1].header.logical_page
     e60:	2240      	movs	r2, #64	; 0x40
     e62:	4442      	add	r2, r8
     e64:	4693      	mov	fp, r2
		 _eeprom_emulator_nvm_erase_row(pre_phy_page/4);
     e66:	08aa      	lsrs	r2, r5, #2
     e68:	b2d2      	uxtb	r2, r2
     e6a:	9201      	str	r2, [sp, #4]
     e6c:	e7c8      	b.n	e00 <_eeprom_emulator_update_page_mapping+0x34>
	/* Check if exists invalid logical page */
	_eeprom_emulator_check_logical_page();

	/* Scan through all physical pages, to map physical and logical pages */
	for (uint16_t c = 0; c < _eeprom_instance.physical_pages; c++) {
     e6e:	2b00      	cmp	r3, #0
     e70:	d043      	beq.n	efa <_eeprom_emulator_update_page_mapping+0x12e>
		/* Read in the logical page stored in the current physical page */
		uint16_t logical_page = _eeprom_instance.flash[c].header.logical_page;

		/* If the logical page number is valid, add it to the mapping */
		if ((logical_page != EEPROM_INVALID_PAGE_NUMBER) &&
				(logical_page < _eeprom_instance.logical_pages)) {
     e72:	4a27      	ldr	r2, [pc, #156]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     e74:	7a97      	ldrb	r7, [r2, #10]
     e76:	6851      	ldr	r1, [r2, #4]
     e78:	2200      	movs	r2, #0
		if (c == EEPROM_MASTER_PAGE_NUMBER) {
     e7a:	1e5e      	subs	r6, r3, #1
			_eeprom_instance.page_map[logical_page] = c;
     e7c:	4d24      	ldr	r5, [pc, #144]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     e7e:	e004      	b.n	e8a <_eeprom_emulator_update_page_mapping+0xbe>
     e80:	3201      	adds	r2, #1
     e82:	3140      	adds	r1, #64	; 0x40
	for (uint16_t c = 0; c < _eeprom_instance.physical_pages; c++) {
     e84:	b290      	uxth	r0, r2
     e86:	4298      	cmp	r0, r3
     e88:	d20a      	bcs.n	ea0 <_eeprom_emulator_update_page_mapping+0xd4>
		if (c == EEPROM_MASTER_PAGE_NUMBER) {
     e8a:	4296      	cmp	r6, r2
     e8c:	d0f8      	beq.n	e80 <_eeprom_emulator_update_page_mapping+0xb4>
		uint16_t logical_page = _eeprom_instance.flash[c].header.logical_page;
     e8e:	7808      	ldrb	r0, [r1, #0]
     e90:	b284      	uxth	r4, r0
		if ((logical_page != EEPROM_INVALID_PAGE_NUMBER) &&
     e92:	2cff      	cmp	r4, #255	; 0xff
     e94:	d0f4      	beq.n	e80 <_eeprom_emulator_update_page_mapping+0xb4>
     e96:	42bc      	cmp	r4, r7
     e98:	d2f2      	bcs.n	e80 <_eeprom_emulator_update_page_mapping+0xb4>
			_eeprom_instance.page_map[logical_page] = c;
     e9a:	1828      	adds	r0, r5, r0
     e9c:	72c2      	strb	r2, [r0, #11]
     e9e:	e7ef      	b.n	e80 <_eeprom_emulator_update_page_mapping+0xb4>
		}
	}

	/* Use an invalid page number as the spare row until a valid one has been
	 * found */
	_eeprom_instance.spare_row = EEPROM_INVALID_ROW_NUMBER;
     ea0:	203f      	movs	r0, #63	; 0x3f
     ea2:	2287      	movs	r2, #135	; 0x87
     ea4:	491a      	ldr	r1, [pc, #104]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     ea6:	5488      	strb	r0, [r1, r2]

	/* Scan through all physical rows, to find an erased row to use as the
	 * spare */
	for (uint16_t c = 0; c < (_eeprom_instance.physical_pages / NVMCTRL_ROW_PAGES); c++) {
     ea8:	089d      	lsrs	r5, r3, #2
     eaa:	d01f      	beq.n	eec <_eeprom_emulator_update_page_mapping+0x120>

			if (physical_page == EEPROM_MASTER_PAGE_NUMBER) {
				continue;
			}

			if (_eeprom_instance.flash[physical_page].header.logical_page !=
     eac:	684c      	ldr	r4, [r1, #4]
     eae:	2104      	movs	r1, #4
     eb0:	2700      	movs	r7, #0
			if (physical_page == EEPROM_MASTER_PAGE_NUMBER) {
     eb2:	3b01      	subs	r3, #1
     eb4:	e013      	b.n	ede <_eeprom_emulator_update_page_mapping+0x112>
     eb6:	3201      	adds	r2, #1
     eb8:	b292      	uxth	r2, r2
		for (uint8_t c2 = 0; c2 < NVMCTRL_ROW_PAGES; c2++) {
     eba:	4291      	cmp	r1, r2
     ebc:	d007      	beq.n	ece <_eeprom_emulator_update_page_mapping+0x102>
			if (physical_page == EEPROM_MASTER_PAGE_NUMBER) {
     ebe:	429a      	cmp	r2, r3
     ec0:	d0f9      	beq.n	eb6 <_eeprom_emulator_update_page_mapping+0xea>
			if (_eeprom_instance.flash[physical_page].header.logical_page !=
     ec2:	0190      	lsls	r0, r2, #6
     ec4:	5d00      	ldrb	r0, [r0, r4]
     ec6:	28ff      	cmp	r0, #255	; 0xff
     ec8:	d0f5      	beq.n	eb6 <_eeprom_emulator_update_page_mapping+0xea>
					EEPROM_INVALID_PAGE_NUMBER) {
				spare_row_found = false;
     eca:	2600      	movs	r6, #0
     ecc:	e7f3      	b.n	eb6 <_eeprom_emulator_update_page_mapping+0xea>
			}
		}

		/* If we've now found the spare row, store it and abort the search */
		if (spare_row_found == true) {
     ece:	2e00      	cmp	r6, #0
     ed0:	d109      	bne.n	ee6 <_eeprom_emulator_update_page_mapping+0x11a>
	for (uint16_t c = 0; c < (_eeprom_instance.physical_pages / NVMCTRL_ROW_PAGES); c++) {
     ed2:	3701      	adds	r7, #1
     ed4:	b2bf      	uxth	r7, r7
     ed6:	3104      	adds	r1, #4
     ed8:	b289      	uxth	r1, r1
     eda:	42bd      	cmp	r5, r7
     edc:	d006      	beq.n	eec <_eeprom_emulator_update_page_mapping+0x120>
			uint16_t physical_page = (c * NVMCTRL_ROW_PAGES) + c2;
     ede:	1f0a      	subs	r2, r1, #4
     ee0:	b292      	uxth	r2, r2
     ee2:	2601      	movs	r6, #1
     ee4:	e7eb      	b.n	ebe <_eeprom_emulator_update_page_mapping+0xf2>
			_eeprom_instance.spare_row = c;
     ee6:	2387      	movs	r3, #135	; 0x87
     ee8:	4a09      	ldr	r2, [pc, #36]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     eea:	54d7      	strb	r7, [r2, r3]
			break;
		}
	}
}
     eec:	b003      	add	sp, #12
     eee:	bc3c      	pop	{r2, r3, r4, r5}
     ef0:	4690      	mov	r8, r2
     ef2:	4699      	mov	r9, r3
     ef4:	46a2      	mov	sl, r4
     ef6:	46ab      	mov	fp, r5
     ef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	_eeprom_instance.spare_row = EEPROM_INVALID_ROW_NUMBER;
     efa:	213f      	movs	r1, #63	; 0x3f
     efc:	2387      	movs	r3, #135	; 0x87
     efe:	4a04      	ldr	r2, [pc, #16]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     f00:	54d1      	strb	r1, [r2, r3]
     f02:	e7f3      	b.n	eec <_eeprom_emulator_update_page_mapping+0x120>
     f04:	213f      	movs	r1, #63	; 0x3f
     f06:	2387      	movs	r3, #135	; 0x87
     f08:	4a01      	ldr	r2, [pc, #4]	; (f10 <_eeprom_emulator_update_page_mapping+0x144>)
     f0a:	54d1      	strb	r1, [r2, r3]
     f0c:	e7ee      	b.n	eec <_eeprom_emulator_update_page_mapping+0x120>
     f0e:	46c0      	nop			; (mov r8, r8)
     f10:	20000a4c 	.word	0x20000a4c
     f14:	00000db1 	.word	0x00000db1

00000f18 <_eeprom_emulator_nvm_read_page>:
{
     f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     f1a:	000d      	movs	r5, r1
				(uint32_t)&_eeprom_instance.flash[physical_page],
     f1c:	0184      	lsls	r4, r0, #6
     f1e:	4f05      	ldr	r7, [pc, #20]	; (f34 <_eeprom_emulator_nvm_read_page+0x1c>)
		error_code = nvm_read_buffer(
     f20:	4e05      	ldr	r6, [pc, #20]	; (f38 <_eeprom_emulator_nvm_read_page+0x20>)
				(uint32_t)&_eeprom_instance.flash[physical_page],
     f22:	687b      	ldr	r3, [r7, #4]
     f24:	1918      	adds	r0, r3, r4
		error_code = nvm_read_buffer(
     f26:	2240      	movs	r2, #64	; 0x40
     f28:	0029      	movs	r1, r5
     f2a:	47b0      	blx	r6
	} while (error_code == STATUS_BUSY);
     f2c:	2805      	cmp	r0, #5
     f2e:	d0f8      	beq.n	f22 <_eeprom_emulator_nvm_read_page+0xa>
}
     f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     f32:	46c0      	nop			; (mov r8, r8)
     f34:	20000a4c 	.word	0x20000a4c
     f38:	00000399 	.word	0x00000399

00000f3c <_eeprom_emulator_nvm_fill_cache>:
{
     f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     f3e:	000d      	movs	r5, r1
				(uint32_t)&_eeprom_instance.flash[physical_page],
     f40:	0184      	lsls	r4, r0, #6
     f42:	4f05      	ldr	r7, [pc, #20]	; (f58 <_eeprom_emulator_nvm_fill_cache+0x1c>)
		error_code = nvm_write_buffer(
     f44:	4e05      	ldr	r6, [pc, #20]	; (f5c <_eeprom_emulator_nvm_fill_cache+0x20>)
				(uint32_t)&_eeprom_instance.flash[physical_page],
     f46:	687b      	ldr	r3, [r7, #4]
     f48:	1918      	adds	r0, r3, r4
		error_code = nvm_write_buffer(
     f4a:	2240      	movs	r2, #64	; 0x40
     f4c:	0029      	movs	r1, r5
     f4e:	47b0      	blx	r6
	} while (error_code == STATUS_BUSY);
     f50:	2805      	cmp	r0, #5
     f52:	d0f8      	beq.n	f46 <_eeprom_emulator_nvm_fill_cache+0xa>
}
     f54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     f56:	46c0      	nop			; (mov r8, r8)
     f58:	20000a4c 	.word	0x20000a4c
     f5c:	000002f1 	.word	0x000002f1

00000f60 <_eeprom_emulator_nvm_commit_cache>:
{
     f60:	b570      	push	{r4, r5, r6, lr}
				(uint32_t)&_eeprom_instance.flash[physical_page], 0);
     f62:	0184      	lsls	r4, r0, #6
     f64:	4e04      	ldr	r6, [pc, #16]	; (f78 <_eeprom_emulator_nvm_commit_cache+0x18>)
		error_code = nvm_execute_command(
     f66:	4d05      	ldr	r5, [pc, #20]	; (f7c <_eeprom_emulator_nvm_commit_cache+0x1c>)
				(uint32_t)&_eeprom_instance.flash[physical_page], 0);
     f68:	6873      	ldr	r3, [r6, #4]
     f6a:	1919      	adds	r1, r3, r4
		error_code = nvm_execute_command(
     f6c:	2200      	movs	r2, #0
     f6e:	2004      	movs	r0, #4
     f70:	47a8      	blx	r5
	} while (error_code == STATUS_BUSY);
     f72:	2805      	cmp	r0, #5
     f74:	d0f8      	beq.n	f68 <_eeprom_emulator_nvm_commit_cache+0x8>
}
     f76:	bd70      	pop	{r4, r5, r6, pc}
     f78:	20000a4c 	.word	0x20000a4c
     f7c:	00000251 	.word	0x00000251

00000f80 <eeprom_emulator_init>:
 *                                formatted
 * \retval STATUS_ERR_IO          EEPROM data is incompatible with this version
 *                                or scheme of the EEPROM emulator
 */
enum status_code eeprom_emulator_init(void)
{
     f80:	b510      	push	{r4, lr}
     f82:	b098      	sub	sp, #96	; 0x60
	config->sleep_power_mode  = NVM_SLEEP_POWER_MODE_WAKEONACCESS;
     f84:	ab16      	add	r3, sp, #88	; 0x58
     f86:	2100      	movs	r1, #0
     f88:	7019      	strb	r1, [r3, #0]
	config->manual_page_write = true;
     f8a:	2201      	movs	r2, #1
     f8c:	705a      	strb	r2, [r3, #1]
	config->wait_states       = NVMCTRL->CTRLB.bit.RWS;
     f8e:	4a2e      	ldr	r2, [pc, #184]	; (1048 <eeprom_emulator_init+0xc8>)
     f90:	6852      	ldr	r2, [r2, #4]
     f92:	06d2      	lsls	r2, r2, #27
     f94:	0f12      	lsrs	r2, r2, #28
     f96:	709a      	strb	r2, [r3, #2]
	config->disable_cache     = false;
     f98:	70d9      	strb	r1, [r3, #3]
	config->cache_readmode    = NVM_CACHE_READMODE_NO_MISS_PENALTY;
     f9a:	7119      	strb	r1, [r3, #4]
	nvm_get_config_defaults(&config);
	config.manual_page_write = true;

	/* Apply new NVM configuration */
	do {
		error_code = nvm_set_config(&config);
     f9c:	4c2b      	ldr	r4, [pc, #172]	; (104c <eeprom_emulator_init+0xcc>)
     f9e:	a816      	add	r0, sp, #88	; 0x58
     fa0:	47a0      	blx	r4
	} while (error_code == STATUS_BUSY);
     fa2:	2805      	cmp	r0, #5
     fa4:	d0fb      	beq.n	f9e <eeprom_emulator_init+0x1e>

	/* Get the NVM controller configuration parameters */
	nvm_get_parameters(&parameters);
     fa6:	a813      	add	r0, sp, #76	; 0x4c
     fa8:	4b29      	ldr	r3, [pc, #164]	; (1050 <eeprom_emulator_init+0xd0>)
     faa:	4798      	blx	r3

	/* Ensure the device fuses are configured for at least one master page row,
	 * one user EEPROM data row and one spare row */
	if (parameters.eeprom_number_of_pages < (3 * NVMCTRL_ROW_PAGES)) {
     fac:	9b14      	ldr	r3, [sp, #80]	; 0x50
		return STATUS_ERR_NO_MEMORY;
     fae:	2016      	movs	r0, #22
	if (parameters.eeprom_number_of_pages < (3 * NVMCTRL_ROW_PAGES)) {
     fb0:	2b0b      	cmp	r3, #11
     fb2:	d801      	bhi.n	fb8 <eeprom_emulator_init+0x38>

	/* Mark initialization as complete */
	_eeprom_instance.initialized = true;

	return error_code;
}
     fb4:	b018      	add	sp, #96	; 0x60
     fb6:	bd10      	pop	{r4, pc}
	_eeprom_instance.physical_pages =
     fb8:	4c26      	ldr	r4, [pc, #152]	; (1054 <eeprom_emulator_init+0xd4>)
     fba:	8123      	strh	r3, [r4, #8]
			(parameters.eeprom_number_of_pages - (2 * NVMCTRL_ROW_PAGES)) / 2;
     fbc:	001a      	movs	r2, r3
     fbe:	3a08      	subs	r2, #8
     fc0:	0852      	lsrs	r2, r2, #1
	_eeprom_instance.logical_pages  =
     fc2:	72a2      	strb	r2, [r4, #10]
			(void*)(FLASH_SIZE -
     fc4:	041b      	lsls	r3, r3, #16
     fc6:	0a9b      	lsrs	r3, r3, #10
     fc8:	425b      	negs	r3, r3
     fca:	2280      	movs	r2, #128	; 0x80
     fcc:	02d2      	lsls	r2, r2, #11
     fce:	4694      	mov	ip, r2
     fd0:	4463      	add	r3, ip
	_eeprom_instance.flash =
     fd2:	6063      	str	r3, [r4, #4]
	_eeprom_instance.cache_active = false;
     fd4:	2200      	movs	r2, #0
     fd6:	23c8      	movs	r3, #200	; 0xc8
     fd8:	54e2      	strb	r2, [r4, r3]
	_eeprom_emulator_update_page_mapping();
     fda:	4b1f      	ldr	r3, [pc, #124]	; (1058 <eeprom_emulator_init+0xd8>)
     fdc:	4798      	blx	r3
	if (_eeprom_instance.spare_row == EEPROM_INVALID_ROW_NUMBER) {
     fde:	2387      	movs	r3, #135	; 0x87
     fe0:	5ce3      	ldrb	r3, [r4, r3]
		return STATUS_ERR_BAD_FORMAT;
     fe2:	201a      	movs	r0, #26
	if (_eeprom_instance.spare_row == EEPROM_INVALID_ROW_NUMBER) {
     fe4:	2b3f      	cmp	r3, #63	; 0x3f
     fe6:	d0e5      	beq.n	fb4 <eeprom_emulator_init+0x34>
	const uint32_t magic_key[] = EEPROM_MAGIC_KEY;
     fe8:	466a      	mov	r2, sp
     fea:	4b1c      	ldr	r3, [pc, #112]	; (105c <eeprom_emulator_init+0xdc>)
     fec:	cb13      	ldmia	r3!, {r0, r1, r4}
     fee:	c213      	stmia	r2!, {r0, r1, r4}
	_eeprom_emulator_nvm_read_page(EEPROM_MASTER_PAGE_NUMBER, &master_page);
     ff0:	4b18      	ldr	r3, [pc, #96]	; (1054 <eeprom_emulator_init+0xd4>)
     ff2:	8918      	ldrh	r0, [r3, #8]
     ff4:	3801      	subs	r0, #1
     ff6:	b280      	uxth	r0, r0
     ff8:	0011      	movs	r1, r2
     ffa:	4b19      	ldr	r3, [pc, #100]	; (1060 <eeprom_emulator_init+0xe0>)
     ffc:	4798      	blx	r3
		if (master_page.magic_key[c] != magic_key[c]) {
     ffe:	9b03      	ldr	r3, [sp, #12]
    1000:	9a00      	ldr	r2, [sp, #0]
    1002:	4293      	cmp	r3, r2
    1004:	d119      	bne.n	103a <eeprom_emulator_init+0xba>
    1006:	9b04      	ldr	r3, [sp, #16]
    1008:	9a01      	ldr	r2, [sp, #4]
    100a:	4293      	cmp	r3, r2
    100c:	d117      	bne.n	103e <eeprom_emulator_init+0xbe>
    100e:	9b05      	ldr	r3, [sp, #20]
    1010:	9a02      	ldr	r2, [sp, #8]
    1012:	4293      	cmp	r3, r2
    1014:	d115      	bne.n	1042 <eeprom_emulator_init+0xc2>
	if (master_page.emulator_id   != EEPROM_EMULATOR_ID) {
    1016:	ab03      	add	r3, sp, #12
    1018:	7bdb      	ldrb	r3, [r3, #15]
		return STATUS_ERR_IO;
    101a:	2010      	movs	r0, #16
	if (master_page.emulator_id   != EEPROM_EMULATOR_ID) {
    101c:	2b01      	cmp	r3, #1
    101e:	d1c9      	bne.n	fb4 <eeprom_emulator_init+0x34>
	if (master_page.major_version != EEPROM_MAJOR_VERSION) {
    1020:	ab03      	add	r3, sp, #12
    1022:	7b1b      	ldrb	r3, [r3, #12]
    1024:	2b01      	cmp	r3, #1
    1026:	d1c5      	bne.n	fb4 <eeprom_emulator_init+0x34>
	if (master_page.minor_version != EEPROM_MINOR_VERSION) {
    1028:	ab03      	add	r3, sp, #12
    102a:	7b5b      	ldrb	r3, [r3, #13]
    102c:	2b00      	cmp	r3, #0
    102e:	d1c1      	bne.n	fb4 <eeprom_emulator_init+0x34>
	_eeprom_instance.initialized = true;
    1030:	2201      	movs	r2, #1
    1032:	4b08      	ldr	r3, [pc, #32]	; (1054 <eeprom_emulator_init+0xd4>)
    1034:	701a      	strb	r2, [r3, #0]
	return error_code;
    1036:	2000      	movs	r0, #0
    1038:	e7bc      	b.n	fb4 <eeprom_emulator_init+0x34>
			return STATUS_ERR_BAD_FORMAT;
    103a:	201a      	movs	r0, #26
    103c:	e7ba      	b.n	fb4 <eeprom_emulator_init+0x34>
    103e:	201a      	movs	r0, #26
    1040:	e7b8      	b.n	fb4 <eeprom_emulator_init+0x34>
    1042:	201a      	movs	r0, #26
    1044:	e7b6      	b.n	fb4 <eeprom_emulator_init+0x34>
    1046:	46c0      	nop			; (mov r8, r8)
    1048:	41004000 	.word	0x41004000
    104c:	000001c9 	.word	0x000001c9
    1050:	00000461 	.word	0x00000461
    1054:	20000a4c 	.word	0x20000a4c
    1058:	00000dcd 	.word	0x00000dcd
    105c:	000087f0 	.word	0x000087f0
    1060:	00000f19 	.word	0x00000f19

00001064 <eeprom_emulator_erase_memory>:
 *
 * Erases and re-initializes the emulated EEPROM memory space, destroying any
 * existing data.
 */
void eeprom_emulator_erase_memory(void)
{
    1064:	b570      	push	{r4, r5, r6, lr}
    1066:	b094      	sub	sp, #80	; 0x50
	_eeprom_instance.spare_row = 0;
    1068:	4c2f      	ldr	r4, [pc, #188]	; (1128 <eeprom_emulator_erase_memory+0xc4>)
    106a:	2200      	movs	r2, #0
    106c:	2387      	movs	r3, #135	; 0x87
    106e:	54e2      	strb	r2, [r4, r3]
	_eeprom_emulator_nvm_erase_row(_eeprom_instance.spare_row);
    1070:	2000      	movs	r0, #0
    1072:	4b2e      	ldr	r3, [pc, #184]	; (112c <eeprom_emulator_erase_memory+0xc8>)
    1074:	4798      	blx	r3
			physical_page < _eeprom_instance.physical_pages; physical_page++) {
    1076:	8925      	ldrh	r5, [r4, #8]
	for (uint16_t physical_page = NVMCTRL_ROW_PAGES;
    1078:	2d04      	cmp	r5, #4
    107a:	d925      	bls.n	10c8 <eeprom_emulator_erase_memory+0x64>
    107c:	2600      	movs	r6, #0
    107e:	2404      	movs	r4, #4
    1080:	e019      	b.n	10b6 <eeprom_emulator_erase_memory+0x52>
			_eeprom_emulator_nvm_erase_row(physical_page / NVMCTRL_ROW_PAGES);
    1082:	08a0      	lsrs	r0, r4, #2
    1084:	b2c0      	uxtb	r0, r0
    1086:	4b29      	ldr	r3, [pc, #164]	; (112c <eeprom_emulator_erase_memory+0xc8>)
    1088:	4798      	blx	r3
			memset(&data, 0xFF, sizeof(data));
    108a:	ad04      	add	r5, sp, #16
    108c:	2240      	movs	r2, #64	; 0x40
    108e:	21ff      	movs	r1, #255	; 0xff
    1090:	0028      	movs	r0, r5
    1092:	4b27      	ldr	r3, [pc, #156]	; (1130 <eeprom_emulator_erase_memory+0xcc>)
    1094:	4798      	blx	r3
			data.header.logical_page = logical_page;
    1096:	702e      	strb	r6, [r5, #0]
			_eeprom_emulator_nvm_fill_cache(physical_page, &data);
    1098:	0029      	movs	r1, r5
    109a:	0020      	movs	r0, r4
    109c:	4b25      	ldr	r3, [pc, #148]	; (1134 <eeprom_emulator_erase_memory+0xd0>)
    109e:	4798      	blx	r3
			_eeprom_emulator_nvm_commit_cache(physical_page);
    10a0:	0020      	movs	r0, r4
    10a2:	4b25      	ldr	r3, [pc, #148]	; (1138 <eeprom_emulator_erase_memory+0xd4>)
    10a4:	4798      	blx	r3
			logical_page++;
    10a6:	3601      	adds	r6, #1
    10a8:	b2b6      	uxth	r6, r6
			physical_page < _eeprom_instance.physical_pages; physical_page++) {
    10aa:	3401      	adds	r4, #1
    10ac:	b2a4      	uxth	r4, r4
    10ae:	4b1e      	ldr	r3, [pc, #120]	; (1128 <eeprom_emulator_erase_memory+0xc4>)
    10b0:	891d      	ldrh	r5, [r3, #8]
	for (uint16_t physical_page = NVMCTRL_ROW_PAGES;
    10b2:	42a5      	cmp	r5, r4
    10b4:	d908      	bls.n	10c8 <eeprom_emulator_erase_memory+0x64>
		if (physical_page == EEPROM_MASTER_PAGE_NUMBER) {
    10b6:	3d01      	subs	r5, #1
    10b8:	42ac      	cmp	r4, r5
    10ba:	d0f6      	beq.n	10aa <eeprom_emulator_erase_memory+0x46>
		if ((physical_page % NVMCTRL_ROW_PAGES) == 0) {
    10bc:	2303      	movs	r3, #3
    10be:	4023      	ands	r3, r4
    10c0:	d0df      	beq.n	1082 <eeprom_emulator_erase_memory+0x1e>
		if ((physical_page % NVMCTRL_ROW_PAGES) < 2) {
    10c2:	2b01      	cmp	r3, #1
    10c4:	d8f1      	bhi.n	10aa <eeprom_emulator_erase_memory+0x46>
    10c6:	e7e0      	b.n	108a <eeprom_emulator_erase_memory+0x26>
	const uint32_t magic_key[] = EEPROM_MAGIC_KEY;
    10c8:	ae01      	add	r6, sp, #4
    10ca:	4b1c      	ldr	r3, [pc, #112]	; (113c <eeprom_emulator_erase_memory+0xd8>)
    10cc:	0032      	movs	r2, r6
    10ce:	cb13      	ldmia	r3!, {r0, r1, r4}
    10d0:	c213      	stmia	r2!, {r0, r1, r4}
	memset(&master_page, 0xFF, sizeof(master_page));
    10d2:	ac04      	add	r4, sp, #16
    10d4:	2240      	movs	r2, #64	; 0x40
    10d6:	21ff      	movs	r1, #255	; 0xff
    10d8:	0020      	movs	r0, r4
    10da:	4b15      	ldr	r3, [pc, #84]	; (1130 <eeprom_emulator_erase_memory+0xcc>)
    10dc:	4798      	blx	r3
		master_page.magic_key[c] = magic_key[c];
    10de:	9b01      	ldr	r3, [sp, #4]
    10e0:	9304      	str	r3, [sp, #16]
    10e2:	6873      	ldr	r3, [r6, #4]
    10e4:	6063      	str	r3, [r4, #4]
    10e6:	68b3      	ldr	r3, [r6, #8]
    10e8:	60a3      	str	r3, [r4, #8]
	master_page.emulator_id   = EEPROM_EMULATOR_ID;
    10ea:	2301      	movs	r3, #1
    10ec:	73e3      	strb	r3, [r4, #15]
	master_page.major_version = EEPROM_MAJOR_VERSION;
    10ee:	7323      	strb	r3, [r4, #12]
	master_page.minor_version = EEPROM_MINOR_VERSION;
    10f0:	2300      	movs	r3, #0
    10f2:	7363      	strb	r3, [r4, #13]
	master_page.revision      = EEPROM_REVISION;
    10f4:	73a3      	strb	r3, [r4, #14]
			EEPROM_MASTER_PAGE_NUMBER / NVMCTRL_ROW_PAGES);
    10f6:	3d01      	subs	r5, #1
    10f8:	17eb      	asrs	r3, r5, #31
    10fa:	2003      	movs	r0, #3
    10fc:	4018      	ands	r0, r3
    10fe:	1945      	adds	r5, r0, r5
    1100:	10ad      	asrs	r5, r5, #2
	_eeprom_emulator_nvm_erase_row(
    1102:	b2e8      	uxtb	r0, r5
    1104:	4b09      	ldr	r3, [pc, #36]	; (112c <eeprom_emulator_erase_memory+0xc8>)
    1106:	4798      	blx	r3
	_eeprom_emulator_nvm_fill_cache(EEPROM_MASTER_PAGE_NUMBER, &master_page);
    1108:	4d07      	ldr	r5, [pc, #28]	; (1128 <eeprom_emulator_erase_memory+0xc4>)
    110a:	8928      	ldrh	r0, [r5, #8]
    110c:	3801      	subs	r0, #1
    110e:	b280      	uxth	r0, r0
    1110:	0021      	movs	r1, r4
    1112:	4b08      	ldr	r3, [pc, #32]	; (1134 <eeprom_emulator_erase_memory+0xd0>)
    1114:	4798      	blx	r3
	_eeprom_emulator_nvm_commit_cache(EEPROM_MASTER_PAGE_NUMBER);
    1116:	8928      	ldrh	r0, [r5, #8]
    1118:	3801      	subs	r0, #1
    111a:	b280      	uxth	r0, r0
    111c:	4b06      	ldr	r3, [pc, #24]	; (1138 <eeprom_emulator_erase_memory+0xd4>)
    111e:	4798      	blx	r3

	/* Write EEPROM emulation master block */
	_eeprom_emulator_create_master_page();

	/* Map the newly created EEPROM memory block */
	_eeprom_emulator_update_page_mapping();
    1120:	4b07      	ldr	r3, [pc, #28]	; (1140 <eeprom_emulator_erase_memory+0xdc>)
    1122:	4798      	blx	r3
}
    1124:	b014      	add	sp, #80	; 0x50
    1126:	bd70      	pop	{r4, r5, r6, pc}
    1128:	20000a4c 	.word	0x20000a4c
    112c:	00000db1 	.word	0x00000db1
    1130:	00004135 	.word	0x00004135
    1134:	00000f3d 	.word	0x00000f3d
    1138:	00000f61 	.word	0x00000f61
    113c:	000087f0 	.word	0x000087f0
    1140:	00000dcd 	.word	0x00000dcd

00001144 <eeprom_emulator_read_page>:
 *                                      EEPROM memory space was supplied
 */
enum status_code eeprom_emulator_read_page(
		const uint8_t logical_page,
		uint8_t *const data)
{
    1144:	b510      	push	{r4, lr}
    1146:	b090      	sub	sp, #64	; 0x40
    1148:	000c      	movs	r4, r1
	/* Ensure the emulated EEPROM has been initialized first */
	if (_eeprom_instance.initialized == false) {
    114a:	4b15      	ldr	r3, [pc, #84]	; (11a0 <eeprom_emulator_read_page+0x5c>)
    114c:	781a      	ldrb	r2, [r3, #0]
		return STATUS_ERR_NOT_INITIALIZED;
    114e:	231f      	movs	r3, #31
	if (_eeprom_instance.initialized == false) {
    1150:	2a00      	cmp	r2, #0
    1152:	d102      	bne.n	115a <eeprom_emulator_read_page+0x16>
		/* Copy the data portion of the read page to the user's buffer */
		memcpy(data, temp.data, EEPROM_PAGE_SIZE);
	}

	return STATUS_OK;
}
    1154:	0018      	movs	r0, r3
    1156:	b010      	add	sp, #64	; 0x40
    1158:	bd10      	pop	{r4, pc}
	if (logical_page >= _eeprom_instance.logical_pages) {
    115a:	4b11      	ldr	r3, [pc, #68]	; (11a0 <eeprom_emulator_read_page+0x5c>)
    115c:	7a9a      	ldrb	r2, [r3, #10]
		return STATUS_ERR_BAD_ADDRESS;
    115e:	2318      	movs	r3, #24
	if (logical_page >= _eeprom_instance.logical_pages) {
    1160:	4282      	cmp	r2, r0
    1162:	d9f7      	bls.n	1154 <eeprom_emulator_read_page+0x10>
	if ((_eeprom_instance.cache_active == true) &&
    1164:	33b0      	adds	r3, #176	; 0xb0
    1166:	4a0e      	ldr	r2, [pc, #56]	; (11a0 <eeprom_emulator_read_page+0x5c>)
    1168:	5cd3      	ldrb	r3, [r2, r3]
    116a:	2b00      	cmp	r3, #0
    116c:	d003      	beq.n	1176 <eeprom_emulator_read_page+0x32>
		 (_eeprom_instance.cache.header.logical_page == logical_page)) {
    116e:	2388      	movs	r3, #136	; 0x88
	if ((_eeprom_instance.cache_active == true) &&
    1170:	5cd3      	ldrb	r3, [r2, r3]
    1172:	4283      	cmp	r3, r0
    1174:	d00c      	beq.n	1190 <eeprom_emulator_read_page+0x4c>
				_eeprom_instance.page_map[logical_page], &temp);
    1176:	4b0a      	ldr	r3, [pc, #40]	; (11a0 <eeprom_emulator_read_page+0x5c>)
    1178:	1818      	adds	r0, r3, r0
		_eeprom_emulator_nvm_read_page(
    117a:	7ac0      	ldrb	r0, [r0, #11]
    117c:	4669      	mov	r1, sp
    117e:	4b09      	ldr	r3, [pc, #36]	; (11a4 <eeprom_emulator_read_page+0x60>)
    1180:	4798      	blx	r3
		memcpy(data, temp.data, EEPROM_PAGE_SIZE);
    1182:	223c      	movs	r2, #60	; 0x3c
    1184:	a901      	add	r1, sp, #4
    1186:	0020      	movs	r0, r4
    1188:	4b07      	ldr	r3, [pc, #28]	; (11a8 <eeprom_emulator_read_page+0x64>)
    118a:	4798      	blx	r3
	return STATUS_OK;
    118c:	2300      	movs	r3, #0
    118e:	e7e1      	b.n	1154 <eeprom_emulator_read_page+0x10>
		memcpy(data, _eeprom_instance.cache.data, EEPROM_PAGE_SIZE);
    1190:	223c      	movs	r2, #60	; 0x3c
    1192:	4903      	ldr	r1, [pc, #12]	; (11a0 <eeprom_emulator_read_page+0x5c>)
    1194:	318c      	adds	r1, #140	; 0x8c
    1196:	0020      	movs	r0, r4
    1198:	4b03      	ldr	r3, [pc, #12]	; (11a8 <eeprom_emulator_read_page+0x64>)
    119a:	4798      	blx	r3
	return STATUS_OK;
    119c:	2300      	movs	r3, #0
		memcpy(data, _eeprom_instance.cache.data, EEPROM_PAGE_SIZE);
    119e:	e7d9      	b.n	1154 <eeprom_emulator_read_page+0x10>
    11a0:	20000a4c 	.word	0x20000a4c
    11a4:	00000f19 	.word	0x00000f19
    11a8:	000040b1 	.word	0x000040b1

000011ac <eeprom_emulator_commit_page_buffer>:
 *       data loss.
 *
 * \return Status code indicating the status of the operation.
 */
enum status_code eeprom_emulator_commit_page_buffer(void)
{
    11ac:	b510      	push	{r4, lr}
	enum status_code error_code = STATUS_OK;

	/* If cache is inactive, no need to commit anything to physical memory */
	if (_eeprom_instance.cache_active == false) {
    11ae:	23c8      	movs	r3, #200	; 0xc8
    11b0:	4a08      	ldr	r2, [pc, #32]	; (11d4 <eeprom_emulator_commit_page_buffer+0x28>)
    11b2:	5cd3      	ldrb	r3, [r2, r3]
    11b4:	2b00      	cmp	r3, #0
    11b6:	d101      	bne.n	11bc <eeprom_emulator_commit_page_buffer+0x10>

	barrier(); // Enforce ordering to prevent incorrect cache state
	_eeprom_instance.cache_active = false;

	return error_code;
}
    11b8:	2000      	movs	r0, #0
    11ba:	bd10      	pop	{r4, pc}
			_eeprom_instance.page_map[cached_logical_page]);
    11bc:	0014      	movs	r4, r2
	uint8_t cached_logical_page = _eeprom_instance.cache.header.logical_page;
    11be:	2388      	movs	r3, #136	; 0x88
			_eeprom_instance.page_map[cached_logical_page]);
    11c0:	5cd3      	ldrb	r3, [r2, r3]
    11c2:	18d3      	adds	r3, r2, r3
	_eeprom_emulator_nvm_commit_cache(
    11c4:	7ad8      	ldrb	r0, [r3, #11]
    11c6:	4b04      	ldr	r3, [pc, #16]	; (11d8 <eeprom_emulator_commit_page_buffer+0x2c>)
    11c8:	4798      	blx	r3
	_eeprom_instance.cache_active = false;
    11ca:	2200      	movs	r2, #0
    11cc:	23c8      	movs	r3, #200	; 0xc8
    11ce:	54e2      	strb	r2, [r4, r3]
	return error_code;
    11d0:	e7f2      	b.n	11b8 <eeprom_emulator_commit_page_buffer+0xc>
    11d2:	46c0      	nop			; (mov r8, r8)
    11d4:	20000a4c 	.word	0x20000a4c
    11d8:	00000f61 	.word	0x00000f61

000011dc <eeprom_emulator_write_page>:
{
    11dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    11de:	46de      	mov	lr, fp
    11e0:	4657      	mov	r7, sl
    11e2:	464e      	mov	r6, r9
    11e4:	4645      	mov	r5, r8
    11e6:	b5e0      	push	{r5, r6, r7, lr}
    11e8:	b087      	sub	sp, #28
    11ea:	0004      	movs	r4, r0
    11ec:	9100      	str	r1, [sp, #0]
	if (_eeprom_instance.initialized == false) {
    11ee:	4b5a      	ldr	r3, [pc, #360]	; (1358 <eeprom_emulator_write_page+0x17c>)
    11f0:	781b      	ldrb	r3, [r3, #0]
		return STATUS_ERR_NOT_INITIALIZED;
    11f2:	201f      	movs	r0, #31
	if (_eeprom_instance.initialized == false) {
    11f4:	2b00      	cmp	r3, #0
    11f6:	d106      	bne.n	1206 <eeprom_emulator_write_page+0x2a>
}
    11f8:	b007      	add	sp, #28
    11fa:	bc3c      	pop	{r2, r3, r4, r5}
    11fc:	4690      	mov	r8, r2
    11fe:	4699      	mov	r9, r3
    1200:	46a2      	mov	sl, r4
    1202:	46ab      	mov	fp, r5
    1204:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (logical_page >= _eeprom_instance.logical_pages) {
    1206:	4b54      	ldr	r3, [pc, #336]	; (1358 <eeprom_emulator_write_page+0x17c>)
    1208:	7a9b      	ldrb	r3, [r3, #10]
		return STATUS_ERR_BAD_ADDRESS;
    120a:	3807      	subs	r0, #7
	if (logical_page >= _eeprom_instance.logical_pages) {
    120c:	42a3      	cmp	r3, r4
    120e:	d9f3      	bls.n	11f8 <eeprom_emulator_write_page+0x1c>
	if ((_eeprom_instance.cache_active == true) &&
    1210:	23c8      	movs	r3, #200	; 0xc8
    1212:	4a51      	ldr	r2, [pc, #324]	; (1358 <eeprom_emulator_write_page+0x17c>)
    1214:	5cd3      	ldrb	r3, [r2, r3]
    1216:	2b00      	cmp	r3, #0
    1218:	d005      	beq.n	1226 <eeprom_emulator_write_page+0x4a>
			(_eeprom_instance.cache.header.logical_page != logical_page)) {
    121a:	2388      	movs	r3, #136	; 0x88
	if ((_eeprom_instance.cache_active == true) &&
    121c:	5cd3      	ldrb	r3, [r2, r3]
    121e:	42a3      	cmp	r3, r4
    1220:	d001      	beq.n	1226 <eeprom_emulator_write_page+0x4a>
		eeprom_emulator_commit_page_buffer();
    1222:	4b4e      	ldr	r3, [pc, #312]	; (135c <eeprom_emulator_write_page+0x180>)
    1224:	4798      	blx	r3
	bool page_spare  = _eeprom_emulator_is_page_free_on_row(
    1226:	4b4c      	ldr	r3, [pc, #304]	; (1358 <eeprom_emulator_write_page+0x17c>)
    1228:	191b      	adds	r3, r3, r4
    122a:	7ade      	ldrb	r6, [r3, #11]
		uint8_t page = (row * NVMCTRL_ROW_PAGES) + c;
    122c:	2303      	movs	r3, #3
    122e:	0031      	movs	r1, r6
    1230:	4399      	bics	r1, r3
		if (_eeprom_instance.flash[page].header.logical_page ==
    1232:	4b49      	ldr	r3, [pc, #292]	; (1358 <eeprom_emulator_write_page+0x17c>)
    1234:	6858      	ldr	r0, [r3, #4]
    1236:	01b3      	lsls	r3, r6, #6
    1238:	5c1b      	ldrb	r3, [r3, r0]
    123a:	2bff      	cmp	r3, #255	; 0xff
    123c:	d047      	beq.n	12ce <eeprom_emulator_write_page+0xf2>
    123e:	1c75      	adds	r5, r6, #1
    1240:	b2ed      	uxtb	r5, r5
    1242:	3104      	adds	r1, #4
    1244:	b2c9      	uxtb	r1, r1
	for (uint8_t c = page_in_row; c < NVMCTRL_ROW_PAGES; c++) {
    1246:	42a9      	cmp	r1, r5
    1248:	d057      	beq.n	12fa <eeprom_emulator_write_page+0x11e>
    124a:	1c6b      	adds	r3, r5, #1
    124c:	b2db      	uxtb	r3, r3
		if (_eeprom_instance.flash[page].header.logical_page ==
    124e:	01aa      	lsls	r2, r5, #6
    1250:	5c12      	ldrb	r2, [r2, r0]
    1252:	2aff      	cmp	r2, #255	; 0xff
    1254:	d03c      	beq.n	12d0 <eeprom_emulator_write_page+0xf4>
    1256:	001d      	movs	r5, r3
    1258:	e7f5      	b.n	1246 <eeprom_emulator_write_page+0x6a>
				page_trans[c].physical_page =
    125a:	aa05      	add	r2, sp, #20
    125c:	18d2      	adds	r2, r2, r3
    125e:	7056      	strb	r6, [r2, #1]
    1260:	e069      	b.n	1336 <eeprom_emulator_write_page+0x15a>
    1262:	af05      	add	r7, sp, #20
    1264:	18ff      	adds	r7, r7, r3
    1266:	707d      	strb	r5, [r7, #1]
    1268:	e063      	b.n	1332 <eeprom_emulator_write_page+0x156>
			_eeprom_emulator_nvm_read_page(
    126a:	7870      	ldrb	r0, [r6, #1]
    126c:	9902      	ldr	r1, [sp, #8]
    126e:	4b3c      	ldr	r3, [pc, #240]	; (1360 <eeprom_emulator_write_page+0x184>)
    1270:	4798      	blx	r3
		_eeprom_emulator_nvm_fill_cache(new_page, &_eeprom_instance.cache);
    1272:	4c39      	ldr	r4, [pc, #228]	; (1358 <eeprom_emulator_write_page+0x17c>)
    1274:	0021      	movs	r1, r4
    1276:	3188      	adds	r1, #136	; 0x88
    1278:	b2a8      	uxth	r0, r5
    127a:	4b3a      	ldr	r3, [pc, #232]	; (1364 <eeprom_emulator_write_page+0x188>)
    127c:	4798      	blx	r3
		_eeprom_instance.page_map[page_trans[c].logical_page] = new_page;
    127e:	464b      	mov	r3, r9
    1280:	781b      	ldrb	r3, [r3, #0]
    1282:	18e3      	adds	r3, r4, r3
    1284:	72dd      	strb	r5, [r3, #11]
		_eeprom_instance.cache_active = true;
    1286:	2201      	movs	r2, #1
    1288:	23c8      	movs	r3, #200	; 0xc8
    128a:	54e2      	strb	r2, [r4, r3]
    128c:	3701      	adds	r7, #1
    128e:	3602      	adds	r6, #2
	for (uint8_t c = 0; c < 2; c++) {
    1290:	2f02      	cmp	r7, #2
    1292:	d013      	beq.n	12bc <eeprom_emulator_write_page+0xe0>
				((_eeprom_instance.spare_row * NVMCTRL_ROW_PAGES) + c);
    1294:	2387      	movs	r3, #135	; 0x87
    1296:	465a      	mov	r2, fp
    1298:	5cd5      	ldrb	r5, [r2, r3]
    129a:	00ad      	lsls	r5, r5, #2
    129c:	19ed      	adds	r5, r5, r7
		eeprom_emulator_commit_page_buffer();
    129e:	47d0      	blx	sl
    12a0:	46b1      	mov	r9, r6
		if (logical_page == page_trans[c].logical_page) {
    12a2:	7833      	ldrb	r3, [r6, #0]
    12a4:	9901      	ldr	r1, [sp, #4]
    12a6:	428b      	cmp	r3, r1
    12a8:	d1df      	bne.n	126a <eeprom_emulator_write_page+0x8e>
			_eeprom_instance.cache.header.logical_page = logical_page;
    12aa:	2388      	movs	r3, #136	; 0x88
    12ac:	4a2a      	ldr	r2, [pc, #168]	; (1358 <eeprom_emulator_write_page+0x17c>)
    12ae:	54d1      	strb	r1, [r2, r3]
			memcpy(_eeprom_instance.cache.data, data, EEPROM_PAGE_SIZE);
    12b0:	223c      	movs	r2, #60	; 0x3c
    12b2:	9900      	ldr	r1, [sp, #0]
    12b4:	9803      	ldr	r0, [sp, #12]
    12b6:	4b2c      	ldr	r3, [pc, #176]	; (1368 <eeprom_emulator_write_page+0x18c>)
    12b8:	4798      	blx	r3
    12ba:	e7da      	b.n	1272 <eeprom_emulator_write_page+0x96>
	_eeprom_emulator_nvm_erase_row(row_number);
    12bc:	4644      	mov	r4, r8
    12be:	4640      	mov	r0, r8
    12c0:	4b2a      	ldr	r3, [pc, #168]	; (136c <eeprom_emulator_write_page+0x190>)
    12c2:	4798      	blx	r3
	_eeprom_instance.spare_row = row_number;
    12c4:	2387      	movs	r3, #135	; 0x87
    12c6:	4a24      	ldr	r2, [pc, #144]	; (1358 <eeprom_emulator_write_page+0x17c>)
    12c8:	54d4      	strb	r4, [r2, r3]
		return STATUS_OK;
    12ca:	2000      	movs	r0, #0
    12cc:	e794      	b.n	11f8 <eeprom_emulator_write_page+0x1c>
		uint8_t page = (row * NVMCTRL_ROW_PAGES) + c;
    12ce:	0035      	movs	r5, r6
	_eeprom_instance.cache.header.logical_page = logical_page;
    12d0:	4e21      	ldr	r6, [pc, #132]	; (1358 <eeprom_emulator_write_page+0x17c>)
    12d2:	2388      	movs	r3, #136	; 0x88
    12d4:	54f4      	strb	r4, [r6, r3]
	memcpy(&_eeprom_instance.cache.data,
    12d6:	0030      	movs	r0, r6
    12d8:	308c      	adds	r0, #140	; 0x8c
    12da:	223c      	movs	r2, #60	; 0x3c
    12dc:	9900      	ldr	r1, [sp, #0]
    12de:	4b22      	ldr	r3, [pc, #136]	; (1368 <eeprom_emulator_write_page+0x18c>)
    12e0:	4798      	blx	r3
	_eeprom_emulator_nvm_fill_cache(new_page, &_eeprom_instance.cache);
    12e2:	0031      	movs	r1, r6
    12e4:	3188      	adds	r1, #136	; 0x88
    12e6:	b2a8      	uxth	r0, r5
    12e8:	4b1e      	ldr	r3, [pc, #120]	; (1364 <eeprom_emulator_write_page+0x188>)
    12ea:	4798      	blx	r3
	_eeprom_instance.page_map[logical_page] = new_page;
    12ec:	1934      	adds	r4, r6, r4
    12ee:	72e5      	strb	r5, [r4, #11]
	_eeprom_instance.cache_active           = true;
    12f0:	2201      	movs	r2, #1
    12f2:	23c8      	movs	r3, #200	; 0xc8
    12f4:	54f2      	strb	r2, [r6, r3]
	return STATUS_OK;
    12f6:	2000      	movs	r0, #0
    12f8:	e77e      	b.n	11f8 <eeprom_emulator_write_page+0x1c>
		_eeprom_emulator_move_data_to_spare(
    12fa:	08b3      	lsrs	r3, r6, #2
    12fc:	4698      	mov	r8, r3
			(struct _eeprom_page *)&_eeprom_instance.flash[row_number * NVMCTRL_ROW_PAGES];
    12fe:	021b      	lsls	r3, r3, #8
	const struct _eeprom_page *row_data =
    1300:	4a15      	ldr	r2, [pc, #84]	; (1358 <eeprom_emulator_write_page+0x17c>)
    1302:	6852      	ldr	r2, [r2, #4]
    1304:	18d3      	adds	r3, r2, r3
	page_trans[0].logical_page  = row_data[0].header.logical_page;
    1306:	aa05      	add	r2, sp, #20
    1308:	7819      	ldrb	r1, [r3, #0]
    130a:	7011      	strb	r1, [r2, #0]
	page_trans[0].physical_page = (row_number * NVMCTRL_ROW_PAGES);
    130c:	2103      	movs	r1, #3
    130e:	438e      	bics	r6, r1
    1310:	7056      	strb	r6, [r2, #1]
	page_trans[1].logical_page  = row_data[1].header.logical_page;
    1312:	313d      	adds	r1, #61	; 0x3d
    1314:	5c59      	ldrb	r1, [r3, r1]
    1316:	7091      	strb	r1, [r2, #2]
	page_trans[1].physical_page = (row_number * NVMCTRL_ROW_PAGES) + 1;
    1318:	1c71      	adds	r1, r6, #1
    131a:	70d1      	strb	r1, [r2, #3]
			if (page_trans[c].logical_page == row_data[c2].header.logical_page) {
    131c:	2280      	movs	r2, #128	; 0x80
    131e:	5c98      	ldrb	r0, [r3, r2]
    1320:	3240      	adds	r2, #64	; 0x40
    1322:	5c99      	ldrb	r1, [r3, r2]
    1324:	2300      	movs	r3, #0
						(row_number * NVMCTRL_ROW_PAGES) + c2;
    1326:	1cb5      	adds	r5, r6, #2
    1328:	3603      	adds	r6, #3
			if (page_trans[c].logical_page == row_data[c2].header.logical_page) {
    132a:	aa05      	add	r2, sp, #20
    132c:	5cd2      	ldrb	r2, [r2, r3]
    132e:	4290      	cmp	r0, r2
    1330:	d097      	beq.n	1262 <eeprom_emulator_write_page+0x86>
    1332:	428a      	cmp	r2, r1
    1334:	d091      	beq.n	125a <eeprom_emulator_write_page+0x7e>
    1336:	3302      	adds	r3, #2
	for (uint8_t c = 0; c < 2; c++) {
    1338:	2b04      	cmp	r3, #4
    133a:	d1f6      	bne.n	132a <eeprom_emulator_write_page+0x14e>
    133c:	ae05      	add	r6, sp, #20
    133e:	2700      	movs	r7, #0
				((_eeprom_instance.spare_row * NVMCTRL_ROW_PAGES) + c);
    1340:	4b05      	ldr	r3, [pc, #20]	; (1358 <eeprom_emulator_write_page+0x17c>)
    1342:	469b      	mov	fp, r3
		eeprom_emulator_commit_page_buffer();
    1344:	4b05      	ldr	r3, [pc, #20]	; (135c <eeprom_emulator_write_page+0x180>)
    1346:	469a      	mov	sl, r3
			_eeprom_emulator_nvm_read_page(
    1348:	465b      	mov	r3, fp
    134a:	3388      	adds	r3, #136	; 0x88
    134c:	9302      	str	r3, [sp, #8]
			memcpy(_eeprom_instance.cache.data, data, EEPROM_PAGE_SIZE);
    134e:	3304      	adds	r3, #4
    1350:	9303      	str	r3, [sp, #12]
    1352:	9401      	str	r4, [sp, #4]
    1354:	e79e      	b.n	1294 <eeprom_emulator_write_page+0xb8>
    1356:	46c0      	nop			; (mov r8, r8)
    1358:	20000a4c 	.word	0x20000a4c
    135c:	000011ad 	.word	0x000011ad
    1360:	00000f19 	.word	0x00000f19
    1364:	00000f3d 	.word	0x00000f3d
    1368:	000040b1 	.word	0x000040b1
    136c:	00000db1 	.word	0x00000db1

00001370 <pprint>:

	DEBUG("USART INITIALIZED DURING BOOTLOAD\n");
}

void pprint(struct usart_module* mod, const char* str, ...)
{
    1370:	b40e      	push	{r1, r2, r3}
    1372:	b570      	push	{r4, r5, r6, lr}
    1374:	b083      	sub	sp, #12
    1376:	ad07      	add	r5, sp, #28
    1378:	cd40      	ldmia	r5!, {r6}
	memset(pprint_buffer, '\0', MAX_PPRINT_BUFFER_SIZE);
    137a:	4c0d      	ldr	r4, [pc, #52]	; (13b0 <pprint+0x40>)
    137c:	2280      	movs	r2, #128	; 0x80
    137e:	0052      	lsls	r2, r2, #1
    1380:	2100      	movs	r1, #0
    1382:	0020      	movs	r0, r4
    1384:	4b0b      	ldr	r3, [pc, #44]	; (13b4 <pprint+0x44>)
    1386:	4798      	blx	r3
	va_list args;
	va_start(args, str);
    1388:	9501      	str	r5, [sp, #4]
	vsprintf((char*)pprint_buffer,str, args);
    138a:	002a      	movs	r2, r5
    138c:	0031      	movs	r1, r6
    138e:	0020      	movs	r0, r4
    1390:	4b09      	ldr	r3, [pc, #36]	; (13b8 <pprint+0x48>)
    1392:	4798      	blx	r3
	va_end(args);
	usart_write_buffer_wait(&debug_mod, (uint8_t*)pprint_buffer, strlen((const char*)pprint_buffer));
    1394:	0020      	movs	r0, r4
    1396:	4b09      	ldr	r3, [pc, #36]	; (13bc <pprint+0x4c>)
    1398:	4798      	blx	r3
    139a:	b282      	uxth	r2, r0
    139c:	0021      	movs	r1, r4
    139e:	4808      	ldr	r0, [pc, #32]	; (13c0 <pprint+0x50>)
    13a0:	4b08      	ldr	r3, [pc, #32]	; (13c4 <pprint+0x54>)
    13a2:	4798      	blx	r3
    13a4:	b003      	add	sp, #12
    13a6:	bc70      	pop	{r4, r5, r6}
    13a8:	bc08      	pop	{r3}
    13aa:	b003      	add	sp, #12
    13ac:	4718      	bx	r3
    13ae:	46c0      	nop			; (mov r8, r8)
    13b0:	20000e00 	.word	0x20000e00
    13b4:	00004135 	.word	0x00004135
    13b8:	0000425d 	.word	0x0000425d
    13bc:	000041c9 	.word	0x000041c9
    13c0:	20000cdc 	.word	0x20000cdc
    13c4:	00001bdd 	.word	0x00001bdd

000013c8 <pusart_init>:
{
    13c8:	b510      	push	{r4, lr}
    13ca:	b090      	sub	sp, #64	; 0x40
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    13cc:	2380      	movs	r3, #128	; 0x80
    13ce:	05db      	lsls	r3, r3, #23
    13d0:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    13d2:	2300      	movs	r3, #0
    13d4:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    13d6:	22ff      	movs	r2, #255	; 0xff
    13d8:	4669      	mov	r1, sp
    13da:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
    13dc:	2200      	movs	r2, #0
    13de:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    13e0:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
	config->receiver_enable  = true;
    13e2:	2101      	movs	r1, #1
    13e4:	2024      	movs	r0, #36	; 0x24
    13e6:	466c      	mov	r4, sp
    13e8:	5421      	strb	r1, [r4, r0]
	config->transmitter_enable = true;
    13ea:	3001      	adds	r0, #1
    13ec:	5421      	strb	r1, [r4, r0]
	config->clock_polarity_inverted = false;
    13ee:	3125      	adds	r1, #37	; 0x25
    13f0:	5463      	strb	r3, [r4, r1]
	config->use_external_clock = false;
    13f2:	3101      	adds	r1, #1
    13f4:	5463      	strb	r3, [r4, r1]
	config->ext_clock_freq   = 0;
    13f6:	930a      	str	r3, [sp, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
    13f8:	3105      	adds	r1, #5
    13fa:	5463      	strb	r3, [r4, r1]
	config->generator_source = GCLK_GENERATOR_0;
    13fc:	3101      	adds	r1, #1
    13fe:	5463      	strb	r3, [r4, r1]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    1400:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    1402:	8223      	strh	r3, [r4, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    1404:	76e3      	strb	r3, [r4, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
    1406:	7622      	strb	r2, [r4, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
    1408:	7722      	strb	r2, [r4, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
    140a:	7662      	strb	r2, [r4, #25]
	config->receive_pulse_length                    = 19;
    140c:	2313      	movs	r3, #19
    140e:	76a3      	strb	r3, [r4, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
    1410:	7762      	strb	r2, [r4, #29]
	debug_conf.baudrate = USART_DEBUG_BAUD;
    1412:	23e1      	movs	r3, #225	; 0xe1
    1414:	025b      	lsls	r3, r3, #9
    1416:	9308      	str	r3, [sp, #32]
	debug_conf.pinmux_pad0 = USART_DEBUG_PIN0;
    1418:	4b0f      	ldr	r3, [pc, #60]	; (1458 <pusart_init+0x90>)
    141a:	930c      	str	r3, [sp, #48]	; 0x30
	debug_conf.pinmux_pad1 = USART_DEBUG_PIN1;
    141c:	4b0f      	ldr	r3, [pc, #60]	; (145c <pusart_init+0x94>)
    141e:	930d      	str	r3, [sp, #52]	; 0x34
	debug_conf.pinmux_pad2 = USART_DEBUG_PIN2;
    1420:	2301      	movs	r3, #1
    1422:	425b      	negs	r3, r3
    1424:	930e      	str	r3, [sp, #56]	; 0x38
	debug_conf.pinmux_pad3 = USART_DEBUG_PIN3;
    1426:	930f      	str	r3, [sp, #60]	; 0x3c
	debug_conf.mux_setting = USART_DEBUG_MUX;
    1428:	2380      	movs	r3, #128	; 0x80
    142a:	035b      	lsls	r3, r3, #13
    142c:	9303      	str	r3, [sp, #12]
	usart_init(&debug_mod, USART_DEBUG_SERCOM, &debug_conf);
    142e:	4c0c      	ldr	r4, [pc, #48]	; (1460 <pusart_init+0x98>)
    1430:	466a      	mov	r2, sp
    1432:	490c      	ldr	r1, [pc, #48]	; (1464 <pusart_init+0x9c>)
    1434:	0020      	movs	r0, r4
    1436:	4b0c      	ldr	r3, [pc, #48]	; (1468 <pusart_init+0xa0>)
    1438:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    143a:	6822      	ldr	r2, [r4, #0]
	return (usart_hw->SYNCBUSY.reg);
    143c:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    143e:	2b00      	cmp	r3, #0
    1440:	d1fc      	bne.n	143c <pusart_init+0x74>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1442:	6813      	ldr	r3, [r2, #0]
    1444:	2102      	movs	r1, #2
    1446:	430b      	orrs	r3, r1
    1448:	6013      	str	r3, [r2, #0]
	DEBUG("USART INITIALIZED DURING BOOTLOAD\n");
    144a:	4908      	ldr	r1, [pc, #32]	; (146c <pusart_init+0xa4>)
    144c:	4804      	ldr	r0, [pc, #16]	; (1460 <pusart_init+0x98>)
    144e:	4b08      	ldr	r3, [pc, #32]	; (1470 <pusart_init+0xa8>)
    1450:	4798      	blx	r3
}
    1452:	b010      	add	sp, #64	; 0x40
    1454:	bd10      	pop	{r4, pc}
    1456:	46c0      	nop			; (mov r8, r8)
    1458:	00160002 	.word	0x00160002
    145c:	00170002 	.word	0x00170002
    1460:	20000cdc 	.word	0x20000cdc
    1464:	42001400 	.word	0x42001400
    1468:	000018b5 	.word	0x000018b5
    146c:	000087fc 	.word	0x000087fc
    1470:	00001371 	.word	0x00001371

00001474 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
    1474:	4b0c      	ldr	r3, [pc, #48]	; (14a8 <cpu_irq_enter_critical+0x34>)
    1476:	681b      	ldr	r3, [r3, #0]
    1478:	2b00      	cmp	r3, #0
    147a:	d106      	bne.n	148a <cpu_irq_enter_critical+0x16>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    147c:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
    1480:	2b00      	cmp	r3, #0
    1482:	d007      	beq.n	1494 <cpu_irq_enter_critical+0x20>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
    1484:	2200      	movs	r2, #0
    1486:	4b09      	ldr	r3, [pc, #36]	; (14ac <cpu_irq_enter_critical+0x38>)
    1488:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
    148a:	4a07      	ldr	r2, [pc, #28]	; (14a8 <cpu_irq_enter_critical+0x34>)
    148c:	6813      	ldr	r3, [r2, #0]
    148e:	3301      	adds	r3, #1
    1490:	6013      	str	r3, [r2, #0]
}
    1492:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
    1494:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
    1496:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
    149a:	2200      	movs	r2, #0
    149c:	4b04      	ldr	r3, [pc, #16]	; (14b0 <cpu_irq_enter_critical+0x3c>)
    149e:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
    14a0:	3201      	adds	r2, #1
    14a2:	4b02      	ldr	r3, [pc, #8]	; (14ac <cpu_irq_enter_critical+0x38>)
    14a4:	701a      	strb	r2, [r3, #0]
    14a6:	e7f0      	b.n	148a <cpu_irq_enter_critical+0x16>
    14a8:	20000b18 	.word	0x20000b18
    14ac:	20000b1c 	.word	0x20000b1c
    14b0:	20000000 	.word	0x20000000

000014b4 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
    14b4:	4b08      	ldr	r3, [pc, #32]	; (14d8 <cpu_irq_leave_critical+0x24>)
    14b6:	681a      	ldr	r2, [r3, #0]
    14b8:	3a01      	subs	r2, #1
    14ba:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
    14bc:	681b      	ldr	r3, [r3, #0]
    14be:	2b00      	cmp	r3, #0
    14c0:	d109      	bne.n	14d6 <cpu_irq_leave_critical+0x22>
    14c2:	4b06      	ldr	r3, [pc, #24]	; (14dc <cpu_irq_leave_critical+0x28>)
    14c4:	781b      	ldrb	r3, [r3, #0]
    14c6:	2b00      	cmp	r3, #0
    14c8:	d005      	beq.n	14d6 <cpu_irq_leave_critical+0x22>
		cpu_irq_enable();
    14ca:	2201      	movs	r2, #1
    14cc:	4b04      	ldr	r3, [pc, #16]	; (14e0 <cpu_irq_leave_critical+0x2c>)
    14ce:	701a      	strb	r2, [r3, #0]
    14d0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    14d4:	b662      	cpsie	i
	}
}
    14d6:	4770      	bx	lr
    14d8:	20000b18 	.word	0x20000b18
    14dc:	20000b1c 	.word	0x20000b1c
    14e0:	20000000 	.word	0x20000000

000014e4 <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
    14e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    14e6:	b083      	sub	sp, #12
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
	config->input_pull = PORT_PIN_PULL_UP;
    14e8:	ac01      	add	r4, sp, #4
    14ea:	2501      	movs	r5, #1
    14ec:	7065      	strb	r5, [r4, #1]
	config->powersave  = false;
    14ee:	2700      	movs	r7, #0
    14f0:	70a7      	strb	r7, [r4, #2]
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);

	/* Configure LEDs as outputs, turn them off */
	pin_conf.direction  = PORT_PIN_DIR_OUTPUT;
    14f2:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(LED_0_PIN, &pin_conf);
    14f4:	0021      	movs	r1, r4
    14f6:	203e      	movs	r0, #62	; 0x3e
    14f8:	4e06      	ldr	r6, [pc, #24]	; (1514 <system_board_init+0x30>)
    14fa:	47b0      	blx	r6
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
    14fc:	2280      	movs	r2, #128	; 0x80
    14fe:	05d2      	lsls	r2, r2, #23
    1500:	4b05      	ldr	r3, [pc, #20]	; (1518 <system_board_init+0x34>)
    1502:	619a      	str	r2, [r3, #24]
	port_pin_set_output_level(LED_0_PIN, LED_0_INACTIVE);

	/* Set buttons as inputs */
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
    1504:	7027      	strb	r7, [r4, #0]
	pin_conf.input_pull = PORT_PIN_PULL_UP;
    1506:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_0_PIN, &pin_conf);
    1508:	0021      	movs	r1, r4
    150a:	200f      	movs	r0, #15
    150c:	47b0      	blx	r6
	port_pin_set_output_level(AT86RFX_RST_PIN, true);
	port_pin_set_output_level(AT86RFX_SLP_PIN, true);
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
	port_pin_set_config(AT86RFX_SPI_MISO, &pin_conf);
#endif	
}
    150e:	b003      	add	sp, #12
    1510:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1512:	46c0      	nop			; (mov r8, r8)
    1514:	0000151d 	.word	0x0000151d
    1518:	41004480 	.word	0x41004480

0000151c <port_pin_set_config>:
 *  \param[in] config    Configuration settings for the pin
 */
void port_pin_set_config(
		const uint8_t gpio_pin,
		const struct port_config *const config)
{
    151c:	b500      	push	{lr}
    151e:	b083      	sub	sp, #12
	config->mux_position = SYSTEM_PINMUX_GPIO;
    1520:	ab01      	add	r3, sp, #4
    1522:	2280      	movs	r2, #128	; 0x80
    1524:	701a      	strb	r2, [r3, #0]

	struct system_pinmux_config pinmux_config;
	system_pinmux_get_config_defaults(&pinmux_config);

	pinmux_config.mux_position = SYSTEM_PINMUX_GPIO;
	pinmux_config.direction    = (enum system_pinmux_pin_dir)config->direction;
    1526:	780a      	ldrb	r2, [r1, #0]
    1528:	705a      	strb	r2, [r3, #1]
	pinmux_config.input_pull   = (enum system_pinmux_pin_pull)config->input_pull;
    152a:	784a      	ldrb	r2, [r1, #1]
    152c:	709a      	strb	r2, [r3, #2]
	pinmux_config.powersave    = config->powersave;
    152e:	788a      	ldrb	r2, [r1, #2]
    1530:	70da      	strb	r2, [r3, #3]

	system_pinmux_pin_set_config(gpio_pin, &pinmux_config);
    1532:	0019      	movs	r1, r3
    1534:	4b01      	ldr	r3, [pc, #4]	; (153c <port_pin_set_config+0x20>)
    1536:	4798      	blx	r3
}
    1538:	b003      	add	sp, #12
    153a:	bd00      	pop	{pc}
    153c:	000022ed 	.word	0x000022ed

00001540 <long_division>:
/**
 * \internal Calculate 64 bit division, ref can be found in
 * http://en.wikipedia.org/wiki/Division_algorithm#Long_division
 */
static uint64_t long_division(uint64_t n, uint64_t d)
{
    1540:	b5f0      	push	{r4, r5, r6, r7, lr}
    1542:	46de      	mov	lr, fp
    1544:	4657      	mov	r7, sl
    1546:	464e      	mov	r6, r9
    1548:	4645      	mov	r5, r8
    154a:	b5e0      	push	{r5, r6, r7, lr}
    154c:	b087      	sub	sp, #28
    154e:	4680      	mov	r8, r0
    1550:	9104      	str	r1, [sp, #16]
    1552:	0016      	movs	r6, r2
    1554:	001f      	movs	r7, r3
	int32_t i;
	uint64_t q = 0, r = 0, bit_shift;
    1556:	2200      	movs	r2, #0
    1558:	2300      	movs	r3, #0
    155a:	2100      	movs	r1, #0
    155c:	468b      	mov	fp, r1
	for (i = 63; i >= 0; i--) {
    155e:	243f      	movs	r4, #63	; 0x3f
		bit_shift = (uint64_t)1 << i;
    1560:	2001      	movs	r0, #1
    1562:	0021      	movs	r1, r4
    1564:	9600      	str	r6, [sp, #0]
    1566:	9701      	str	r7, [sp, #4]
    1568:	465c      	mov	r4, fp
    156a:	9403      	str	r4, [sp, #12]
    156c:	4644      	mov	r4, r8
    156e:	9405      	str	r4, [sp, #20]
    1570:	e013      	b.n	159a <long_division+0x5a>
    1572:	2420      	movs	r4, #32
    1574:	1a64      	subs	r4, r4, r1
    1576:	0005      	movs	r5, r0
    1578:	40e5      	lsrs	r5, r4
    157a:	46a8      	mov	r8, r5
    157c:	e014      	b.n	15a8 <long_division+0x68>
		if (n & bit_shift) {
			r |= 0x01;
		}

		if (r >= d) {
			r = r - d;
    157e:	9c00      	ldr	r4, [sp, #0]
    1580:	9d01      	ldr	r5, [sp, #4]
    1582:	1b12      	subs	r2, r2, r4
    1584:	41ab      	sbcs	r3, r5
			q |= bit_shift;
    1586:	465c      	mov	r4, fp
    1588:	464d      	mov	r5, r9
    158a:	432c      	orrs	r4, r5
    158c:	46a3      	mov	fp, r4
    158e:	9c03      	ldr	r4, [sp, #12]
    1590:	4645      	mov	r5, r8
    1592:	432c      	orrs	r4, r5
    1594:	9403      	str	r4, [sp, #12]
	for (i = 63; i >= 0; i--) {
    1596:	3901      	subs	r1, #1
    1598:	d325      	bcc.n	15e6 <long_division+0xa6>
		bit_shift = (uint64_t)1 << i;
    159a:	2420      	movs	r4, #32
    159c:	4264      	negs	r4, r4
    159e:	190c      	adds	r4, r1, r4
    15a0:	d4e7      	bmi.n	1572 <long_division+0x32>
    15a2:	0005      	movs	r5, r0
    15a4:	40a5      	lsls	r5, r4
    15a6:	46a8      	mov	r8, r5
    15a8:	0004      	movs	r4, r0
    15aa:	408c      	lsls	r4, r1
    15ac:	46a1      	mov	r9, r4
		r = r << 1;
    15ae:	1892      	adds	r2, r2, r2
    15b0:	415b      	adcs	r3, r3
    15b2:	0014      	movs	r4, r2
    15b4:	001d      	movs	r5, r3
		if (n & bit_shift) {
    15b6:	9e05      	ldr	r6, [sp, #20]
    15b8:	464f      	mov	r7, r9
    15ba:	403e      	ands	r6, r7
    15bc:	46b4      	mov	ip, r6
    15be:	9e04      	ldr	r6, [sp, #16]
    15c0:	4647      	mov	r7, r8
    15c2:	403e      	ands	r6, r7
    15c4:	46b2      	mov	sl, r6
    15c6:	4666      	mov	r6, ip
    15c8:	4657      	mov	r7, sl
    15ca:	433e      	orrs	r6, r7
    15cc:	d003      	beq.n	15d6 <long_division+0x96>
			r |= 0x01;
    15ce:	0006      	movs	r6, r0
    15d0:	4326      	orrs	r6, r4
    15d2:	0032      	movs	r2, r6
    15d4:	002b      	movs	r3, r5
		if (r >= d) {
    15d6:	9c00      	ldr	r4, [sp, #0]
    15d8:	9d01      	ldr	r5, [sp, #4]
    15da:	429d      	cmp	r5, r3
    15dc:	d8db      	bhi.n	1596 <long_division+0x56>
    15de:	d1ce      	bne.n	157e <long_division+0x3e>
    15e0:	4294      	cmp	r4, r2
    15e2:	d8d8      	bhi.n	1596 <long_division+0x56>
    15e4:	e7cb      	b.n	157e <long_division+0x3e>
    15e6:	9b03      	ldr	r3, [sp, #12]
		}
	}

	return q;
}
    15e8:	4658      	mov	r0, fp
    15ea:	0019      	movs	r1, r3
    15ec:	b007      	add	sp, #28
    15ee:	bc3c      	pop	{r2, r3, r4, r5}
    15f0:	4690      	mov	r8, r2
    15f2:	4699      	mov	r9, r3
    15f4:	46a2      	mov	sl, r4
    15f6:	46ab      	mov	fp, r5
    15f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

000015fa <_sercom_get_sync_baud_val>:
 */
enum status_code _sercom_get_sync_baud_val(
		const uint32_t baudrate,
		const uint32_t external_clock,
		uint16_t *const baudvalue)
{
    15fa:	b510      	push	{r4, lr}
	uint16_t baud_calculated = 0;
	uint32_t clock_value = external_clock;


	/* Check if baudrate is outside of valid range */
	if (baudrate > (external_clock / 2)) {
    15fc:	0849      	lsrs	r1, r1, #1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
    15fe:	2340      	movs	r3, #64	; 0x40
    1600:	2400      	movs	r4, #0
	if (baudrate > (external_clock / 2)) {
    1602:	4281      	cmp	r1, r0
    1604:	d202      	bcs.n	160c <_sercom_get_sync_baud_val+0x12>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
	} else {
		*baudvalue = baud_calculated;
		return STATUS_OK;
	}
}
    1606:	0018      	movs	r0, r3
    1608:	bd10      	pop	{r4, pc}
		baud_calculated++;
    160a:	001c      	movs	r4, r3
		clock_value = clock_value - baudrate;
    160c:	1a09      	subs	r1, r1, r0
		baud_calculated++;
    160e:	1c63      	adds	r3, r4, #1
    1610:	b29b      	uxth	r3, r3
	while (clock_value >= baudrate) {
    1612:	4288      	cmp	r0, r1
    1614:	d9f9      	bls.n	160a <_sercom_get_sync_baud_val+0x10>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
    1616:	2340      	movs	r3, #64	; 0x40
	if (baud_calculated > 0xFF) {
    1618:	2cff      	cmp	r4, #255	; 0xff
    161a:	d8f4      	bhi.n	1606 <_sercom_get_sync_baud_val+0xc>
		*baudvalue = baud_calculated;
    161c:	8014      	strh	r4, [r2, #0]
		return STATUS_OK;
    161e:	2300      	movs	r3, #0
    1620:	e7f1      	b.n	1606 <_sercom_get_sync_baud_val+0xc>
	...

00001624 <_sercom_get_async_baud_val>:
		const uint32_t baudrate,
		const uint32_t peripheral_clock,
		uint16_t *const baudval,
		enum sercom_asynchronous_operation_mode mode,
		enum sercom_asynchronous_sample_num sample_num)
{
    1624:	b5f0      	push	{r4, r5, r6, r7, lr}
    1626:	b083      	sub	sp, #12
    1628:	000f      	movs	r7, r1
    162a:	0016      	movs	r6, r2
    162c:	aa08      	add	r2, sp, #32
    162e:	7811      	ldrb	r1, [r2, #0]
	uint8_t baud_fp;
	uint32_t baud_int = 0;
	uint64_t temp1;

	/* Check if the baudrate is outside of valid range */
	if ((baudrate * sample_num) > peripheral_clock) {
    1630:	0004      	movs	r4, r0
    1632:	434c      	muls	r4, r1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
    1634:	2240      	movs	r2, #64	; 0x40
	if ((baudrate * sample_num) > peripheral_clock) {
    1636:	42bc      	cmp	r4, r7
    1638:	d902      	bls.n	1640 <_sercom_get_async_baud_val+0x1c>
		baud_calculated = baud_int | (baud_fp << 13);
	}

	*baudval = baud_calculated;
	return STATUS_OK;
}
    163a:	0010      	movs	r0, r2
    163c:	b003      	add	sp, #12
    163e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if(mode == SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC) {
    1640:	2b00      	cmp	r3, #0
    1642:	d114      	bne.n	166e <_sercom_get_async_baud_val+0x4a>
		temp1 = ((sample_num * (uint64_t)baudrate) << SHIFT);
    1644:	0002      	movs	r2, r0
    1646:	0008      	movs	r0, r1
    1648:	2100      	movs	r1, #0
    164a:	4c19      	ldr	r4, [pc, #100]	; (16b0 <_sercom_get_async_baud_val+0x8c>)
    164c:	47a0      	blx	r4
    164e:	0001      	movs	r1, r0
		ratio = long_division(temp1, peripheral_clock);
    1650:	003a      	movs	r2, r7
    1652:	2300      	movs	r3, #0
    1654:	2000      	movs	r0, #0
    1656:	4c17      	ldr	r4, [pc, #92]	; (16b4 <_sercom_get_async_baud_val+0x90>)
    1658:	47a0      	blx	r4
		scale = ((uint64_t)1 << SHIFT) - ratio;
    165a:	2200      	movs	r2, #0
    165c:	2301      	movs	r3, #1
    165e:	1a12      	subs	r2, r2, r0
    1660:	418b      	sbcs	r3, r1
		baud_calculated = (65536 * scale) >> SHIFT;
    1662:	0c12      	lsrs	r2, r2, #16
    1664:	041b      	lsls	r3, r3, #16
    1666:	431a      	orrs	r2, r3
	*baudval = baud_calculated;
    1668:	8032      	strh	r2, [r6, #0]
	return STATUS_OK;
    166a:	2200      	movs	r2, #0
    166c:	e7e5      	b.n	163a <_sercom_get_async_baud_val+0x16>
	uint64_t baud_calculated = 0;
    166e:	2200      	movs	r2, #0
	} else if(mode == SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL) {
    1670:	2b01      	cmp	r3, #1
    1672:	d1f9      	bne.n	1668 <_sercom_get_async_baud_val+0x44>
		temp1 = ((uint64_t)baudrate * sample_num);
    1674:	000a      	movs	r2, r1
    1676:	2300      	movs	r3, #0
    1678:	2100      	movs	r1, #0
    167a:	4c0d      	ldr	r4, [pc, #52]	; (16b0 <_sercom_get_async_baud_val+0x8c>)
    167c:	47a0      	blx	r4
    167e:	0002      	movs	r2, r0
    1680:	000b      	movs	r3, r1
    1682:	9200      	str	r2, [sp, #0]
    1684:	9301      	str	r3, [sp, #4]
		baud_int = long_division( peripheral_clock, temp1);
    1686:	0038      	movs	r0, r7
    1688:	2100      	movs	r1, #0
    168a:	4c0a      	ldr	r4, [pc, #40]	; (16b4 <_sercom_get_async_baud_val+0x90>)
    168c:	47a0      	blx	r4
    168e:	0005      	movs	r5, r0
		if(baud_int > BAUD_INT_MAX) {
    1690:	2380      	movs	r3, #128	; 0x80
    1692:	019b      	lsls	r3, r3, #6
				return STATUS_ERR_BAUDRATE_UNAVAILABLE;
    1694:	2240      	movs	r2, #64	; 0x40
		if(baud_int > BAUD_INT_MAX) {
    1696:	4298      	cmp	r0, r3
    1698:	d8cf      	bhi.n	163a <_sercom_get_async_baud_val+0x16>
		temp1 = long_division( 8 * (uint64_t)peripheral_clock, temp1);
    169a:	0f79      	lsrs	r1, r7, #29
    169c:	00f8      	lsls	r0, r7, #3
    169e:	9a00      	ldr	r2, [sp, #0]
    16a0:	9b01      	ldr	r3, [sp, #4]
    16a2:	47a0      	blx	r4
		baud_fp = temp1 - 8 * baud_int;
    16a4:	00ea      	lsls	r2, r5, #3
    16a6:	1a82      	subs	r2, r0, r2
		baud_calculated = baud_int | (baud_fp << 13);
    16a8:	b2d2      	uxtb	r2, r2
    16aa:	0352      	lsls	r2, r2, #13
    16ac:	432a      	orrs	r2, r5
    16ae:	e7db      	b.n	1668 <_sercom_get_async_baud_val+0x44>
    16b0:	0000274d 	.word	0x0000274d
    16b4:	00001541 	.word	0x00001541

000016b8 <sercom_set_gclk_generator>:
 *                                         forced.
 */
enum status_code sercom_set_gclk_generator(
		const enum gclk_generator generator_source,
		const bool force_change)
{
    16b8:	b510      	push	{r4, lr}
    16ba:	b082      	sub	sp, #8
    16bc:	0004      	movs	r4, r0
	/* Check if valid option */
	if (!_sercom_config.generator_is_set || force_change) {
    16be:	4b0e      	ldr	r3, [pc, #56]	; (16f8 <sercom_set_gclk_generator+0x40>)
    16c0:	781b      	ldrb	r3, [r3, #0]
    16c2:	2b00      	cmp	r3, #0
    16c4:	d007      	beq.n	16d6 <sercom_set_gclk_generator+0x1e>
    16c6:	2900      	cmp	r1, #0
    16c8:	d105      	bne.n	16d6 <sercom_set_gclk_generator+0x1e>
		/* Save config */
		_sercom_config.generator_source = generator_source;
		_sercom_config.generator_is_set = true;

		return STATUS_OK;
	} else if (generator_source == _sercom_config.generator_source) {
    16ca:	4b0b      	ldr	r3, [pc, #44]	; (16f8 <sercom_set_gclk_generator+0x40>)
    16cc:	785b      	ldrb	r3, [r3, #1]
    16ce:	4283      	cmp	r3, r0
    16d0:	d010      	beq.n	16f4 <sercom_set_gclk_generator+0x3c>
		/* Return status OK if same config */
		return STATUS_OK;
	}

	/* Return invalid config to already initialized GCLK */
	return STATUS_ERR_ALREADY_INITIALIZED;
    16d2:	201d      	movs	r0, #29
    16d4:	e00c      	b.n	16f0 <sercom_set_gclk_generator+0x38>
		gclk_chan_conf.source_generator = generator_source;
    16d6:	a901      	add	r1, sp, #4
    16d8:	700c      	strb	r4, [r1, #0]
		system_gclk_chan_set_config(SERCOM_GCLK_ID, &gclk_chan_conf);
    16da:	2013      	movs	r0, #19
    16dc:	4b07      	ldr	r3, [pc, #28]	; (16fc <sercom_set_gclk_generator+0x44>)
    16de:	4798      	blx	r3
		system_gclk_chan_enable(SERCOM_GCLK_ID);
    16e0:	2013      	movs	r0, #19
    16e2:	4b07      	ldr	r3, [pc, #28]	; (1700 <sercom_set_gclk_generator+0x48>)
    16e4:	4798      	blx	r3
		_sercom_config.generator_source = generator_source;
    16e6:	4b04      	ldr	r3, [pc, #16]	; (16f8 <sercom_set_gclk_generator+0x40>)
    16e8:	705c      	strb	r4, [r3, #1]
		_sercom_config.generator_is_set = true;
    16ea:	2201      	movs	r2, #1
    16ec:	701a      	strb	r2, [r3, #0]
		return STATUS_OK;
    16ee:	2000      	movs	r0, #0
}
    16f0:	b002      	add	sp, #8
    16f2:	bd10      	pop	{r4, pc}
		return STATUS_OK;
    16f4:	2000      	movs	r0, #0
    16f6:	e7fb      	b.n	16f0 <sercom_set_gclk_generator+0x38>
    16f8:	20000b20 	.word	0x20000b20
    16fc:	000021f5 	.word	0x000021f5
    1700:	00002169 	.word	0x00002169

00001704 <_sercom_get_default_pad>:
 */
uint32_t _sercom_get_default_pad(
		Sercom *const sercom_module,
		const uint8_t pad)
{
	switch ((uintptr_t)sercom_module) {
    1704:	4b40      	ldr	r3, [pc, #256]	; (1808 <_sercom_get_default_pad+0x104>)
    1706:	4298      	cmp	r0, r3
    1708:	d031      	beq.n	176e <_sercom_get_default_pad+0x6a>
    170a:	d90a      	bls.n	1722 <_sercom_get_default_pad+0x1e>
    170c:	4b3f      	ldr	r3, [pc, #252]	; (180c <_sercom_get_default_pad+0x108>)
    170e:	4298      	cmp	r0, r3
    1710:	d04d      	beq.n	17ae <_sercom_get_default_pad+0xaa>
    1712:	4b3f      	ldr	r3, [pc, #252]	; (1810 <_sercom_get_default_pad+0x10c>)
    1714:	4298      	cmp	r0, r3
    1716:	d05a      	beq.n	17ce <_sercom_get_default_pad+0xca>
    1718:	4b3e      	ldr	r3, [pc, #248]	; (1814 <_sercom_get_default_pad+0x110>)
    171a:	4298      	cmp	r0, r3
    171c:	d037      	beq.n	178e <_sercom_get_default_pad+0x8a>
		/* Auto-generate a lookup table for the default SERCOM pad defaults */
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
	}

	Assert(false);
	return 0;
    171e:	2000      	movs	r0, #0
}
    1720:	4770      	bx	lr
	switch ((uintptr_t)sercom_module) {
    1722:	4b3d      	ldr	r3, [pc, #244]	; (1818 <_sercom_get_default_pad+0x114>)
    1724:	4298      	cmp	r0, r3
    1726:	d00c      	beq.n	1742 <_sercom_get_default_pad+0x3e>
    1728:	4b3c      	ldr	r3, [pc, #240]	; (181c <_sercom_get_default_pad+0x118>)
    172a:	4298      	cmp	r0, r3
    172c:	d1f7      	bne.n	171e <_sercom_get_default_pad+0x1a>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    172e:	2901      	cmp	r1, #1
    1730:	d017      	beq.n	1762 <_sercom_get_default_pad+0x5e>
    1732:	2900      	cmp	r1, #0
    1734:	d05d      	beq.n	17f2 <_sercom_get_default_pad+0xee>
    1736:	2902      	cmp	r1, #2
    1738:	d015      	beq.n	1766 <_sercom_get_default_pad+0x62>
    173a:	2903      	cmp	r1, #3
    173c:	d015      	beq.n	176a <_sercom_get_default_pad+0x66>
	return 0;
    173e:	2000      	movs	r0, #0
    1740:	e7ee      	b.n	1720 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    1742:	2901      	cmp	r1, #1
    1744:	d007      	beq.n	1756 <_sercom_get_default_pad+0x52>
    1746:	2900      	cmp	r1, #0
    1748:	d051      	beq.n	17ee <_sercom_get_default_pad+0xea>
    174a:	2902      	cmp	r1, #2
    174c:	d005      	beq.n	175a <_sercom_get_default_pad+0x56>
    174e:	2903      	cmp	r1, #3
    1750:	d005      	beq.n	175e <_sercom_get_default_pad+0x5a>
	return 0;
    1752:	2000      	movs	r0, #0
    1754:	e7e4      	b.n	1720 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    1756:	4832      	ldr	r0, [pc, #200]	; (1820 <_sercom_get_default_pad+0x11c>)
    1758:	e7e2      	b.n	1720 <_sercom_get_default_pad+0x1c>
    175a:	4832      	ldr	r0, [pc, #200]	; (1824 <_sercom_get_default_pad+0x120>)
    175c:	e7e0      	b.n	1720 <_sercom_get_default_pad+0x1c>
    175e:	4832      	ldr	r0, [pc, #200]	; (1828 <_sercom_get_default_pad+0x124>)
    1760:	e7de      	b.n	1720 <_sercom_get_default_pad+0x1c>
    1762:	4832      	ldr	r0, [pc, #200]	; (182c <_sercom_get_default_pad+0x128>)
    1764:	e7dc      	b.n	1720 <_sercom_get_default_pad+0x1c>
    1766:	4832      	ldr	r0, [pc, #200]	; (1830 <_sercom_get_default_pad+0x12c>)
    1768:	e7da      	b.n	1720 <_sercom_get_default_pad+0x1c>
    176a:	4832      	ldr	r0, [pc, #200]	; (1834 <_sercom_get_default_pad+0x130>)
    176c:	e7d8      	b.n	1720 <_sercom_get_default_pad+0x1c>
    176e:	2901      	cmp	r1, #1
    1770:	d007      	beq.n	1782 <_sercom_get_default_pad+0x7e>
    1772:	2900      	cmp	r1, #0
    1774:	d03f      	beq.n	17f6 <_sercom_get_default_pad+0xf2>
    1776:	2902      	cmp	r1, #2
    1778:	d005      	beq.n	1786 <_sercom_get_default_pad+0x82>
    177a:	2903      	cmp	r1, #3
    177c:	d005      	beq.n	178a <_sercom_get_default_pad+0x86>
	return 0;
    177e:	2000      	movs	r0, #0
    1780:	e7ce      	b.n	1720 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    1782:	482d      	ldr	r0, [pc, #180]	; (1838 <_sercom_get_default_pad+0x134>)
    1784:	e7cc      	b.n	1720 <_sercom_get_default_pad+0x1c>
    1786:	482d      	ldr	r0, [pc, #180]	; (183c <_sercom_get_default_pad+0x138>)
    1788:	e7ca      	b.n	1720 <_sercom_get_default_pad+0x1c>
    178a:	482d      	ldr	r0, [pc, #180]	; (1840 <_sercom_get_default_pad+0x13c>)
    178c:	e7c8      	b.n	1720 <_sercom_get_default_pad+0x1c>
    178e:	2901      	cmp	r1, #1
    1790:	d007      	beq.n	17a2 <_sercom_get_default_pad+0x9e>
    1792:	2900      	cmp	r1, #0
    1794:	d031      	beq.n	17fa <_sercom_get_default_pad+0xf6>
    1796:	2902      	cmp	r1, #2
    1798:	d005      	beq.n	17a6 <_sercom_get_default_pad+0xa2>
    179a:	2903      	cmp	r1, #3
    179c:	d005      	beq.n	17aa <_sercom_get_default_pad+0xa6>
	return 0;
    179e:	2000      	movs	r0, #0
    17a0:	e7be      	b.n	1720 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    17a2:	4828      	ldr	r0, [pc, #160]	; (1844 <_sercom_get_default_pad+0x140>)
    17a4:	e7bc      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17a6:	4828      	ldr	r0, [pc, #160]	; (1848 <_sercom_get_default_pad+0x144>)
    17a8:	e7ba      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17aa:	4828      	ldr	r0, [pc, #160]	; (184c <_sercom_get_default_pad+0x148>)
    17ac:	e7b8      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17ae:	2901      	cmp	r1, #1
    17b0:	d007      	beq.n	17c2 <_sercom_get_default_pad+0xbe>
    17b2:	2900      	cmp	r1, #0
    17b4:	d023      	beq.n	17fe <_sercom_get_default_pad+0xfa>
    17b6:	2902      	cmp	r1, #2
    17b8:	d005      	beq.n	17c6 <_sercom_get_default_pad+0xc2>
    17ba:	2903      	cmp	r1, #3
    17bc:	d005      	beq.n	17ca <_sercom_get_default_pad+0xc6>
	return 0;
    17be:	2000      	movs	r0, #0
    17c0:	e7ae      	b.n	1720 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    17c2:	4823      	ldr	r0, [pc, #140]	; (1850 <_sercom_get_default_pad+0x14c>)
    17c4:	e7ac      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17c6:	4823      	ldr	r0, [pc, #140]	; (1854 <_sercom_get_default_pad+0x150>)
    17c8:	e7aa      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17ca:	4823      	ldr	r0, [pc, #140]	; (1858 <_sercom_get_default_pad+0x154>)
    17cc:	e7a8      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17ce:	2901      	cmp	r1, #1
    17d0:	d007      	beq.n	17e2 <_sercom_get_default_pad+0xde>
    17d2:	2900      	cmp	r1, #0
    17d4:	d015      	beq.n	1802 <_sercom_get_default_pad+0xfe>
    17d6:	2902      	cmp	r1, #2
    17d8:	d005      	beq.n	17e6 <_sercom_get_default_pad+0xe2>
    17da:	2903      	cmp	r1, #3
    17dc:	d005      	beq.n	17ea <_sercom_get_default_pad+0xe6>
	return 0;
    17de:	2000      	movs	r0, #0
    17e0:	e79e      	b.n	1720 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    17e2:	481e      	ldr	r0, [pc, #120]	; (185c <_sercom_get_default_pad+0x158>)
    17e4:	e79c      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17e6:	481e      	ldr	r0, [pc, #120]	; (1860 <_sercom_get_default_pad+0x15c>)
    17e8:	e79a      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17ea:	481e      	ldr	r0, [pc, #120]	; (1864 <_sercom_get_default_pad+0x160>)
    17ec:	e798      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17ee:	481e      	ldr	r0, [pc, #120]	; (1868 <_sercom_get_default_pad+0x164>)
    17f0:	e796      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17f2:	2003      	movs	r0, #3
    17f4:	e794      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17f6:	481d      	ldr	r0, [pc, #116]	; (186c <_sercom_get_default_pad+0x168>)
    17f8:	e792      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17fa:	481d      	ldr	r0, [pc, #116]	; (1870 <_sercom_get_default_pad+0x16c>)
    17fc:	e790      	b.n	1720 <_sercom_get_default_pad+0x1c>
    17fe:	481d      	ldr	r0, [pc, #116]	; (1874 <_sercom_get_default_pad+0x170>)
    1800:	e78e      	b.n	1720 <_sercom_get_default_pad+0x1c>
    1802:	481d      	ldr	r0, [pc, #116]	; (1878 <_sercom_get_default_pad+0x174>)
    1804:	e78c      	b.n	1720 <_sercom_get_default_pad+0x1c>
    1806:	46c0      	nop			; (mov r8, r8)
    1808:	42001000 	.word	0x42001000
    180c:	42001800 	.word	0x42001800
    1810:	42001c00 	.word	0x42001c00
    1814:	42001400 	.word	0x42001400
    1818:	42000800 	.word	0x42000800
    181c:	42000c00 	.word	0x42000c00
    1820:	00050003 	.word	0x00050003
    1824:	00060003 	.word	0x00060003
    1828:	00070003 	.word	0x00070003
    182c:	00010003 	.word	0x00010003
    1830:	001e0003 	.word	0x001e0003
    1834:	001f0003 	.word	0x001f0003
    1838:	00090003 	.word	0x00090003
    183c:	000a0003 	.word	0x000a0003
    1840:	000b0003 	.word	0x000b0003
    1844:	00110003 	.word	0x00110003
    1848:	00120003 	.word	0x00120003
    184c:	00130003 	.word	0x00130003
    1850:	000d0003 	.word	0x000d0003
    1854:	000e0003 	.word	0x000e0003
    1858:	000f0003 	.word	0x000f0003
    185c:	00170003 	.word	0x00170003
    1860:	00180003 	.word	0x00180003
    1864:	00190003 	.word	0x00190003
    1868:	00040003 	.word	0x00040003
    186c:	00080003 	.word	0x00080003
    1870:	00100003 	.word	0x00100003
    1874:	000c0003 	.word	0x000c0003
    1878:	00160003 	.word	0x00160003

0000187c <_sercom_get_sercom_inst_index>:
 *
 * \return Index of given instance.
 */
uint8_t _sercom_get_sercom_inst_index(
		Sercom *const sercom_instance)
{
    187c:	b530      	push	{r4, r5, lr}
    187e:	b087      	sub	sp, #28
	/* Save all available SERCOM instances for compare */
	Sercom *sercom_instances[SERCOM_INST_NUM] = SERCOM_INSTS;
    1880:	4b0b      	ldr	r3, [pc, #44]	; (18b0 <_sercom_get_sercom_inst_index+0x34>)
    1882:	466a      	mov	r2, sp
    1884:	cb32      	ldmia	r3!, {r1, r4, r5}
    1886:	c232      	stmia	r2!, {r1, r4, r5}
    1888:	cb32      	ldmia	r3!, {r1, r4, r5}
    188a:	c232      	stmia	r2!, {r1, r4, r5}

	/* Find index for sercom instance */
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
		if ((uintptr_t)sercom_instance == (uintptr_t)sercom_instances[i]) {
    188c:	9b00      	ldr	r3, [sp, #0]
    188e:	4283      	cmp	r3, r0
    1890:	d00b      	beq.n	18aa <_sercom_get_sercom_inst_index+0x2e>
    1892:	2301      	movs	r3, #1
    1894:	009a      	lsls	r2, r3, #2
    1896:	4669      	mov	r1, sp
    1898:	5852      	ldr	r2, [r2, r1]
    189a:	4282      	cmp	r2, r0
    189c:	d006      	beq.n	18ac <_sercom_get_sercom_inst_index+0x30>
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
    189e:	3301      	adds	r3, #1
    18a0:	2b06      	cmp	r3, #6
    18a2:	d1f7      	bne.n	1894 <_sercom_get_sercom_inst_index+0x18>
		}
	}

	/* Invalid data given */
	Assert(false);
	return 0;
    18a4:	2000      	movs	r0, #0
}
    18a6:	b007      	add	sp, #28
    18a8:	bd30      	pop	{r4, r5, pc}
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
    18aa:	2300      	movs	r3, #0
			return i;
    18ac:	b2d8      	uxtb	r0, r3
    18ae:	e7fa      	b.n	18a6 <_sercom_get_sercom_inst_index+0x2a>
    18b0:	00008820 	.word	0x00008820

000018b4 <usart_init>:
 */
enum status_code usart_init(
		struct usart_module *const module,
		Sercom *const hw,
		const struct usart_config *const config)
{
    18b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    18b6:	46de      	mov	lr, fp
    18b8:	4657      	mov	r7, sl
    18ba:	464e      	mov	r6, r9
    18bc:	4645      	mov	r5, r8
    18be:	b5e0      	push	{r5, r6, r7, lr}
    18c0:	b091      	sub	sp, #68	; 0x44
    18c2:	0005      	movs	r5, r0
    18c4:	000c      	movs	r4, r1
    18c6:	0016      	movs	r6, r2
	Assert(config);

	enum status_code status_code = STATUS_OK;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
    18c8:	6029      	str	r1, [r5, #0]

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
    18ca:	0008      	movs	r0, r1
    18cc:	4bad      	ldr	r3, [pc, #692]	; (1b84 <usart_init+0x2d0>)
    18ce:	4798      	blx	r3
    18d0:	0002      	movs	r2, r0
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
#endif

	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
    18d2:	6823      	ldr	r3, [r4, #0]
		/* The module is busy resetting itself */
		return STATUS_BUSY;
    18d4:	2005      	movs	r0, #5
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
    18d6:	07db      	lsls	r3, r3, #31
    18d8:	d506      	bpl.n	18e8 <usart_init+0x34>
	_sercom_set_handler(instance_index, _usart_interrupt_handler);
	_sercom_instances[instance_index] = module;
#endif

	return status_code;
}
    18da:	b011      	add	sp, #68	; 0x44
    18dc:	bc3c      	pop	{r2, r3, r4, r5}
    18de:	4690      	mov	r8, r2
    18e0:	4699      	mov	r9, r3
    18e2:	46a2      	mov	sl, r4
    18e4:	46ab      	mov	fp, r5
    18e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
    18e8:	6823      	ldr	r3, [r4, #0]
		return STATUS_ERR_DENIED;
    18ea:	3017      	adds	r0, #23
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
    18ec:	079b      	lsls	r3, r3, #30
    18ee:	d4f4      	bmi.n	18da <usart_init+0x26>
    18f0:	49a5      	ldr	r1, [pc, #660]	; (1b88 <usart_init+0x2d4>)
    18f2:	6a08      	ldr	r0, [r1, #32]
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
    18f4:	1c97      	adds	r7, r2, #2
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
    18f6:	2301      	movs	r3, #1
    18f8:	40bb      	lsls	r3, r7
    18fa:	4303      	orrs	r3, r0
    18fc:	620b      	str	r3, [r1, #32]
	gclk_chan_conf.source_generator = config->generator_source;
    18fe:	a90f      	add	r1, sp, #60	; 0x3c
    1900:	272d      	movs	r7, #45	; 0x2d
    1902:	5df3      	ldrb	r3, [r6, r7]
    1904:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
    1906:	3214      	adds	r2, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
    1908:	b2d3      	uxtb	r3, r2
    190a:	9302      	str	r3, [sp, #8]
    190c:	0018      	movs	r0, r3
    190e:	4b9f      	ldr	r3, [pc, #636]	; (1b8c <usart_init+0x2d8>)
    1910:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
    1912:	9802      	ldr	r0, [sp, #8]
    1914:	4b9e      	ldr	r3, [pc, #632]	; (1b90 <usart_init+0x2dc>)
    1916:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
    1918:	5df0      	ldrb	r0, [r6, r7]
    191a:	2100      	movs	r1, #0
    191c:	4b9d      	ldr	r3, [pc, #628]	; (1b94 <usart_init+0x2e0>)
    191e:	4798      	blx	r3
	module->character_size = config->character_size;
    1920:	7af3      	ldrb	r3, [r6, #11]
    1922:	716b      	strb	r3, [r5, #5]
	module->receiver_enabled = config->receiver_enable;
    1924:	2324      	movs	r3, #36	; 0x24
    1926:	5cf3      	ldrb	r3, [r6, r3]
    1928:	71ab      	strb	r3, [r5, #6]
	module->transmitter_enabled = config->transmitter_enable;
    192a:	2325      	movs	r3, #37	; 0x25
    192c:	5cf3      	ldrb	r3, [r6, r3]
    192e:	71eb      	strb	r3, [r5, #7]
	module->lin_slave_enabled = config->lin_slave_enable;
    1930:	7ef3      	ldrb	r3, [r6, #27]
    1932:	722b      	strb	r3, [r5, #8]
	module->start_frame_detection_enabled = config->start_frame_detection_enable;
    1934:	7f33      	ldrb	r3, [r6, #28]
    1936:	726b      	strb	r3, [r5, #9]
	SercomUsart *const usart_hw = &(module->hw->USART);
    1938:	682b      	ldr	r3, [r5, #0]
    193a:	4698      	mov	r8, r3
	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
    193c:	0018      	movs	r0, r3
    193e:	4b91      	ldr	r3, [pc, #580]	; (1b84 <usart_init+0x2d0>)
    1940:	4798      	blx	r3
	uint32_t gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
    1942:	3014      	adds	r0, #20
	uint16_t baud  = 0;
    1944:	2200      	movs	r2, #0
    1946:	230e      	movs	r3, #14
    1948:	a906      	add	r1, sp, #24
    194a:	468c      	mov	ip, r1
    194c:	4463      	add	r3, ip
    194e:	801a      	strh	r2, [r3, #0]
	switch (config->sample_rate) {
    1950:	8a32      	ldrh	r2, [r6, #16]
    1952:	9202      	str	r2, [sp, #8]
    1954:	2380      	movs	r3, #128	; 0x80
    1956:	01db      	lsls	r3, r3, #7
    1958:	429a      	cmp	r2, r3
    195a:	d100      	bne.n	195e <usart_init+0xaa>
    195c:	e09f      	b.n	1a9e <usart_init+0x1ea>
    195e:	d90f      	bls.n	1980 <usart_init+0xcc>
    1960:	23c0      	movs	r3, #192	; 0xc0
    1962:	01db      	lsls	r3, r3, #7
    1964:	9a02      	ldr	r2, [sp, #8]
    1966:	429a      	cmp	r2, r3
    1968:	d100      	bne.n	196c <usart_init+0xb8>
    196a:	e093      	b.n	1a94 <usart_init+0x1e0>
    196c:	2380      	movs	r3, #128	; 0x80
    196e:	021b      	lsls	r3, r3, #8
    1970:	429a      	cmp	r2, r3
    1972:	d000      	beq.n	1976 <usart_init+0xc2>
    1974:	e101      	b.n	1b7a <usart_init+0x2c6>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_3;
    1976:	2303      	movs	r3, #3
    1978:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
    197a:	2300      	movs	r3, #0
    197c:	9307      	str	r3, [sp, #28]
    197e:	e008      	b.n	1992 <usart_init+0xde>
	switch (config->sample_rate) {
    1980:	2380      	movs	r3, #128	; 0x80
    1982:	019b      	lsls	r3, r3, #6
    1984:	429a      	cmp	r2, r3
    1986:	d000      	beq.n	198a <usart_init+0xd6>
    1988:	e0f7      	b.n	1b7a <usart_init+0x2c6>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
    198a:	2310      	movs	r3, #16
    198c:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
    198e:	3b0f      	subs	r3, #15
    1990:	9307      	str	r3, [sp, #28]
	ctrla = (uint32_t)config->data_order |
    1992:	6833      	ldr	r3, [r6, #0]
    1994:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
    1996:	68f3      	ldr	r3, [r6, #12]
    1998:	9304      	str	r3, [sp, #16]
		config->sample_adjustment |
    199a:	6973      	ldr	r3, [r6, #20]
    199c:	469a      	mov	sl, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
    199e:	7e33      	ldrb	r3, [r6, #24]
    19a0:	9305      	str	r3, [sp, #20]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
    19a2:	2326      	movs	r3, #38	; 0x26
    19a4:	5cf3      	ldrb	r3, [r6, r3]
    19a6:	9303      	str	r3, [sp, #12]
	transfer_mode = (uint32_t)config->transfer_mode;
    19a8:	6873      	ldr	r3, [r6, #4]
    19aa:	4699      	mov	r9, r3
	switch (transfer_mode)
    19ac:	2b00      	cmp	r3, #0
    19ae:	d100      	bne.n	19b2 <usart_init+0xfe>
    19b0:	e0a1      	b.n	1af6 <usart_init+0x242>
    19b2:	2380      	movs	r3, #128	; 0x80
    19b4:	055b      	lsls	r3, r3, #21
    19b6:	4599      	cmp	r9, r3
    19b8:	d100      	bne.n	19bc <usart_init+0x108>
    19ba:	e085      	b.n	1ac8 <usart_init+0x214>
	if(config->encoding_format_enable) {
    19bc:	7e73      	ldrb	r3, [r6, #25]
    19be:	2b00      	cmp	r3, #0
    19c0:	d002      	beq.n	19c8 <usart_init+0x114>
		usart_hw->RXPL.reg = config->receive_pulse_length;
    19c2:	7eb3      	ldrb	r3, [r6, #26]
    19c4:	4642      	mov	r2, r8
    19c6:	7393      	strb	r3, [r2, #14]
	SercomUsart *const usart_hw = &(module->hw->USART);
    19c8:	682a      	ldr	r2, [r5, #0]
    19ca:	9f02      	ldr	r7, [sp, #8]
	return (usart_hw->SYNCBUSY.reg);
    19cc:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    19ce:	2b00      	cmp	r3, #0
    19d0:	d1fc      	bne.n	19cc <usart_init+0x118>
	usart_hw->BAUD.reg = baud;
    19d2:	330e      	adds	r3, #14
    19d4:	aa06      	add	r2, sp, #24
    19d6:	4694      	mov	ip, r2
    19d8:	4463      	add	r3, ip
    19da:	881b      	ldrh	r3, [r3, #0]
    19dc:	4642      	mov	r2, r8
    19de:	8193      	strh	r3, [r2, #12]
	ctrla |= transfer_mode;
    19e0:	465b      	mov	r3, fp
    19e2:	9a04      	ldr	r2, [sp, #16]
    19e4:	4313      	orrs	r3, r2
    19e6:	4652      	mov	r2, sl
    19e8:	4313      	orrs	r3, r2
    19ea:	464a      	mov	r2, r9
    19ec:	4313      	orrs	r3, r2
    19ee:	431f      	orrs	r7, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
    19f0:	9b05      	ldr	r3, [sp, #20]
    19f2:	021b      	lsls	r3, r3, #8
	ctrla |= transfer_mode;
    19f4:	431f      	orrs	r7, r3
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
    19f6:	9b03      	ldr	r3, [sp, #12]
    19f8:	075b      	lsls	r3, r3, #29
	ctrla |= transfer_mode;
    19fa:	431f      	orrs	r7, r3
	if (config->use_external_clock == false) {
    19fc:	2327      	movs	r3, #39	; 0x27
    19fe:	5cf3      	ldrb	r3, [r6, r3]
    1a00:	2b00      	cmp	r3, #0
    1a02:	d101      	bne.n	1a08 <usart_init+0x154>
		ctrla |= SERCOM_USART_CTRLA_MODE(0x1);
    1a04:	3304      	adds	r3, #4
    1a06:	431f      	orrs	r7, r3
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
    1a08:	7e73      	ldrb	r3, [r6, #25]
    1a0a:	029b      	lsls	r3, r3, #10
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
    1a0c:	7f32      	ldrb	r2, [r6, #28]
    1a0e:	0252      	lsls	r2, r2, #9
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
    1a10:	4313      	orrs	r3, r2
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
    1a12:	7f72      	ldrb	r2, [r6, #29]
    1a14:	0212      	lsls	r2, r2, #8
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
    1a16:	4313      	orrs	r3, r2
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
    1a18:	2224      	movs	r2, #36	; 0x24
    1a1a:	5cb2      	ldrb	r2, [r6, r2]
    1a1c:	0452      	lsls	r2, r2, #17
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
    1a1e:	4313      	orrs	r3, r2
			(config->transmitter_enable << SERCOM_USART_CTRLB_TXEN_Pos);
    1a20:	2225      	movs	r2, #37	; 0x25
    1a22:	5cb2      	ldrb	r2, [r6, r2]
    1a24:	0412      	lsls	r2, r2, #16
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
    1a26:	4313      	orrs	r3, r2
	ctrlb |= (uint32_t)config->character_size;
    1a28:	7ab1      	ldrb	r1, [r6, #10]
    1a2a:	7af2      	ldrb	r2, [r6, #11]
    1a2c:	4311      	orrs	r1, r2
    1a2e:	4319      	orrs	r1, r3
	if (config->parity != USART_PARITY_NONE) {
    1a30:	8933      	ldrh	r3, [r6, #8]
    1a32:	2bff      	cmp	r3, #255	; 0xff
    1a34:	d100      	bne.n	1a38 <usart_init+0x184>
    1a36:	e082      	b.n	1b3e <usart_init+0x28a>
		ctrla |= SERCOM_USART_CTRLA_FORM(1);
    1a38:	2280      	movs	r2, #128	; 0x80
    1a3a:	0452      	lsls	r2, r2, #17
    1a3c:	4317      	orrs	r7, r2
		ctrlb |= config->parity;
    1a3e:	4319      	orrs	r1, r3
	if (config->run_in_standby || system_is_debugger_present()) {
    1a40:	232c      	movs	r3, #44	; 0x2c
    1a42:	5cf3      	ldrb	r3, [r6, r3]
    1a44:	2b00      	cmp	r3, #0
    1a46:	d103      	bne.n	1a50 <usart_init+0x19c>
    1a48:	4b53      	ldr	r3, [pc, #332]	; (1b98 <usart_init+0x2e4>)
    1a4a:	789b      	ldrb	r3, [r3, #2]
    1a4c:	079b      	lsls	r3, r3, #30
    1a4e:	d501      	bpl.n	1a54 <usart_init+0x1a0>
		ctrla |= SERCOM_USART_CTRLA_RUNSTDBY;
    1a50:	2380      	movs	r3, #128	; 0x80
    1a52:	431f      	orrs	r7, r3
	SercomUsart *const usart_hw = &(module->hw->USART);
    1a54:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    1a56:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    1a58:	2b00      	cmp	r3, #0
    1a5a:	d1fc      	bne.n	1a56 <usart_init+0x1a2>
	usart_hw->CTRLB.reg = ctrlb;
    1a5c:	4643      	mov	r3, r8
    1a5e:	6059      	str	r1, [r3, #4]
	SercomUsart *const usart_hw = &(module->hw->USART);
    1a60:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    1a62:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    1a64:	2b00      	cmp	r3, #0
    1a66:	d1fc      	bne.n	1a62 <usart_init+0x1ae>
	usart_hw->CTRLA.reg = ctrla;
    1a68:	4643      	mov	r3, r8
    1a6a:	601f      	str	r7, [r3, #0]
    1a6c:	ab0e      	add	r3, sp, #56	; 0x38
    1a6e:	2280      	movs	r2, #128	; 0x80
    1a70:	701a      	strb	r2, [r3, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
    1a72:	2200      	movs	r2, #0
    1a74:	705a      	strb	r2, [r3, #1]
	config->powersave    = false;
    1a76:	70da      	strb	r2, [r3, #3]
	pin_conf.input_pull = SYSTEM_PINMUX_PIN_PULL_NONE;
    1a78:	709a      	strb	r2, [r3, #2]
	uint32_t pad_pinmuxes[] = {
    1a7a:	6b33      	ldr	r3, [r6, #48]	; 0x30
    1a7c:	930a      	str	r3, [sp, #40]	; 0x28
    1a7e:	6b73      	ldr	r3, [r6, #52]	; 0x34
    1a80:	930b      	str	r3, [sp, #44]	; 0x2c
    1a82:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    1a84:	930c      	str	r3, [sp, #48]	; 0x30
    1a86:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
    1a88:	9302      	str	r3, [sp, #8]
    1a8a:	930d      	str	r3, [sp, #52]	; 0x34
    1a8c:	2700      	movs	r7, #0
		uint32_t current_pinmux = pad_pinmuxes[pad];
    1a8e:	ad0a      	add	r5, sp, #40	; 0x28
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
    1a90:	4e42      	ldr	r6, [pc, #264]	; (1b9c <usart_init+0x2e8>)
    1a92:	e063      	b.n	1b5c <usart_init+0x2a8>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
    1a94:	2308      	movs	r3, #8
    1a96:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
    1a98:	3b07      	subs	r3, #7
    1a9a:	9307      	str	r3, [sp, #28]
    1a9c:	e779      	b.n	1992 <usart_init+0xde>
	ctrla = (uint32_t)config->data_order |
    1a9e:	6833      	ldr	r3, [r6, #0]
    1aa0:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
    1aa2:	68f3      	ldr	r3, [r6, #12]
    1aa4:	9304      	str	r3, [sp, #16]
		config->sample_adjustment |
    1aa6:	6973      	ldr	r3, [r6, #20]
    1aa8:	469a      	mov	sl, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
    1aaa:	7e33      	ldrb	r3, [r6, #24]
    1aac:	9305      	str	r3, [sp, #20]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
    1aae:	2326      	movs	r3, #38	; 0x26
    1ab0:	5cf3      	ldrb	r3, [r6, r3]
    1ab2:	9303      	str	r3, [sp, #12]
	transfer_mode = (uint32_t)config->transfer_mode;
    1ab4:	6873      	ldr	r3, [r6, #4]
    1ab6:	4699      	mov	r9, r3
	switch (transfer_mode)
    1ab8:	2b00      	cmp	r3, #0
    1aba:	d018      	beq.n	1aee <usart_init+0x23a>
    1abc:	2380      	movs	r3, #128	; 0x80
    1abe:	055b      	lsls	r3, r3, #21
    1ac0:	4599      	cmp	r9, r3
    1ac2:	d001      	beq.n	1ac8 <usart_init+0x214>
	enum status_code status_code = STATUS_OK;
    1ac4:	2000      	movs	r0, #0
    1ac6:	e025      	b.n	1b14 <usart_init+0x260>
			if (!config->use_external_clock) {
    1ac8:	2327      	movs	r3, #39	; 0x27
    1aca:	5cf3      	ldrb	r3, [r6, r3]
    1acc:	2b00      	cmp	r3, #0
    1ace:	d000      	beq.n	1ad2 <usart_init+0x21e>
    1ad0:	e774      	b.n	19bc <usart_init+0x108>
				status_code = _sercom_get_sync_baud_val(config->baudrate,
    1ad2:	6a33      	ldr	r3, [r6, #32]
    1ad4:	001f      	movs	r7, r3
    1ad6:	b2c0      	uxtb	r0, r0
    1ad8:	4b31      	ldr	r3, [pc, #196]	; (1ba0 <usart_init+0x2ec>)
    1ada:	4798      	blx	r3
    1adc:	0001      	movs	r1, r0
    1ade:	220e      	movs	r2, #14
    1ae0:	ab06      	add	r3, sp, #24
    1ae2:	469c      	mov	ip, r3
    1ae4:	4462      	add	r2, ip
    1ae6:	0038      	movs	r0, r7
    1ae8:	4b2e      	ldr	r3, [pc, #184]	; (1ba4 <usart_init+0x2f0>)
    1aea:	4798      	blx	r3
    1aec:	e012      	b.n	1b14 <usart_init+0x260>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
    1aee:	2308      	movs	r3, #8
    1af0:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
    1af2:	2300      	movs	r3, #0
    1af4:	9307      	str	r3, [sp, #28]
			if (config->use_external_clock) {
    1af6:	2327      	movs	r3, #39	; 0x27
    1af8:	5cf3      	ldrb	r3, [r6, r3]
    1afa:	2b00      	cmp	r3, #0
    1afc:	d00e      	beq.n	1b1c <usart_init+0x268>
				status_code =
    1afe:	9b06      	ldr	r3, [sp, #24]
    1b00:	9300      	str	r3, [sp, #0]
    1b02:	9b07      	ldr	r3, [sp, #28]
    1b04:	220e      	movs	r2, #14
    1b06:	a906      	add	r1, sp, #24
    1b08:	468c      	mov	ip, r1
    1b0a:	4462      	add	r2, ip
    1b0c:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    1b0e:	6a30      	ldr	r0, [r6, #32]
    1b10:	4f25      	ldr	r7, [pc, #148]	; (1ba8 <usart_init+0x2f4>)
    1b12:	47b8      	blx	r7
	if (status_code != STATUS_OK) {
    1b14:	2800      	cmp	r0, #0
    1b16:	d000      	beq.n	1b1a <usart_init+0x266>
    1b18:	e6df      	b.n	18da <usart_init+0x26>
    1b1a:	e74f      	b.n	19bc <usart_init+0x108>
						_sercom_get_async_baud_val(config->baudrate,
    1b1c:	6a33      	ldr	r3, [r6, #32]
    1b1e:	001f      	movs	r7, r3
    1b20:	b2c0      	uxtb	r0, r0
    1b22:	4b1f      	ldr	r3, [pc, #124]	; (1ba0 <usart_init+0x2ec>)
    1b24:	4798      	blx	r3
    1b26:	0001      	movs	r1, r0
				status_code =
    1b28:	9b06      	ldr	r3, [sp, #24]
    1b2a:	9300      	str	r3, [sp, #0]
    1b2c:	9b07      	ldr	r3, [sp, #28]
    1b2e:	220e      	movs	r2, #14
    1b30:	a806      	add	r0, sp, #24
    1b32:	4684      	mov	ip, r0
    1b34:	4462      	add	r2, ip
    1b36:	0038      	movs	r0, r7
    1b38:	4f1b      	ldr	r7, [pc, #108]	; (1ba8 <usart_init+0x2f4>)
    1b3a:	47b8      	blx	r7
    1b3c:	e7ea      	b.n	1b14 <usart_init+0x260>
		if(config->lin_slave_enable) {
    1b3e:	7ef3      	ldrb	r3, [r6, #27]
    1b40:	2b00      	cmp	r3, #0
    1b42:	d100      	bne.n	1b46 <usart_init+0x292>
    1b44:	e77c      	b.n	1a40 <usart_init+0x18c>
			ctrla |= SERCOM_USART_CTRLA_FORM(0x4);
    1b46:	2380      	movs	r3, #128	; 0x80
    1b48:	04db      	lsls	r3, r3, #19
    1b4a:	431f      	orrs	r7, r3
    1b4c:	e778      	b.n	1a40 <usart_init+0x18c>
			current_pinmux = _sercom_get_default_pad(hw, pad);
    1b4e:	0020      	movs	r0, r4
    1b50:	4b16      	ldr	r3, [pc, #88]	; (1bac <usart_init+0x2f8>)
    1b52:	4798      	blx	r3
    1b54:	e007      	b.n	1b66 <usart_init+0x2b2>
    1b56:	3701      	adds	r7, #1
	for (uint8_t pad = 0; pad < 4; pad++) {
    1b58:	2f04      	cmp	r7, #4
    1b5a:	d00c      	beq.n	1b76 <usart_init+0x2c2>
    1b5c:	b2f9      	uxtb	r1, r7
		uint32_t current_pinmux = pad_pinmuxes[pad];
    1b5e:	00bb      	lsls	r3, r7, #2
    1b60:	5958      	ldr	r0, [r3, r5]
		if (current_pinmux == PINMUX_DEFAULT) {
    1b62:	2800      	cmp	r0, #0
    1b64:	d0f3      	beq.n	1b4e <usart_init+0x29a>
		if (current_pinmux != PINMUX_UNUSED) {
    1b66:	1c43      	adds	r3, r0, #1
    1b68:	d0f5      	beq.n	1b56 <usart_init+0x2a2>
			pin_conf.mux_position = current_pinmux & 0xFFFF;
    1b6a:	a90e      	add	r1, sp, #56	; 0x38
    1b6c:	7008      	strb	r0, [r1, #0]
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
    1b6e:	0c00      	lsrs	r0, r0, #16
    1b70:	b2c0      	uxtb	r0, r0
    1b72:	47b0      	blx	r6
    1b74:	e7ef      	b.n	1b56 <usart_init+0x2a2>
	return status_code;
    1b76:	2000      	movs	r0, #0
    1b78:	e6af      	b.n	18da <usart_init+0x26>
	enum sercom_asynchronous_sample_num sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
    1b7a:	2310      	movs	r3, #16
    1b7c:	9306      	str	r3, [sp, #24]
	enum sercom_asynchronous_operation_mode mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
    1b7e:	2300      	movs	r3, #0
    1b80:	9307      	str	r3, [sp, #28]
    1b82:	e706      	b.n	1992 <usart_init+0xde>
    1b84:	0000187d 	.word	0x0000187d
    1b88:	40000400 	.word	0x40000400
    1b8c:	000021f5 	.word	0x000021f5
    1b90:	00002169 	.word	0x00002169
    1b94:	000016b9 	.word	0x000016b9
    1b98:	41002000 	.word	0x41002000
    1b9c:	000022ed 	.word	0x000022ed
    1ba0:	00002211 	.word	0x00002211
    1ba4:	000015fb 	.word	0x000015fb
    1ba8:	00001625 	.word	0x00001625
    1bac:	00001705 	.word	0x00001705

00001bb0 <usart_write_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the transmitter is enabled */
	if (!(module->transmitter_enabled)) {
    1bb0:	79c3      	ldrb	r3, [r0, #7]
		return STATUS_ERR_DENIED;
    1bb2:	221c      	movs	r2, #28
	if (!(module->transmitter_enabled)) {
    1bb4:	2b00      	cmp	r3, #0
    1bb6:	d101      	bne.n	1bbc <usart_write_wait+0xc>
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
		/* Wait until data is sent */
	}

	return STATUS_OK;
}
    1bb8:	0010      	movs	r0, r2
    1bba:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
    1bbc:	6803      	ldr	r3, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
    1bbe:	7e18      	ldrb	r0, [r3, #24]
		return STATUS_BUSY;
    1bc0:	3a17      	subs	r2, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
    1bc2:	07c0      	lsls	r0, r0, #31
    1bc4:	d5f8      	bpl.n	1bb8 <usart_write_wait+0x8>
	return (usart_hw->SYNCBUSY.reg);
    1bc6:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
    1bc8:	2a00      	cmp	r2, #0
    1bca:	d1fc      	bne.n	1bc6 <usart_write_wait+0x16>
	usart_hw->DATA.reg = tx_data;
    1bcc:	8519      	strh	r1, [r3, #40]	; 0x28
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
    1bce:	2102      	movs	r1, #2
    1bd0:	7e1a      	ldrb	r2, [r3, #24]
    1bd2:	420a      	tst	r2, r1
    1bd4:	d0fc      	beq.n	1bd0 <usart_write_wait+0x20>
	return STATUS_OK;
    1bd6:	2200      	movs	r2, #0
    1bd8:	e7ee      	b.n	1bb8 <usart_write_wait+0x8>
	...

00001bdc <usart_write_buffer_wait>:
 */
enum status_code usart_write_buffer_wait(
		struct usart_module *const module,
		const uint8_t *tx_data,
		uint16_t length)
{
    1bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
    1bde:	46ce      	mov	lr, r9
    1be0:	4647      	mov	r7, r8
    1be2:	b580      	push	{r7, lr}
    1be4:	b083      	sub	sp, #12
    1be6:	0005      	movs	r5, r0
    1be8:	9101      	str	r1, [sp, #4]
	Assert(module);
	Assert(module->hw);

	/* Check if the buffer length is valid */
	if (length == 0) {
		return STATUS_ERR_INVALID_ARG;
    1bea:	2017      	movs	r0, #23
	if (length == 0) {
    1bec:	2a00      	cmp	r2, #0
    1bee:	d104      	bne.n	1bfa <usart_write_buffer_wait+0x1e>
			return STATUS_ERR_TIMEOUT;
		}
	}

	return STATUS_OK;
}
    1bf0:	b003      	add	sp, #12
    1bf2:	bc0c      	pop	{r2, r3}
    1bf4:	4690      	mov	r8, r2
    1bf6:	4699      	mov	r9, r3
    1bf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (!(module->transmitter_enabled)) {
    1bfa:	79eb      	ldrb	r3, [r5, #7]
		return STATUS_ERR_DENIED;
    1bfc:	3005      	adds	r0, #5
	if (!(module->transmitter_enabled)) {
    1bfe:	2b00      	cmp	r3, #0
    1c00:	d0f6      	beq.n	1bf0 <usart_write_buffer_wait+0x14>
	SercomUsart *const usart_hw = &(module->hw->USART);
    1c02:	682c      	ldr	r4, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    1c04:	69e3      	ldr	r3, [r4, #28]
	while (usart_is_syncing(module)) {
    1c06:	2b00      	cmp	r3, #0
    1c08:	d1fc      	bne.n	1c04 <usart_write_buffer_wait+0x28>
	while (length--) {
    1c0a:	3a01      	subs	r2, #1
    1c0c:	b293      	uxth	r3, r2
    1c0e:	4699      	mov	r9, r3
    1c10:	2600      	movs	r6, #0
			if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) {
    1c12:	2701      	movs	r7, #1
	while (length--) {
    1c14:	4b1f      	ldr	r3, [pc, #124]	; (1c94 <usart_write_buffer_wait+0xb8>)
    1c16:	4698      	mov	r8, r3
    1c18:	e011      	b.n	1c3e <usart_write_buffer_wait+0x62>
		uint16_t data_to_send = tx_data[tx_pos++];
    1c1a:	1c73      	adds	r3, r6, #1
    1c1c:	b29b      	uxth	r3, r3
    1c1e:	9a01      	ldr	r2, [sp, #4]
    1c20:	5d91      	ldrb	r1, [r2, r6]
		if (module->character_size == USART_CHARACTER_SIZE_9BIT) {
    1c22:	796a      	ldrb	r2, [r5, #5]
    1c24:	2a01      	cmp	r2, #1
    1c26:	d017      	beq.n	1c58 <usart_write_buffer_wait+0x7c>
		uint16_t data_to_send = tx_data[tx_pos++];
    1c28:	b289      	uxth	r1, r1
    1c2a:	001e      	movs	r6, r3
		usart_write_wait(module, data_to_send);
    1c2c:	0028      	movs	r0, r5
    1c2e:	4b1a      	ldr	r3, [pc, #104]	; (1c98 <usart_write_buffer_wait+0xbc>)
    1c30:	4798      	blx	r3
	while (length--) {
    1c32:	464b      	mov	r3, r9
    1c34:	3b01      	subs	r3, #1
    1c36:	b29b      	uxth	r3, r3
    1c38:	4699      	mov	r9, r3
    1c3a:	4543      	cmp	r3, r8
    1c3c:	d013      	beq.n	1c66 <usart_write_buffer_wait+0x8a>
			if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) {
    1c3e:	7e23      	ldrb	r3, [r4, #24]
    1c40:	423b      	tst	r3, r7
    1c42:	d1ea      	bne.n	1c1a <usart_write_buffer_wait+0x3e>
    1c44:	4b13      	ldr	r3, [pc, #76]	; (1c94 <usart_write_buffer_wait+0xb8>)
    1c46:	7e22      	ldrb	r2, [r4, #24]
    1c48:	423a      	tst	r2, r7
    1c4a:	d1e6      	bne.n	1c1a <usart_write_buffer_wait+0x3e>
			} else if (i == USART_TIMEOUT) {
    1c4c:	2b01      	cmp	r3, #1
    1c4e:	d019      	beq.n	1c84 <usart_write_buffer_wait+0xa8>
    1c50:	3b01      	subs	r3, #1
		for (uint32_t i = 0; i <= USART_TIMEOUT; i++) {
    1c52:	2b00      	cmp	r3, #0
    1c54:	d1f7      	bne.n	1c46 <usart_write_buffer_wait+0x6a>
    1c56:	e7e0      	b.n	1c1a <usart_write_buffer_wait+0x3e>
			data_to_send |= (tx_data[tx_pos++] << 8);
    1c58:	3602      	adds	r6, #2
    1c5a:	b2b6      	uxth	r6, r6
    1c5c:	9a01      	ldr	r2, [sp, #4]
    1c5e:	5cd3      	ldrb	r3, [r2, r3]
    1c60:	021b      	lsls	r3, r3, #8
    1c62:	4319      	orrs	r1, r3
    1c64:	e7e2      	b.n	1c2c <usart_write_buffer_wait+0x50>
		if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) {
    1c66:	7e23      	ldrb	r3, [r4, #24]
    1c68:	079b      	lsls	r3, r3, #30
    1c6a:	d40d      	bmi.n	1c88 <usart_write_buffer_wait+0xac>
    1c6c:	4b09      	ldr	r3, [pc, #36]	; (1c94 <usart_write_buffer_wait+0xb8>)
    1c6e:	2102      	movs	r1, #2
    1c70:	7e22      	ldrb	r2, [r4, #24]
    1c72:	420a      	tst	r2, r1
    1c74:	d10a      	bne.n	1c8c <usart_write_buffer_wait+0xb0>
		} else if (i == USART_TIMEOUT) {
    1c76:	2b01      	cmp	r3, #1
    1c78:	d00a      	beq.n	1c90 <usart_write_buffer_wait+0xb4>
    1c7a:	3b01      	subs	r3, #1
	for (uint32_t i = 0; i <= USART_TIMEOUT; i++) {
    1c7c:	2b00      	cmp	r3, #0
    1c7e:	d1f7      	bne.n	1c70 <usart_write_buffer_wait+0x94>
	return STATUS_OK;
    1c80:	2000      	movs	r0, #0
    1c82:	e7b5      	b.n	1bf0 <usart_write_buffer_wait+0x14>
				return STATUS_ERR_TIMEOUT;
    1c84:	2012      	movs	r0, #18
    1c86:	e7b3      	b.n	1bf0 <usart_write_buffer_wait+0x14>
	return STATUS_OK;
    1c88:	2000      	movs	r0, #0
    1c8a:	e7b1      	b.n	1bf0 <usart_write_buffer_wait+0x14>
    1c8c:	2000      	movs	r0, #0
    1c8e:	e7af      	b.n	1bf0 <usart_write_buffer_wait+0x14>
			return STATUS_ERR_TIMEOUT;
    1c90:	2012      	movs	r0, #18
    1c92:	e7ad      	b.n	1bf0 <usart_write_buffer_wait+0x14>
    1c94:	0000ffff 	.word	0x0000ffff
    1c98:	00001bb1 	.word	0x00001bb1

00001c9c <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
    1c9c:	b510      	push	{r4, lr}
	switch (clock_source) {
    1c9e:	2808      	cmp	r0, #8
    1ca0:	d803      	bhi.n	1caa <system_clock_source_get_hz+0xe>
    1ca2:	0080      	lsls	r0, r0, #2
    1ca4:	4b1c      	ldr	r3, [pc, #112]	; (1d18 <system_clock_source_get_hz+0x7c>)
    1ca6:	581b      	ldr	r3, [r3, r0]
    1ca8:	469f      	mov	pc, r3

		return _system_clock_inst.dpll.frequency;
#endif

	default:
		return 0;
    1caa:	2000      	movs	r0, #0
    1cac:	e032      	b.n	1d14 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc.frequency;
    1cae:	4b1b      	ldr	r3, [pc, #108]	; (1d1c <system_clock_source_get_hz+0x80>)
    1cb0:	6918      	ldr	r0, [r3, #16]
    1cb2:	e02f      	b.n	1d14 <system_clock_source_get_hz+0x78>
		return 8000000UL >> SYSCTRL->OSC8M.bit.PRESC;
    1cb4:	4b1a      	ldr	r3, [pc, #104]	; (1d20 <system_clock_source_get_hz+0x84>)
    1cb6:	6a1b      	ldr	r3, [r3, #32]
    1cb8:	059b      	lsls	r3, r3, #22
    1cba:	0f9b      	lsrs	r3, r3, #30
    1cbc:	4819      	ldr	r0, [pc, #100]	; (1d24 <system_clock_source_get_hz+0x88>)
    1cbe:	40d8      	lsrs	r0, r3
    1cc0:	e028      	b.n	1d14 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc32k.frequency;
    1cc2:	4b16      	ldr	r3, [pc, #88]	; (1d1c <system_clock_source_get_hz+0x80>)
    1cc4:	6958      	ldr	r0, [r3, #20]
    1cc6:	e025      	b.n	1d14 <system_clock_source_get_hz+0x78>
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
    1cc8:	4b14      	ldr	r3, [pc, #80]	; (1d1c <system_clock_source_get_hz+0x80>)
    1cca:	681b      	ldr	r3, [r3, #0]
			return 0;
    1ccc:	2000      	movs	r0, #0
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
    1cce:	079b      	lsls	r3, r3, #30
    1cd0:	d520      	bpl.n	1d14 <system_clock_source_get_hz+0x78>
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    1cd2:	4913      	ldr	r1, [pc, #76]	; (1d20 <system_clock_source_get_hz+0x84>)
    1cd4:	2210      	movs	r2, #16
    1cd6:	68cb      	ldr	r3, [r1, #12]
    1cd8:	421a      	tst	r2, r3
    1cda:	d0fc      	beq.n	1cd6 <system_clock_source_get_hz+0x3a>
		switch(_system_clock_inst.dfll.control &
    1cdc:	4b0f      	ldr	r3, [pc, #60]	; (1d1c <system_clock_source_get_hz+0x80>)
    1cde:	681a      	ldr	r2, [r3, #0]
    1ce0:	2324      	movs	r3, #36	; 0x24
    1ce2:	4013      	ands	r3, r2
    1ce4:	2b04      	cmp	r3, #4
    1ce6:	d001      	beq.n	1cec <system_clock_source_get_hz+0x50>
			return 48000000UL;
    1ce8:	480f      	ldr	r0, [pc, #60]	; (1d28 <system_clock_source_get_hz+0x8c>)
    1cea:	e013      	b.n	1d14 <system_clock_source_get_hz+0x78>
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    1cec:	2000      	movs	r0, #0
    1cee:	4b0f      	ldr	r3, [pc, #60]	; (1d2c <system_clock_source_get_hz+0x90>)
    1cf0:	4798      	blx	r3
					(_system_clock_inst.dfll.mul & 0xffff);
    1cf2:	4b0a      	ldr	r3, [pc, #40]	; (1d1c <system_clock_source_get_hz+0x80>)
    1cf4:	689b      	ldr	r3, [r3, #8]
    1cf6:	041b      	lsls	r3, r3, #16
    1cf8:	0c1b      	lsrs	r3, r3, #16
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    1cfa:	4358      	muls	r0, r3
    1cfc:	e00a      	b.n	1d14 <system_clock_source_get_hz+0x78>
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    1cfe:	2350      	movs	r3, #80	; 0x50
    1d00:	4a07      	ldr	r2, [pc, #28]	; (1d20 <system_clock_source_get_hz+0x84>)
    1d02:	5cd3      	ldrb	r3, [r2, r3]
			return 0;
    1d04:	2000      	movs	r0, #0
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    1d06:	075b      	lsls	r3, r3, #29
    1d08:	d504      	bpl.n	1d14 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.dpll.frequency;
    1d0a:	4b04      	ldr	r3, [pc, #16]	; (1d1c <system_clock_source_get_hz+0x80>)
    1d0c:	68d8      	ldr	r0, [r3, #12]
    1d0e:	e001      	b.n	1d14 <system_clock_source_get_hz+0x78>
		return 32768UL;
    1d10:	2080      	movs	r0, #128	; 0x80
    1d12:	0200      	lsls	r0, r0, #8
	}
}
    1d14:	bd10      	pop	{r4, pc}
    1d16:	46c0      	nop			; (mov r8, r8)
    1d18:	00008838 	.word	0x00008838
    1d1c:	20000b24 	.word	0x20000b24
    1d20:	40000800 	.word	0x40000800
    1d24:	007a1200 	.word	0x007a1200
    1d28:	02dc6c00 	.word	0x02dc6c00
    1d2c:	00002211 	.word	0x00002211

00001d30 <system_clock_source_osc8m_set_config>:
 *
 * \param[in] config  OSC8M configuration structure containing the new config
 */
void system_clock_source_osc8m_set_config(
		struct system_clock_source_osc8m_config *const config)
{
    1d30:	b570      	push	{r4, r5, r6, lr}
	SYSCTRL_OSC8M_Type temp = SYSCTRL->OSC8M;
    1d32:	490c      	ldr	r1, [pc, #48]	; (1d64 <system_clock_source_osc8m_set_config+0x34>)
    1d34:	6a0b      	ldr	r3, [r1, #32]

	/* Use temporary struct to reduce register access */
	temp.bit.PRESC    = config->prescaler;
    1d36:	7804      	ldrb	r4, [r0, #0]
	temp.bit.ONDEMAND = config->on_demand;
    1d38:	7885      	ldrb	r5, [r0, #2]
	temp.bit.RUNSTDBY = config->run_in_standby;

	SYSCTRL->OSC8M = temp;
    1d3a:	7840      	ldrb	r0, [r0, #1]
    1d3c:	2201      	movs	r2, #1
    1d3e:	4010      	ands	r0, r2
    1d40:	0180      	lsls	r0, r0, #6
    1d42:	2640      	movs	r6, #64	; 0x40
    1d44:	43b3      	bics	r3, r6
    1d46:	4303      	orrs	r3, r0
    1d48:	402a      	ands	r2, r5
    1d4a:	01d2      	lsls	r2, r2, #7
    1d4c:	2080      	movs	r0, #128	; 0x80
    1d4e:	4383      	bics	r3, r0
    1d50:	4313      	orrs	r3, r2
    1d52:	2203      	movs	r2, #3
    1d54:	4022      	ands	r2, r4
    1d56:	0212      	lsls	r2, r2, #8
    1d58:	4803      	ldr	r0, [pc, #12]	; (1d68 <system_clock_source_osc8m_set_config+0x38>)
    1d5a:	4003      	ands	r3, r0
    1d5c:	4313      	orrs	r3, r2
    1d5e:	620b      	str	r3, [r1, #32]
}
    1d60:	bd70      	pop	{r4, r5, r6, pc}
    1d62:	46c0      	nop			; (mov r8, r8)
    1d64:	40000800 	.word	0x40000800
    1d68:	fffffcff 	.word	0xfffffcff

00001d6c <system_clock_source_xosc32k_set_config>:
 *
 * \param[in] config  XOSC32K configuration structure containing the new config
 */
void system_clock_source_xosc32k_set_config(
		struct system_clock_source_xosc32k_config *const config)
{
    1d6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d6e:	46de      	mov	lr, fp
    1d70:	4657      	mov	r7, sl
    1d72:	464e      	mov	r6, r9
    1d74:	4645      	mov	r5, r8
    1d76:	b5e0      	push	{r5, r6, r7, lr}
    1d78:	0001      	movs	r1, r0
	SYSCTRL_XOSC32K_Type temp = SYSCTRL->XOSC32K;
    1d7a:	4b26      	ldr	r3, [pc, #152]	; (1e14 <system_clock_source_xosc32k_set_config+0xa8>)
    1d7c:	469b      	mov	fp, r3
    1d7e:	8a9b      	ldrh	r3, [r3, #20]

	temp.bit.STARTUP = config->startup_time;
    1d80:	7845      	ldrb	r5, [r0, #1]

	if (config->external_clock == SYSTEM_CLOCK_EXTERNAL_CRYSTAL) {
    1d82:	7800      	ldrb	r0, [r0, #0]
    1d84:	4242      	negs	r2, r0
    1d86:	4142      	adcs	r2, r0
    1d88:	4691      	mov	r9, r2
		temp.bit.XTALEN = 1;
	} else {
		temp.bit.XTALEN = 0;
	}

	temp.bit.AAMPEN = config->auto_gain_control;
    1d8a:	7888      	ldrb	r0, [r1, #2]
	temp.bit.EN1K = config->enable_1khz_output;
    1d8c:	78ca      	ldrb	r2, [r1, #3]
    1d8e:	4694      	mov	ip, r2
	temp.bit.EN32K = config->enable_32khz_output;
    1d90:	790a      	ldrb	r2, [r1, #4]
    1d92:	4690      	mov	r8, r2

	temp.bit.ONDEMAND = config->on_demand;
    1d94:	7b4e      	ldrb	r6, [r1, #13]
	temp.bit.RUNSTDBY = config->run_in_standby;
    1d96:	7b0f      	ldrb	r7, [r1, #12]
	temp.bit.WRTLOCK  = config->write_once;
    1d98:	7b8c      	ldrb	r4, [r1, #14]

	/* Cache the new frequency in case the user needs to check the current
	 * operating frequency later */
	_system_clock_inst.xosc32k.frequency = config->frequency;
    1d9a:	688a      	ldr	r2, [r1, #8]
    1d9c:	491e      	ldr	r1, [pc, #120]	; (1e18 <system_clock_source_xosc32k_set_config+0xac>)
    1d9e:	614a      	str	r2, [r1, #20]

	SYSCTRL->XOSC32K = temp;
    1da0:	2101      	movs	r1, #1
    1da2:	464a      	mov	r2, r9
    1da4:	0092      	lsls	r2, r2, #2
    1da6:	4691      	mov	r9, r2
    1da8:	2204      	movs	r2, #4
    1daa:	4393      	bics	r3, r2
    1dac:	464a      	mov	r2, r9
    1dae:	4313      	orrs	r3, r2
    1db0:	4642      	mov	r2, r8
    1db2:	400a      	ands	r2, r1
    1db4:	00d2      	lsls	r2, r2, #3
    1db6:	4690      	mov	r8, r2
    1db8:	2208      	movs	r2, #8
    1dba:	4393      	bics	r3, r2
    1dbc:	4642      	mov	r2, r8
    1dbe:	4313      	orrs	r3, r2
    1dc0:	4662      	mov	r2, ip
    1dc2:	400a      	ands	r2, r1
    1dc4:	0112      	lsls	r2, r2, #4
    1dc6:	4694      	mov	ip, r2
    1dc8:	2210      	movs	r2, #16
    1dca:	4393      	bics	r3, r2
    1dcc:	4662      	mov	r2, ip
    1dce:	4313      	orrs	r3, r2
    1dd0:	4008      	ands	r0, r1
    1dd2:	0140      	lsls	r0, r0, #5
    1dd4:	2220      	movs	r2, #32
    1dd6:	4393      	bics	r3, r2
    1dd8:	4303      	orrs	r3, r0
    1dda:	400f      	ands	r7, r1
    1ddc:	01bf      	lsls	r7, r7, #6
    1dde:	2040      	movs	r0, #64	; 0x40
    1de0:	4383      	bics	r3, r0
    1de2:	433b      	orrs	r3, r7
    1de4:	400e      	ands	r6, r1
    1de6:	01f6      	lsls	r6, r6, #7
    1de8:	3040      	adds	r0, #64	; 0x40
    1dea:	4383      	bics	r3, r0
    1dec:	4333      	orrs	r3, r6
    1dee:	3879      	subs	r0, #121	; 0x79
    1df0:	4005      	ands	r5, r0
    1df2:	022d      	lsls	r5, r5, #8
    1df4:	4809      	ldr	r0, [pc, #36]	; (1e1c <system_clock_source_xosc32k_set_config+0xb0>)
    1df6:	4003      	ands	r3, r0
    1df8:	432b      	orrs	r3, r5
    1dfa:	4021      	ands	r1, r4
    1dfc:	0309      	lsls	r1, r1, #12
    1dfe:	4808      	ldr	r0, [pc, #32]	; (1e20 <system_clock_source_xosc32k_set_config+0xb4>)
    1e00:	4003      	ands	r3, r0
    1e02:	430b      	orrs	r3, r1
    1e04:	465a      	mov	r2, fp
    1e06:	8293      	strh	r3, [r2, #20]
}
    1e08:	bc3c      	pop	{r2, r3, r4, r5}
    1e0a:	4690      	mov	r8, r2
    1e0c:	4699      	mov	r9, r3
    1e0e:	46a2      	mov	sl, r4
    1e10:	46ab      	mov	fp, r5
    1e12:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1e14:	40000800 	.word	0x40000800
    1e18:	20000b24 	.word	0x20000b24
    1e1c:	fffff8ff 	.word	0xfffff8ff
    1e20:	ffffefff 	.word	0xffffefff

00001e24 <system_clock_source_enable>:
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
	switch (clock_source) {
    1e24:	2808      	cmp	r0, #8
    1e26:	d803      	bhi.n	1e30 <system_clock_source_enable+0xc>
    1e28:	0080      	lsls	r0, r0, #2
    1e2a:	4b25      	ldr	r3, [pc, #148]	; (1ec0 <system_clock_source_enable+0x9c>)
    1e2c:	581b      	ldr	r3, [r3, r0]
    1e2e:	469f      	mov	pc, r3
		/* Always enabled */
		return STATUS_OK;

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
    1e30:	2017      	movs	r0, #23
    1e32:	e044      	b.n	1ebe <system_clock_source_enable+0x9a>
		SYSCTRL->OSC8M.reg |= SYSCTRL_OSC8M_ENABLE;
    1e34:	4a23      	ldr	r2, [pc, #140]	; (1ec4 <system_clock_source_enable+0xa0>)
    1e36:	6a13      	ldr	r3, [r2, #32]
    1e38:	2102      	movs	r1, #2
    1e3a:	430b      	orrs	r3, r1
    1e3c:	6213      	str	r3, [r2, #32]
		return STATUS_OK;
    1e3e:	2000      	movs	r0, #0
    1e40:	e03d      	b.n	1ebe <system_clock_source_enable+0x9a>
		SYSCTRL->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    1e42:	4a20      	ldr	r2, [pc, #128]	; (1ec4 <system_clock_source_enable+0xa0>)
    1e44:	6993      	ldr	r3, [r2, #24]
    1e46:	2102      	movs	r1, #2
    1e48:	430b      	orrs	r3, r1
    1e4a:	6193      	str	r3, [r2, #24]
	}

	return STATUS_OK;
    1e4c:	2000      	movs	r0, #0
		break;
    1e4e:	e036      	b.n	1ebe <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC.reg |= SYSCTRL_XOSC_ENABLE;
    1e50:	4a1c      	ldr	r2, [pc, #112]	; (1ec4 <system_clock_source_enable+0xa0>)
    1e52:	8a13      	ldrh	r3, [r2, #16]
    1e54:	2102      	movs	r1, #2
    1e56:	430b      	orrs	r3, r1
    1e58:	8213      	strh	r3, [r2, #16]
	return STATUS_OK;
    1e5a:	2000      	movs	r0, #0
		break;
    1e5c:	e02f      	b.n	1ebe <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC32K.reg |= SYSCTRL_XOSC32K_ENABLE;
    1e5e:	4a19      	ldr	r2, [pc, #100]	; (1ec4 <system_clock_source_enable+0xa0>)
    1e60:	8a93      	ldrh	r3, [r2, #20]
    1e62:	2102      	movs	r1, #2
    1e64:	430b      	orrs	r3, r1
    1e66:	8293      	strh	r3, [r2, #20]
	return STATUS_OK;
    1e68:	2000      	movs	r0, #0
		break;
    1e6a:	e028      	b.n	1ebe <system_clock_source_enable+0x9a>
		_system_clock_inst.dfll.control |= SYSCTRL_DFLLCTRL_ENABLE;
    1e6c:	4916      	ldr	r1, [pc, #88]	; (1ec8 <system_clock_source_enable+0xa4>)
    1e6e:	680b      	ldr	r3, [r1, #0]
    1e70:	2202      	movs	r2, #2
    1e72:	4313      	orrs	r3, r2
    1e74:	600b      	str	r3, [r1, #0]
	SYSCTRL->DFLLCTRL.reg = SYSCTRL_DFLLCTRL_ENABLE;
    1e76:	4b13      	ldr	r3, [pc, #76]	; (1ec4 <system_clock_source_enable+0xa0>)
    1e78:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    1e7a:	0019      	movs	r1, r3
    1e7c:	320e      	adds	r2, #14
    1e7e:	68cb      	ldr	r3, [r1, #12]
    1e80:	421a      	tst	r2, r3
    1e82:	d0fc      	beq.n	1e7e <system_clock_source_enable+0x5a>
	SYSCTRL->DFLLMUL.reg = _system_clock_inst.dfll.mul;
    1e84:	4a10      	ldr	r2, [pc, #64]	; (1ec8 <system_clock_source_enable+0xa4>)
    1e86:	6891      	ldr	r1, [r2, #8]
    1e88:	4b0e      	ldr	r3, [pc, #56]	; (1ec4 <system_clock_source_enable+0xa0>)
    1e8a:	62d9      	str	r1, [r3, #44]	; 0x2c
	SYSCTRL->DFLLVAL.reg = _system_clock_inst.dfll.val;
    1e8c:	6852      	ldr	r2, [r2, #4]
    1e8e:	629a      	str	r2, [r3, #40]	; 0x28
	SYSCTRL->DFLLCTRL.reg = 0;
    1e90:	2200      	movs	r2, #0
    1e92:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    1e94:	0019      	movs	r1, r3
    1e96:	3210      	adds	r2, #16
    1e98:	68cb      	ldr	r3, [r1, #12]
    1e9a:	421a      	tst	r2, r3
    1e9c:	d0fc      	beq.n	1e98 <system_clock_source_enable+0x74>
	SYSCTRL->DFLLCTRL.reg = _system_clock_inst.dfll.control;
    1e9e:	4b0a      	ldr	r3, [pc, #40]	; (1ec8 <system_clock_source_enable+0xa4>)
    1ea0:	681b      	ldr	r3, [r3, #0]
    1ea2:	b29b      	uxth	r3, r3
    1ea4:	4a07      	ldr	r2, [pc, #28]	; (1ec4 <system_clock_source_enable+0xa0>)
    1ea6:	8493      	strh	r3, [r2, #36]	; 0x24
	return STATUS_OK;
    1ea8:	2000      	movs	r0, #0
    1eaa:	e008      	b.n	1ebe <system_clock_source_enable+0x9a>
		SYSCTRL->DPLLCTRLA.reg |= SYSCTRL_DPLLCTRLA_ENABLE;
    1eac:	4905      	ldr	r1, [pc, #20]	; (1ec4 <system_clock_source_enable+0xa0>)
    1eae:	2244      	movs	r2, #68	; 0x44
    1eb0:	5c8b      	ldrb	r3, [r1, r2]
    1eb2:	2002      	movs	r0, #2
    1eb4:	4303      	orrs	r3, r0
    1eb6:	548b      	strb	r3, [r1, r2]
	return STATUS_OK;
    1eb8:	2000      	movs	r0, #0
		break;
    1eba:	e000      	b.n	1ebe <system_clock_source_enable+0x9a>
		return STATUS_OK;
    1ebc:	2000      	movs	r0, #0
}
    1ebe:	4770      	bx	lr
    1ec0:	0000885c 	.word	0x0000885c
    1ec4:	40000800 	.word	0x40000800
    1ec8:	20000b24 	.word	0x20000b24

00001ecc <system_clock_init>:
 * \note OSC8M is always enabled and if user selects other clocks for GCLK generators,
 * the OSC8M default enable can be disabled after system_clock_init. Make sure the
 * clock switch successfully before disabling OSC8M.
 */
void system_clock_init(void)
{
    1ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
    1ece:	b089      	sub	sp, #36	; 0x24
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
    1ed0:	22c2      	movs	r2, #194	; 0xc2
    1ed2:	00d2      	lsls	r2, r2, #3
    1ed4:	4b2f      	ldr	r3, [pc, #188]	; (1f94 <system_clock_init+0xc8>)
    1ed6:	609a      	str	r2, [r3, #8]
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
    1ed8:	4a2f      	ldr	r2, [pc, #188]	; (1f98 <system_clock_init+0xcc>)
    1eda:	6853      	ldr	r3, [r2, #4]
    1edc:	211e      	movs	r1, #30
    1ede:	438b      	bics	r3, r1
    1ee0:	6053      	str	r3, [r2, #4]
	gclk_conf.source_generator = GCLK_GENERATOR_2;
    1ee2:	2302      	movs	r3, #2
    1ee4:	466a      	mov	r2, sp
    1ee6:	7013      	strb	r3, [r2, #0]
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
    1ee8:	2400      	movs	r4, #0
		system_gclk_chan_set_config(gclk_id, &gclk_conf);
    1eea:	4d2c      	ldr	r5, [pc, #176]	; (1f9c <system_clock_init+0xd0>)
    1eec:	b2e0      	uxtb	r0, r4
    1eee:	4669      	mov	r1, sp
    1ef0:	47a8      	blx	r5
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
    1ef2:	3401      	adds	r4, #1
    1ef4:	2c25      	cmp	r4, #37	; 0x25
    1ef6:	d1f9      	bne.n	1eec <system_clock_init+0x20>
	config->external_clock      = SYSTEM_CLOCK_EXTERNAL_CRYSTAL;
    1ef8:	a804      	add	r0, sp, #16
    1efa:	2300      	movs	r3, #0
    1efc:	7003      	strb	r3, [r0, #0]
	config->auto_gain_control   = false;
    1efe:	7083      	strb	r3, [r0, #2]
	config->frequency           = 32768UL;
    1f00:	2280      	movs	r2, #128	; 0x80
    1f02:	0212      	lsls	r2, r2, #8
    1f04:	6082      	str	r2, [r0, #8]
	config->enable_1khz_output  = false;
    1f06:	70c3      	strb	r3, [r0, #3]
	config->enable_32khz_output = true;
    1f08:	2201      	movs	r2, #1
    1f0a:	7102      	strb	r2, [r0, #4]
	config->run_in_standby      = false;
    1f0c:	7303      	strb	r3, [r0, #12]
	config->write_once          = false;
    1f0e:	7383      	strb	r3, [r0, #14]
	struct system_clock_source_xosc32k_config xosc32k_conf;
	system_clock_source_xosc32k_get_config_defaults(&xosc32k_conf);

	xosc32k_conf.frequency           = 32768UL;
	xosc32k_conf.external_clock      = CONF_CLOCK_XOSC32K_EXTERNAL_CRYSTAL;
	xosc32k_conf.startup_time        = CONF_CLOCK_XOSC32K_STARTUP_TIME;
    1f10:	3202      	adds	r2, #2
    1f12:	7042      	strb	r2, [r0, #1]
	xosc32k_conf.auto_gain_control   = CONF_CLOCK_XOSC32K_AUTO_AMPLITUDE_CONTROL;
	xosc32k_conf.enable_1khz_output  = CONF_CLOCK_XOSC32K_ENABLE_1KHZ_OUPUT;
	xosc32k_conf.enable_32khz_output = CONF_CLOCK_XOSC32K_ENABLE_32KHZ_OUTPUT;
	xosc32k_conf.on_demand           = false;
    1f14:	7343      	strb	r3, [r0, #13]
	xosc32k_conf.run_in_standby      = CONF_CLOCK_XOSC32K_RUN_IN_STANDBY;

	system_clock_source_xosc32k_set_config(&xosc32k_conf);
    1f16:	4b22      	ldr	r3, [pc, #136]	; (1fa0 <system_clock_init+0xd4>)
    1f18:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_XOSC32K);
    1f1a:	2005      	movs	r0, #5
    1f1c:	4b21      	ldr	r3, [pc, #132]	; (1fa4 <system_clock_init+0xd8>)
    1f1e:	4798      	blx	r3
	return ((SYSCTRL->PCLKSR.reg & mask) == mask);
    1f20:	491c      	ldr	r1, [pc, #112]	; (1f94 <system_clock_init+0xc8>)
    1f22:	2202      	movs	r2, #2
    1f24:	68cb      	ldr	r3, [r1, #12]
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_XOSC32K));
    1f26:	421a      	tst	r2, r3
    1f28:	d0fc      	beq.n	1f24 <system_clock_init+0x58>
	if (CONF_CLOCK_XOSC32K_ON_DEMAND) {
		SYSCTRL->XOSC32K.bit.ONDEMAND = 1;
    1f2a:	4a1a      	ldr	r2, [pc, #104]	; (1f94 <system_clock_init+0xc8>)
    1f2c:	8a93      	ldrh	r3, [r2, #20]
    1f2e:	2180      	movs	r1, #128	; 0x80
    1f30:	430b      	orrs	r3, r1
    1f32:	8293      	strh	r3, [r2, #20]
	config->run_in_standby  = false;
    1f34:	a803      	add	r0, sp, #12
    1f36:	2400      	movs	r4, #0
    1f38:	7044      	strb	r4, [r0, #1]
	config->on_demand       = true;
    1f3a:	2501      	movs	r5, #1
    1f3c:	7085      	strb	r5, [r0, #2]

	/* OSC8M */
	struct system_clock_source_osc8m_config osc8m_conf;
	system_clock_source_osc8m_get_config_defaults(&osc8m_conf);

	osc8m_conf.prescaler       = CONF_CLOCK_OSC8M_PRESCALER;
    1f3e:	7004      	strb	r4, [r0, #0]
	osc8m_conf.on_demand       = CONF_CLOCK_OSC8M_ON_DEMAND;
	osc8m_conf.run_in_standby  = CONF_CLOCK_OSC8M_RUN_IN_STANDBY;

	system_clock_source_osc8m_set_config(&osc8m_conf);
    1f40:	4b19      	ldr	r3, [pc, #100]	; (1fa8 <system_clock_init+0xdc>)
    1f42:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC8M);
    1f44:	2006      	movs	r0, #6
    1f46:	4b17      	ldr	r3, [pc, #92]	; (1fa4 <system_clock_init+0xd8>)
    1f48:	4798      	blx	r3


	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
    1f4a:	4b18      	ldr	r3, [pc, #96]	; (1fac <system_clock_init+0xe0>)
    1f4c:	4798      	blx	r3
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->division_factor    = 1;
    1f4e:	9501      	str	r5, [sp, #4]
	config->high_when_disabled = false;
    1f50:	466b      	mov	r3, sp
    1f52:	705c      	strb	r4, [r3, #1]
#elif (SAMC20) || (SAMC21)
	config->source_clock       = GCLK_SOURCE_OSC48M;
#else
	config->source_clock       = GCLK_SOURCE_OSC8M;
#endif
	config->run_in_standby     = false;
    1f54:	721c      	strb	r4, [r3, #8]
	config->output_enable      = false;
    1f56:	725c      	strb	r4, [r3, #9]

	/* Configure all GCLK generators except for the main generator, which
	 * is configured later after all other clock systems are set up */
	MREPEAT(GCLK_GEN_NUM, _CONF_CLOCK_GCLK_CONFIG_NONMAIN, ~);
    1f58:	2305      	movs	r3, #5
    1f5a:	466a      	mov	r2, sp
    1f5c:	7013      	strb	r3, [r2, #0]
    1f5e:	4669      	mov	r1, sp
    1f60:	2001      	movs	r0, #1
    1f62:	4f13      	ldr	r7, [pc, #76]	; (1fb0 <system_clock_init+0xe4>)
    1f64:	47b8      	blx	r7
    1f66:	2001      	movs	r0, #1
    1f68:	4e12      	ldr	r6, [pc, #72]	; (1fb4 <system_clock_init+0xe8>)
    1f6a:	47b0      	blx	r6
	PM->CPUSEL.reg = (uint32_t)divider;
    1f6c:	4b12      	ldr	r3, [pc, #72]	; (1fb8 <system_clock_init+0xec>)
    1f6e:	721c      	strb	r4, [r3, #8]
			PM->APBASEL.reg = (uint32_t)divider;
    1f70:	725c      	strb	r4, [r3, #9]
			PM->APBBSEL.reg = (uint32_t)divider;
    1f72:	729c      	strb	r4, [r3, #10]
			PM->APBCSEL.reg = (uint32_t)divider;
    1f74:	72dc      	strb	r4, [r3, #11]
	config->division_factor    = 1;
    1f76:	9501      	str	r5, [sp, #4]
	config->high_when_disabled = false;
    1f78:	466b      	mov	r3, sp
    1f7a:	705c      	strb	r4, [r3, #1]
	config->source_clock       = GCLK_SOURCE_OSC8M;
    1f7c:	2306      	movs	r3, #6
    1f7e:	466a      	mov	r2, sp
    1f80:	7013      	strb	r3, [r2, #0]
	config->run_in_standby     = false;
    1f82:	7214      	strb	r4, [r2, #8]
	config->output_enable      = false;
    1f84:	7254      	strb	r4, [r2, #9]
	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBC, CONF_CLOCK_APBC_DIVIDER);

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
    1f86:	4669      	mov	r1, sp
    1f88:	2000      	movs	r0, #0
    1f8a:	47b8      	blx	r7
    1f8c:	2000      	movs	r0, #0
    1f8e:	47b0      	blx	r6
#endif
}
    1f90:	b009      	add	sp, #36	; 0x24
    1f92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1f94:	40000800 	.word	0x40000800
    1f98:	41004000 	.word	0x41004000
    1f9c:	000021f5 	.word	0x000021f5
    1fa0:	00001d6d 	.word	0x00001d6d
    1fa4:	00001e25 	.word	0x00001e25
    1fa8:	00001d31 	.word	0x00001d31
    1fac:	00001fbd 	.word	0x00001fbd
    1fb0:	00001fe1 	.word	0x00001fe1
    1fb4:	00002099 	.word	0x00002099
    1fb8:	40000400 	.word	0x40000400

00001fbc <system_gclk_init>:
			PM->APBAMASK.reg |= mask;
    1fbc:	4a06      	ldr	r2, [pc, #24]	; (1fd8 <system_gclk_init+0x1c>)
    1fbe:	6993      	ldr	r3, [r2, #24]
    1fc0:	2108      	movs	r1, #8
    1fc2:	430b      	orrs	r3, r1
    1fc4:	6193      	str	r3, [r2, #24]
{
	/* Turn on the digital interface clock */
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBA, PM_APBAMASK_GCLK);

	/* Software reset the module to ensure it is re-initialized correctly */
	GCLK->CTRL.reg = GCLK_CTRL_SWRST;
    1fc6:	2201      	movs	r2, #1
    1fc8:	4b04      	ldr	r3, [pc, #16]	; (1fdc <system_gclk_init+0x20>)
    1fca:	701a      	strb	r2, [r3, #0]
	while (GCLK->CTRL.reg & GCLK_CTRL_SWRST) {
    1fcc:	0019      	movs	r1, r3
    1fce:	780b      	ldrb	r3, [r1, #0]
    1fd0:	4213      	tst	r3, r2
    1fd2:	d1fc      	bne.n	1fce <system_gclk_init+0x12>
		/* Wait for reset to complete */
	}
}
    1fd4:	4770      	bx	lr
    1fd6:	46c0      	nop			; (mov r8, r8)
    1fd8:	40000400 	.word	0x40000400
    1fdc:	40000c00 	.word	0x40000c00

00001fe0 <system_gclk_gen_set_config>:
 * \param[in] config     Configuration settings for the generator
 */
void system_gclk_gen_set_config(
		const uint8_t generator,
		struct system_gclk_gen_config *const config)
{
    1fe0:	b570      	push	{r4, r5, r6, lr}
    1fe2:	0006      	movs	r6, r0
	/* Sanity check arguments */
	Assert(config);

	/* Cache new register configurations to minimize sync requirements. */
	uint32_t new_genctrl_config = (generator << GCLK_GENCTRL_ID_Pos);
    1fe4:	0004      	movs	r4, r0
	uint32_t new_gendiv_config  = (generator << GCLK_GENDIV_ID_Pos);

	/* Select the requested source clock for the generator */
	new_genctrl_config |= config->source_clock << GCLK_GENCTRL_SRC_Pos;
    1fe6:	780d      	ldrb	r5, [r1, #0]
    1fe8:	022d      	lsls	r5, r5, #8
    1fea:	4305      	orrs	r5, r0

	/* Configure the clock to be either high or low when disabled */
	if (config->high_when_disabled) {
    1fec:	784b      	ldrb	r3, [r1, #1]
    1fee:	2b00      	cmp	r3, #0
    1ff0:	d002      	beq.n	1ff8 <system_gclk_gen_set_config+0x18>
		new_genctrl_config |= GCLK_GENCTRL_OOV;
    1ff2:	2380      	movs	r3, #128	; 0x80
    1ff4:	02db      	lsls	r3, r3, #11
    1ff6:	431d      	orrs	r5, r3
	}

	/* Configure if the clock output to I/O pin should be enabled. */
	if (config->output_enable) {
    1ff8:	7a4b      	ldrb	r3, [r1, #9]
    1ffa:	2b00      	cmp	r3, #0
    1ffc:	d002      	beq.n	2004 <STACK_SIZE+0x4>
		new_genctrl_config |= GCLK_GENCTRL_OE;
    1ffe:	2380      	movs	r3, #128	; 0x80
    2000:	031b      	lsls	r3, r3, #12
    2002:	431d      	orrs	r5, r3
	}

	/* Set division factor */
	if (config->division_factor > 1) {
    2004:	6848      	ldr	r0, [r1, #4]
    2006:	2801      	cmp	r0, #1
    2008:	d910      	bls.n	202c <STACK_SIZE+0x2c>
		/* Check if division is a power of two */
		if (((config->division_factor & (config->division_factor - 1)) == 0)) {
    200a:	1e43      	subs	r3, r0, #1
    200c:	4218      	tst	r0, r3
    200e:	d134      	bne.n	207a <STACK_SIZE+0x7a>
			 * register */

			uint32_t div2_count = 0;

			uint32_t mask;
			for (mask = (1UL << 1); mask < config->division_factor;
    2010:	2802      	cmp	r0, #2
    2012:	d930      	bls.n	2076 <STACK_SIZE+0x76>
    2014:	2302      	movs	r3, #2
    2016:	2200      	movs	r2, #0
						mask <<= 1) {
				div2_count++;
    2018:	3201      	adds	r2, #1
						mask <<= 1) {
    201a:	005b      	lsls	r3, r3, #1
			for (mask = (1UL << 1); mask < config->division_factor;
    201c:	4298      	cmp	r0, r3
    201e:	d8fb      	bhi.n	2018 <STACK_SIZE+0x18>
			}

			/* Set binary divider power of 2 division factor */
			new_gendiv_config  |= div2_count << GCLK_GENDIV_DIV_Pos;
    2020:	0212      	lsls	r2, r2, #8
    2022:	4332      	orrs	r2, r6
    2024:	0014      	movs	r4, r2
			new_genctrl_config |= GCLK_GENCTRL_DIVSEL;
    2026:	2380      	movs	r3, #128	; 0x80
    2028:	035b      	lsls	r3, r3, #13
    202a:	431d      	orrs	r5, r3
		}

	}

	/* Enable or disable the clock in standby mode */
	if (config->run_in_standby) {
    202c:	7a0b      	ldrb	r3, [r1, #8]
    202e:	2b00      	cmp	r3, #0
    2030:	d002      	beq.n	2038 <STACK_SIZE+0x38>
		new_genctrl_config |= GCLK_GENCTRL_RUNSTDBY;
    2032:	2380      	movs	r3, #128	; 0x80
    2034:	039b      	lsls	r3, r3, #14
    2036:	431d      	orrs	r5, r3
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    2038:	4a13      	ldr	r2, [pc, #76]	; (2088 <STACK_SIZE+0x88>)
    203a:	7853      	ldrb	r3, [r2, #1]
	}

	while (system_gclk_is_syncing()) {
    203c:	b25b      	sxtb	r3, r3
    203e:	2b00      	cmp	r3, #0
    2040:	dbfb      	blt.n	203a <STACK_SIZE+0x3a>
	cpu_irq_enter_critical();
    2042:	4b12      	ldr	r3, [pc, #72]	; (208c <STACK_SIZE+0x8c>)
    2044:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the correct generator */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
    2046:	4b12      	ldr	r3, [pc, #72]	; (2090 <STACK_SIZE+0x90>)
    2048:	701e      	strb	r6, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    204a:	4a0f      	ldr	r2, [pc, #60]	; (2088 <STACK_SIZE+0x88>)
    204c:	7853      	ldrb	r3, [r2, #1]

	/* Write the new generator configuration */
	while (system_gclk_is_syncing()) {
    204e:	b25b      	sxtb	r3, r3
    2050:	2b00      	cmp	r3, #0
    2052:	dbfb      	blt.n	204c <STACK_SIZE+0x4c>
		/* Wait for synchronization */
	};
	GCLK->GENDIV.reg  = new_gendiv_config;
    2054:	4b0c      	ldr	r3, [pc, #48]	; (2088 <STACK_SIZE+0x88>)
    2056:	609c      	str	r4, [r3, #8]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    2058:	001a      	movs	r2, r3
    205a:	7853      	ldrb	r3, [r2, #1]

	while (system_gclk_is_syncing()) {
    205c:	b25b      	sxtb	r3, r3
    205e:	2b00      	cmp	r3, #0
    2060:	dbfb      	blt.n	205a <STACK_SIZE+0x5a>
		/* Wait for synchronization */
	};
	GCLK->GENCTRL.reg = new_genctrl_config | (GCLK->GENCTRL.reg & GCLK_GENCTRL_GENEN);
    2062:	4a09      	ldr	r2, [pc, #36]	; (2088 <STACK_SIZE+0x88>)
    2064:	6853      	ldr	r3, [r2, #4]
    2066:	2180      	movs	r1, #128	; 0x80
    2068:	0249      	lsls	r1, r1, #9
    206a:	400b      	ands	r3, r1
    206c:	431d      	orrs	r5, r3
    206e:	6055      	str	r5, [r2, #4]
	cpu_irq_leave_critical();
    2070:	4b08      	ldr	r3, [pc, #32]	; (2094 <STACK_SIZE+0x94>)
    2072:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    2074:	bd70      	pop	{r4, r5, r6, pc}
			for (mask = (1UL << 1); mask < config->division_factor;
    2076:	2200      	movs	r2, #0
    2078:	e7d2      	b.n	2020 <STACK_SIZE+0x20>
					(config->division_factor) << GCLK_GENDIV_DIV_Pos;
    207a:	0204      	lsls	r4, r0, #8
			new_gendiv_config  |=
    207c:	4334      	orrs	r4, r6
			new_genctrl_config |= GCLK_GENCTRL_IDC;
    207e:	2380      	movs	r3, #128	; 0x80
    2080:	029b      	lsls	r3, r3, #10
    2082:	431d      	orrs	r5, r3
    2084:	e7d2      	b.n	202c <STACK_SIZE+0x2c>
    2086:	46c0      	nop			; (mov r8, r8)
    2088:	40000c00 	.word	0x40000c00
    208c:	00001475 	.word	0x00001475
    2090:	40000c08 	.word	0x40000c08
    2094:	000014b5 	.word	0x000014b5

00002098 <system_gclk_gen_enable>:
 *
 * \param[in] generator  Generic Clock Generator index to enable
 */
void system_gclk_gen_enable(
		const uint8_t generator)
{
    2098:	b510      	push	{r4, lr}
    209a:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    209c:	4a0b      	ldr	r2, [pc, #44]	; (20cc <system_gclk_gen_enable+0x34>)
    209e:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    20a0:	b25b      	sxtb	r3, r3
    20a2:	2b00      	cmp	r3, #0
    20a4:	dbfb      	blt.n	209e <system_gclk_gen_enable+0x6>
	cpu_irq_enter_critical();
    20a6:	4b0a      	ldr	r3, [pc, #40]	; (20d0 <system_gclk_gen_enable+0x38>)
    20a8:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the requested generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    20aa:	4b0a      	ldr	r3, [pc, #40]	; (20d4 <system_gclk_gen_enable+0x3c>)
    20ac:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    20ae:	4a07      	ldr	r2, [pc, #28]	; (20cc <system_gclk_gen_enable+0x34>)
    20b0:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    20b2:	b25b      	sxtb	r3, r3
    20b4:	2b00      	cmp	r3, #0
    20b6:	dbfb      	blt.n	20b0 <system_gclk_gen_enable+0x18>
		/* Wait for synchronization */
	};

	/* Enable generator */
	GCLK->GENCTRL.reg |= GCLK_GENCTRL_GENEN;
    20b8:	4a04      	ldr	r2, [pc, #16]	; (20cc <system_gclk_gen_enable+0x34>)
    20ba:	6851      	ldr	r1, [r2, #4]
    20bc:	2380      	movs	r3, #128	; 0x80
    20be:	025b      	lsls	r3, r3, #9
    20c0:	430b      	orrs	r3, r1
    20c2:	6053      	str	r3, [r2, #4]
	cpu_irq_leave_critical();
    20c4:	4b04      	ldr	r3, [pc, #16]	; (20d8 <system_gclk_gen_enable+0x40>)
    20c6:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    20c8:	bd10      	pop	{r4, pc}
    20ca:	46c0      	nop			; (mov r8, r8)
    20cc:	40000c00 	.word	0x40000c00
    20d0:	00001475 	.word	0x00001475
    20d4:	40000c04 	.word	0x40000c04
    20d8:	000014b5 	.word	0x000014b5

000020dc <system_gclk_gen_get_hz>:
 *
 * \return The frequency of the generic clock generator, in Hz.
 */
uint32_t system_gclk_gen_get_hz(
		const uint8_t generator)
{
    20dc:	b570      	push	{r4, r5, r6, lr}
    20de:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    20e0:	4a1a      	ldr	r2, [pc, #104]	; (214c <system_gclk_gen_get_hz+0x70>)
    20e2:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    20e4:	b25b      	sxtb	r3, r3
    20e6:	2b00      	cmp	r3, #0
    20e8:	dbfb      	blt.n	20e2 <system_gclk_gen_get_hz+0x6>
	cpu_irq_enter_critical();
    20ea:	4b19      	ldr	r3, [pc, #100]	; (2150 <system_gclk_gen_get_hz+0x74>)
    20ec:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the appropriate generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    20ee:	4b19      	ldr	r3, [pc, #100]	; (2154 <system_gclk_gen_get_hz+0x78>)
    20f0:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    20f2:	4a16      	ldr	r2, [pc, #88]	; (214c <system_gclk_gen_get_hz+0x70>)
    20f4:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    20f6:	b25b      	sxtb	r3, r3
    20f8:	2b00      	cmp	r3, #0
    20fa:	dbfb      	blt.n	20f4 <system_gclk_gen_get_hz+0x18>
		/* Wait for synchronization */
	};

	/* Get the frequency of the source connected to the GCLK generator */
	uint32_t gen_input_hz = system_clock_source_get_hz(
			(enum system_clock_source)GCLK->GENCTRL.bit.SRC);
    20fc:	4e13      	ldr	r6, [pc, #76]	; (214c <system_gclk_gen_get_hz+0x70>)
    20fe:	6870      	ldr	r0, [r6, #4]
    2100:	04c0      	lsls	r0, r0, #19
    2102:	0ec0      	lsrs	r0, r0, #27
	uint32_t gen_input_hz = system_clock_source_get_hz(
    2104:	4b14      	ldr	r3, [pc, #80]	; (2158 <system_gclk_gen_get_hz+0x7c>)
    2106:	4798      	blx	r3
    2108:	0005      	movs	r5, r0

	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    210a:	4b12      	ldr	r3, [pc, #72]	; (2154 <system_gclk_gen_get_hz+0x78>)
    210c:	701c      	strb	r4, [r3, #0]

	uint8_t divsel = GCLK->GENCTRL.bit.DIVSEL;
    210e:	6876      	ldr	r6, [r6, #4]
    2110:	02f6      	lsls	r6, r6, #11
    2112:	0ff6      	lsrs	r6, r6, #31

	/* Select the appropriate generator division register */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
    2114:	4b11      	ldr	r3, [pc, #68]	; (215c <system_gclk_gen_get_hz+0x80>)
    2116:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    2118:	4a0c      	ldr	r2, [pc, #48]	; (214c <system_gclk_gen_get_hz+0x70>)
    211a:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    211c:	b25b      	sxtb	r3, r3
    211e:	2b00      	cmp	r3, #0
    2120:	dbfb      	blt.n	211a <system_gclk_gen_get_hz+0x3e>
		/* Wait for synchronization */
	};

	uint32_t divider = GCLK->GENDIV.bit.DIV;
    2122:	4b0a      	ldr	r3, [pc, #40]	; (214c <system_gclk_gen_get_hz+0x70>)
    2124:	689c      	ldr	r4, [r3, #8]
    2126:	0224      	lsls	r4, r4, #8
    2128:	0c24      	lsrs	r4, r4, #16
	cpu_irq_leave_critical();
    212a:	4b0d      	ldr	r3, [pc, #52]	; (2160 <system_gclk_gen_get_hz+0x84>)
    212c:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Check if the generator is using fractional or binary division */
	if (!divsel && divider > 1) {
    212e:	2e00      	cmp	r6, #0
    2130:	d107      	bne.n	2142 <system_gclk_gen_get_hz+0x66>
    2132:	2c01      	cmp	r4, #1
    2134:	d907      	bls.n	2146 <system_gclk_gen_get_hz+0x6a>
		gen_input_hz /= divider;
    2136:	0021      	movs	r1, r4
    2138:	0028      	movs	r0, r5
    213a:	4b0a      	ldr	r3, [pc, #40]	; (2164 <system_gclk_gen_get_hz+0x88>)
    213c:	4798      	blx	r3
    213e:	0005      	movs	r5, r0
    2140:	e001      	b.n	2146 <system_gclk_gen_get_hz+0x6a>
	} else if (divsel) {
		gen_input_hz >>= (divider+1);
    2142:	3401      	adds	r4, #1
    2144:	40e5      	lsrs	r5, r4
	}

	return gen_input_hz;
}
    2146:	0028      	movs	r0, r5
    2148:	bd70      	pop	{r4, r5, r6, pc}
    214a:	46c0      	nop			; (mov r8, r8)
    214c:	40000c00 	.word	0x40000c00
    2150:	00001475 	.word	0x00001475
    2154:	40000c04 	.word	0x40000c04
    2158:	00001c9d 	.word	0x00001c9d
    215c:	40000c08 	.word	0x40000c08
    2160:	000014b5 	.word	0x000014b5
    2164:	00002635 	.word	0x00002635

00002168 <system_gclk_chan_enable>:
 *
 * \param[in] channel   Generic Clock channel to enable
 */
void system_gclk_chan_enable(
		const uint8_t channel)
{
    2168:	b510      	push	{r4, lr}
    216a:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    216c:	4b06      	ldr	r3, [pc, #24]	; (2188 <system_gclk_chan_enable+0x20>)
    216e:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    2170:	4b06      	ldr	r3, [pc, #24]	; (218c <system_gclk_chan_enable+0x24>)
    2172:	701c      	strb	r4, [r3, #0]

	/* Enable the generic clock */
	GCLK->CLKCTRL.reg |= GCLK_CLKCTRL_CLKEN;
    2174:	4a06      	ldr	r2, [pc, #24]	; (2190 <system_gclk_chan_enable+0x28>)
    2176:	8853      	ldrh	r3, [r2, #2]
    2178:	2180      	movs	r1, #128	; 0x80
    217a:	01c9      	lsls	r1, r1, #7
    217c:	430b      	orrs	r3, r1
    217e:	8053      	strh	r3, [r2, #2]
	cpu_irq_leave_critical();
    2180:	4b04      	ldr	r3, [pc, #16]	; (2194 <system_gclk_chan_enable+0x2c>)
    2182:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    2184:	bd10      	pop	{r4, pc}
    2186:	46c0      	nop			; (mov r8, r8)
    2188:	00001475 	.word	0x00001475
    218c:	40000c02 	.word	0x40000c02
    2190:	40000c00 	.word	0x40000c00
    2194:	000014b5 	.word	0x000014b5

00002198 <system_gclk_chan_disable>:
 *
 * \param[in] channel  Generic Clock channel to disable
 */
void system_gclk_chan_disable(
		const uint8_t channel)
{
    2198:	b510      	push	{r4, lr}
    219a:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    219c:	4b0f      	ldr	r3, [pc, #60]	; (21dc <system_gclk_chan_disable+0x44>)
    219e:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    21a0:	4b0f      	ldr	r3, [pc, #60]	; (21e0 <system_gclk_chan_disable+0x48>)
    21a2:	701c      	strb	r4, [r3, #0]

	/* Sanity check WRTLOCK */
	Assert(!GCLK->CLKCTRL.bit.WRTLOCK);

	/* Switch to known-working source so that the channel can be disabled */
	uint32_t prev_gen_id = GCLK->CLKCTRL.bit.GEN;
    21a4:	4a0f      	ldr	r2, [pc, #60]	; (21e4 <system_gclk_chan_disable+0x4c>)
    21a6:	8853      	ldrh	r3, [r2, #2]
    21a8:	051b      	lsls	r3, r3, #20
    21aa:	0f18      	lsrs	r0, r3, #28
	GCLK->CLKCTRL.bit.GEN = 0;
    21ac:	8853      	ldrh	r3, [r2, #2]
    21ae:	490e      	ldr	r1, [pc, #56]	; (21e8 <system_gclk_chan_disable+0x50>)
    21b0:	400b      	ands	r3, r1
    21b2:	8053      	strh	r3, [r2, #2]

	/* Disable the generic clock */
	GCLK->CLKCTRL.reg &= ~GCLK_CLKCTRL_CLKEN;
    21b4:	8853      	ldrh	r3, [r2, #2]
    21b6:	490d      	ldr	r1, [pc, #52]	; (21ec <system_gclk_chan_disable+0x54>)
    21b8:	400b      	ands	r3, r1
    21ba:	8053      	strh	r3, [r2, #2]
	while (GCLK->CLKCTRL.reg & GCLK_CLKCTRL_CLKEN) {
    21bc:	0011      	movs	r1, r2
    21be:	2280      	movs	r2, #128	; 0x80
    21c0:	01d2      	lsls	r2, r2, #7
    21c2:	884b      	ldrh	r3, [r1, #2]
    21c4:	4213      	tst	r3, r2
    21c6:	d1fc      	bne.n	21c2 <system_gclk_chan_disable+0x2a>
		/* Wait for clock to become disabled */
	}

	/* Restore previous configured clock generator */
	GCLK->CLKCTRL.bit.GEN = prev_gen_id;
    21c8:	4906      	ldr	r1, [pc, #24]	; (21e4 <system_gclk_chan_disable+0x4c>)
    21ca:	884a      	ldrh	r2, [r1, #2]
    21cc:	0203      	lsls	r3, r0, #8
    21ce:	4806      	ldr	r0, [pc, #24]	; (21e8 <system_gclk_chan_disable+0x50>)
    21d0:	4002      	ands	r2, r0
    21d2:	4313      	orrs	r3, r2
    21d4:	804b      	strh	r3, [r1, #2]
	cpu_irq_leave_critical();
    21d6:	4b06      	ldr	r3, [pc, #24]	; (21f0 <system_gclk_chan_disable+0x58>)
    21d8:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    21da:	bd10      	pop	{r4, pc}
    21dc:	00001475 	.word	0x00001475
    21e0:	40000c02 	.word	0x40000c02
    21e4:	40000c00 	.word	0x40000c00
    21e8:	fffff0ff 	.word	0xfffff0ff
    21ec:	ffffbfff 	.word	0xffffbfff
    21f0:	000014b5 	.word	0x000014b5

000021f4 <system_gclk_chan_set_config>:
{
    21f4:	b510      	push	{r4, lr}
	new_clkctrl_config |= config->source_generator << GCLK_CLKCTRL_GEN_Pos;
    21f6:	780c      	ldrb	r4, [r1, #0]
    21f8:	0224      	lsls	r4, r4, #8
    21fa:	4304      	orrs	r4, r0
	system_gclk_chan_disable(channel);
    21fc:	4b02      	ldr	r3, [pc, #8]	; (2208 <system_gclk_chan_set_config+0x14>)
    21fe:	4798      	blx	r3
	GCLK->CLKCTRL.reg = new_clkctrl_config;
    2200:	b2a4      	uxth	r4, r4
    2202:	4b02      	ldr	r3, [pc, #8]	; (220c <system_gclk_chan_set_config+0x18>)
    2204:	805c      	strh	r4, [r3, #2]
}
    2206:	bd10      	pop	{r4, pc}
    2208:	00002199 	.word	0x00002199
    220c:	40000c00 	.word	0x40000c00

00002210 <system_gclk_chan_get_hz>:
 *
 * \return The frequency of the generic clock channel, in Hz.
 */
uint32_t system_gclk_chan_get_hz(
		const uint8_t channel)
{
    2210:	b510      	push	{r4, lr}
    2212:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    2214:	4b06      	ldr	r3, [pc, #24]	; (2230 <system_gclk_chan_get_hz+0x20>)
    2216:	4798      	blx	r3
	uint8_t gen_id;

	system_interrupt_enter_critical_section();

	/* Select the requested generic clock channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    2218:	4b06      	ldr	r3, [pc, #24]	; (2234 <system_gclk_chan_get_hz+0x24>)
    221a:	701c      	strb	r4, [r3, #0]
	gen_id = GCLK->CLKCTRL.bit.GEN;
    221c:	4b06      	ldr	r3, [pc, #24]	; (2238 <system_gclk_chan_get_hz+0x28>)
    221e:	885c      	ldrh	r4, [r3, #2]
    2220:	0524      	lsls	r4, r4, #20
    2222:	0f24      	lsrs	r4, r4, #28
	cpu_irq_leave_critical();
    2224:	4b05      	ldr	r3, [pc, #20]	; (223c <system_gclk_chan_get_hz+0x2c>)
    2226:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Return the clock speed of the associated GCLK generator */
	return system_gclk_gen_get_hz(gen_id);
    2228:	0020      	movs	r0, r4
    222a:	4b05      	ldr	r3, [pc, #20]	; (2240 <system_gclk_chan_get_hz+0x30>)
    222c:	4798      	blx	r3
}
    222e:	bd10      	pop	{r4, pc}
    2230:	00001475 	.word	0x00001475
    2234:	40000c02 	.word	0x40000c02
    2238:	40000c00 	.word	0x40000c00
    223c:	000014b5 	.word	0x000014b5
    2240:	000020dd 	.word	0x000020dd

00002244 <_system_pinmux_config>:
 */
static void _system_pinmux_config(
		PortGroup *const port,
		const uint32_t pin_mask,
		const struct system_pinmux_config *const config)
{
    2244:	b530      	push	{r4, r5, lr}

	/* Track the configuration bits into a temporary variable before writing */
	uint32_t pin_cfg = 0;

	/* Enabled powersave mode, don't create configuration */
	if (!config->powersave) {
    2246:	78d3      	ldrb	r3, [r2, #3]
    2248:	2b00      	cmp	r3, #0
    224a:	d135      	bne.n	22b8 <_system_pinmux_config+0x74>
		/* Enable the pin peripheral MUX flag if non-GPIO selected (pinmux will
		 * be written later) and store the new MUX mask */
		if (config->mux_position != SYSTEM_PINMUX_GPIO) {
    224c:	7813      	ldrb	r3, [r2, #0]
    224e:	2b80      	cmp	r3, #128	; 0x80
    2250:	d029      	beq.n	22a6 <_system_pinmux_config+0x62>
			pin_cfg |= PORT_WRCONFIG_PMUXEN;
			pin_cfg |= (config->mux_position << PORT_WRCONFIG_PMUX_Pos);
    2252:	061b      	lsls	r3, r3, #24
    2254:	2480      	movs	r4, #128	; 0x80
    2256:	0264      	lsls	r4, r4, #9
    2258:	4323      	orrs	r3, r4
		}

		/* Check if the user has requested that the input buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_INPUT) ||
    225a:	7854      	ldrb	r4, [r2, #1]
    225c:	2502      	movs	r5, #2
    225e:	43ac      	bics	r4, r5
    2260:	d106      	bne.n	2270 <_system_pinmux_config+0x2c>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Enable input buffer flag */
			pin_cfg |= PORT_WRCONFIG_INEN;

			/* Enable pull-up/pull-down control flag if requested */
			if (config->input_pull != SYSTEM_PINMUX_PIN_PULL_NONE) {
    2262:	7894      	ldrb	r4, [r2, #2]
    2264:	2c00      	cmp	r4, #0
    2266:	d120      	bne.n	22aa <_system_pinmux_config+0x66>
			pin_cfg |= PORT_WRCONFIG_INEN;
    2268:	2480      	movs	r4, #128	; 0x80
    226a:	02a4      	lsls	r4, r4, #10
    226c:	4323      	orrs	r3, r4
				pin_cfg |= PORT_WRCONFIG_PULLEN;
			}

			/* Clear the port DIR bits to disable the output buffer */
			port->DIRCLR.reg = pin_mask;
    226e:	6041      	str	r1, [r0, #4]
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    2270:	7854      	ldrb	r4, [r2, #1]
    2272:	3c01      	subs	r4, #1
    2274:	2c01      	cmp	r4, #1
    2276:	d91c      	bls.n	22b2 <_system_pinmux_config+0x6e>
		port->DIRCLR.reg = pin_mask;
	}

	/* The Write Configuration register (WRCONFIG) requires the
	 * pins to to grouped into two 16-bit half-words - split them out here */
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    2278:	040d      	lsls	r5, r1, #16
    227a:	0c2d      	lsrs	r5, r5, #16

	/* Configure the lower 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    227c:	24a0      	movs	r4, #160	; 0xa0
    227e:	05e4      	lsls	r4, r4, #23
    2280:	432c      	orrs	r4, r5
    2282:	431c      	orrs	r4, r3
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    2284:	6284      	str	r4, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    2286:	0c0d      	lsrs	r5, r1, #16

	/* Configure the upper 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    2288:	24d0      	movs	r4, #208	; 0xd0
    228a:	0624      	lsls	r4, r4, #24
    228c:	432c      	orrs	r4, r5
    228e:	431c      	orrs	r4, r3
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    2290:	6284      	str	r4, [r0, #40]	; 0x28
			PORT_WRCONFIG_HWSEL;

	if(!config->powersave) {
    2292:	78d4      	ldrb	r4, [r2, #3]
    2294:	2c00      	cmp	r4, #0
    2296:	d122      	bne.n	22de <_system_pinmux_config+0x9a>
		/* Set the pull-up state once the port pins are configured if one was
		 * requested and it does not violate the valid set of port
		 * configurations */
		if (pin_cfg & PORT_WRCONFIG_PULLEN) {
    2298:	035b      	lsls	r3, r3, #13
    229a:	d51c      	bpl.n	22d6 <_system_pinmux_config+0x92>
			/* Set the OUT register bits to enable the pull-up if requested,
			 * clear to enable pull-down */
			if (config->input_pull == SYSTEM_PINMUX_PIN_PULL_UP) {
    229c:	7893      	ldrb	r3, [r2, #2]
    229e:	2b01      	cmp	r3, #1
    22a0:	d01e      	beq.n	22e0 <_system_pinmux_config+0x9c>
				port->OUTSET.reg = pin_mask;
			} else {
				port->OUTCLR.reg = pin_mask;
    22a2:	6141      	str	r1, [r0, #20]
    22a4:	e017      	b.n	22d6 <_system_pinmux_config+0x92>
	uint32_t pin_cfg = 0;
    22a6:	2300      	movs	r3, #0
    22a8:	e7d7      	b.n	225a <_system_pinmux_config+0x16>
				pin_cfg |= PORT_WRCONFIG_PULLEN;
    22aa:	24c0      	movs	r4, #192	; 0xc0
    22ac:	02e4      	lsls	r4, r4, #11
    22ae:	4323      	orrs	r3, r4
    22b0:	e7dd      	b.n	226e <_system_pinmux_config+0x2a>
			pin_cfg &= ~PORT_WRCONFIG_PULLEN;
    22b2:	4c0d      	ldr	r4, [pc, #52]	; (22e8 <_system_pinmux_config+0xa4>)
    22b4:	4023      	ands	r3, r4
    22b6:	e7df      	b.n	2278 <_system_pinmux_config+0x34>
		port->DIRCLR.reg = pin_mask;
    22b8:	6041      	str	r1, [r0, #4]
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    22ba:	040c      	lsls	r4, r1, #16
    22bc:	0c24      	lsrs	r4, r4, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    22be:	23a0      	movs	r3, #160	; 0xa0
    22c0:	05db      	lsls	r3, r3, #23
    22c2:	4323      	orrs	r3, r4
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    22c4:	6283      	str	r3, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    22c6:	0c0c      	lsrs	r4, r1, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    22c8:	23d0      	movs	r3, #208	; 0xd0
    22ca:	061b      	lsls	r3, r3, #24
    22cc:	4323      	orrs	r3, r4
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    22ce:	6283      	str	r3, [r0, #40]	; 0x28
	if(!config->powersave) {
    22d0:	78d3      	ldrb	r3, [r2, #3]
    22d2:	2b00      	cmp	r3, #0
    22d4:	d103      	bne.n	22de <_system_pinmux_config+0x9a>
			}
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    22d6:	7853      	ldrb	r3, [r2, #1]
    22d8:	3b01      	subs	r3, #1
    22da:	2b01      	cmp	r3, #1
    22dc:	d902      	bls.n	22e4 <_system_pinmux_config+0xa0>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Set the port DIR bits to enable the output buffer */
			port->DIRSET.reg = pin_mask;
		}
	}
}
    22de:	bd30      	pop	{r4, r5, pc}
				port->OUTSET.reg = pin_mask;
    22e0:	6181      	str	r1, [r0, #24]
    22e2:	e7f8      	b.n	22d6 <_system_pinmux_config+0x92>
			port->DIRSET.reg = pin_mask;
    22e4:	6081      	str	r1, [r0, #8]
}
    22e6:	e7fa      	b.n	22de <_system_pinmux_config+0x9a>
    22e8:	fffbffff 	.word	0xfffbffff

000022ec <system_pinmux_pin_set_config>:
 * \param[in] config    Configuration settings for the pin
 */
void system_pinmux_pin_set_config(
		const uint8_t gpio_pin,
		const struct system_pinmux_config *const config)
{
    22ec:	b510      	push	{r4, lr}
    22ee:	000a      	movs	r2, r1
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
    22f0:	09c1      	lsrs	r1, r0, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
    22f2:	2300      	movs	r3, #0
	if (port_index < PORT_INST_NUM) {
    22f4:	2900      	cmp	r1, #0
    22f6:	d104      	bne.n	2302 <system_pinmux_pin_set_config+0x16>
		return &(ports[port_index]->Group[group_index]);
    22f8:	0943      	lsrs	r3, r0, #5
    22fa:	01db      	lsls	r3, r3, #7
    22fc:	4905      	ldr	r1, [pc, #20]	; (2314 <system_pinmux_pin_set_config+0x28>)
    22fe:	468c      	mov	ip, r1
    2300:	4463      	add	r3, ip
	PortGroup *const port = system_pinmux_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask = (1UL << (gpio_pin % 32));
    2302:	241f      	movs	r4, #31
    2304:	4020      	ands	r0, r4
    2306:	2101      	movs	r1, #1
    2308:	4081      	lsls	r1, r0

	_system_pinmux_config(port, pin_mask, config);
    230a:	0018      	movs	r0, r3
    230c:	4b02      	ldr	r3, [pc, #8]	; (2318 <system_pinmux_pin_set_config+0x2c>)
    230e:	4798      	blx	r3
}
    2310:	bd10      	pop	{r4, pc}
    2312:	46c0      	nop			; (mov r8, r8)
    2314:	41004400 	.word	0x41004400
    2318:	00002245 	.word	0x00002245

0000231c <_system_dummy_init>:
 */
void _system_dummy_init(void);
void _system_dummy_init(void)
{
	return;
}
    231c:	4770      	bx	lr
	...

00002320 <system_init>:
 *  - Board hardware initialization (via the Board module)
 *  - Event system driver initialization (via the EVSYS module)
 *  - External Interrupt driver initialization (via the EXTINT module)
 */
void system_init(void)
{
    2320:	b510      	push	{r4, lr}
	/* Configure GCLK and clock sources according to conf_clocks.h */
	system_clock_init();
    2322:	4b05      	ldr	r3, [pc, #20]	; (2338 <system_init+0x18>)
    2324:	4798      	blx	r3

	/* Initialize board hardware */
	system_board_init();
    2326:	4b05      	ldr	r3, [pc, #20]	; (233c <system_init+0x1c>)
    2328:	4798      	blx	r3

	/* Initialize EVSYS hardware */
	_system_events_init();
    232a:	4b05      	ldr	r3, [pc, #20]	; (2340 <system_init+0x20>)
    232c:	4798      	blx	r3

	/* Initialize External hardware */
	_system_extint_init();
    232e:	4b05      	ldr	r3, [pc, #20]	; (2344 <system_init+0x24>)
    2330:	4798      	blx	r3
	
	/* Initialize DIVAS hardware */
	_system_divas_init();
    2332:	4b05      	ldr	r3, [pc, #20]	; (2348 <system_init+0x28>)
    2334:	4798      	blx	r3
}
    2336:	bd10      	pop	{r4, pc}
    2338:	00001ecd 	.word	0x00001ecd
    233c:	000014e5 	.word	0x000014e5
    2340:	0000231d 	.word	0x0000231d
    2344:	0000231d 	.word	0x0000231d
    2348:	0000231d 	.word	0x0000231d

0000234c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    234c:	e7fe      	b.n	234c <Dummy_Handler>
	...

00002350 <Reset_Handler>:
{
    2350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
    2352:	4a2a      	ldr	r2, [pc, #168]	; (23fc <Reset_Handler+0xac>)
    2354:	4b2a      	ldr	r3, [pc, #168]	; (2400 <Reset_Handler+0xb0>)
    2356:	429a      	cmp	r2, r3
    2358:	d011      	beq.n	237e <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
    235a:	001a      	movs	r2, r3
    235c:	4b29      	ldr	r3, [pc, #164]	; (2404 <Reset_Handler+0xb4>)
    235e:	429a      	cmp	r2, r3
    2360:	d20d      	bcs.n	237e <Reset_Handler+0x2e>
    2362:	4a29      	ldr	r2, [pc, #164]	; (2408 <Reset_Handler+0xb8>)
    2364:	3303      	adds	r3, #3
    2366:	1a9b      	subs	r3, r3, r2
    2368:	089b      	lsrs	r3, r3, #2
    236a:	3301      	adds	r3, #1
    236c:	009b      	lsls	r3, r3, #2
    236e:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
    2370:	4823      	ldr	r0, [pc, #140]	; (2400 <Reset_Handler+0xb0>)
    2372:	4922      	ldr	r1, [pc, #136]	; (23fc <Reset_Handler+0xac>)
    2374:	588c      	ldr	r4, [r1, r2]
    2376:	5084      	str	r4, [r0, r2]
    2378:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
    237a:	429a      	cmp	r2, r3
    237c:	d1fa      	bne.n	2374 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
    237e:	4a23      	ldr	r2, [pc, #140]	; (240c <Reset_Handler+0xbc>)
    2380:	4b23      	ldr	r3, [pc, #140]	; (2410 <Reset_Handler+0xc0>)
    2382:	429a      	cmp	r2, r3
    2384:	d20a      	bcs.n	239c <Reset_Handler+0x4c>
    2386:	43d3      	mvns	r3, r2
    2388:	4921      	ldr	r1, [pc, #132]	; (2410 <Reset_Handler+0xc0>)
    238a:	185b      	adds	r3, r3, r1
    238c:	2103      	movs	r1, #3
    238e:	438b      	bics	r3, r1
    2390:	3304      	adds	r3, #4
    2392:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
    2394:	2100      	movs	r1, #0
    2396:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
    2398:	4293      	cmp	r3, r2
    239a:	d1fc      	bne.n	2396 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    239c:	4a1d      	ldr	r2, [pc, #116]	; (2414 <Reset_Handler+0xc4>)
    239e:	21ff      	movs	r1, #255	; 0xff
    23a0:	4b1d      	ldr	r3, [pc, #116]	; (2418 <Reset_Handler+0xc8>)
    23a2:	438b      	bics	r3, r1
    23a4:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
    23a6:	39fd      	subs	r1, #253	; 0xfd
    23a8:	2390      	movs	r3, #144	; 0x90
    23aa:	005b      	lsls	r3, r3, #1
    23ac:	4a1b      	ldr	r2, [pc, #108]	; (241c <Reset_Handler+0xcc>)
    23ae:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
    23b0:	4a1b      	ldr	r2, [pc, #108]	; (2420 <Reset_Handler+0xd0>)
    23b2:	78d3      	ldrb	r3, [r2, #3]
    23b4:	2503      	movs	r5, #3
    23b6:	43ab      	bics	r3, r5
    23b8:	2402      	movs	r4, #2
    23ba:	4323      	orrs	r3, r4
    23bc:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
    23be:	78d3      	ldrb	r3, [r2, #3]
    23c0:	270c      	movs	r7, #12
    23c2:	43bb      	bics	r3, r7
    23c4:	2608      	movs	r6, #8
    23c6:	4333      	orrs	r3, r6
    23c8:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
    23ca:	4b16      	ldr	r3, [pc, #88]	; (2424 <Reset_Handler+0xd4>)
    23cc:	7b98      	ldrb	r0, [r3, #14]
    23ce:	2230      	movs	r2, #48	; 0x30
    23d0:	4390      	bics	r0, r2
    23d2:	2220      	movs	r2, #32
    23d4:	4310      	orrs	r0, r2
    23d6:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
    23d8:	7b99      	ldrb	r1, [r3, #14]
    23da:	43b9      	bics	r1, r7
    23dc:	4331      	orrs	r1, r6
    23de:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
    23e0:	7b9a      	ldrb	r2, [r3, #14]
    23e2:	43aa      	bics	r2, r5
    23e4:	4322      	orrs	r2, r4
    23e6:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
    23e8:	4a0f      	ldr	r2, [pc, #60]	; (2428 <Reset_Handler+0xd8>)
    23ea:	6853      	ldr	r3, [r2, #4]
    23ec:	2180      	movs	r1, #128	; 0x80
    23ee:	430b      	orrs	r3, r1
    23f0:	6053      	str	r3, [r2, #4]
        __libc_init_array();
    23f2:	4b0e      	ldr	r3, [pc, #56]	; (242c <Reset_Handler+0xdc>)
    23f4:	4798      	blx	r3
        main();
    23f6:	4b0e      	ldr	r3, [pc, #56]	; (2430 <Reset_Handler+0xe0>)
    23f8:	4798      	blx	r3
    23fa:	e7fe      	b.n	23fa <Reset_Handler+0xaa>
    23fc:	00008d54 	.word	0x00008d54
    2400:	20000000 	.word	0x20000000
    2404:	200009c0 	.word	0x200009c0
    2408:	20000004 	.word	0x20000004
    240c:	200009c0 	.word	0x200009c0
    2410:	20000f68 	.word	0x20000f68
    2414:	e000ed00 	.word	0xe000ed00
    2418:	00000000 	.word	0x00000000
    241c:	41007000 	.word	0x41007000
    2420:	41005000 	.word	0x41005000
    2424:	41004800 	.word	0x41004800
    2428:	41004000 	.word	0x41004000
    242c:	00004069 	.word	0x00004069
    2430:	00002459 	.word	0x00002459

00002434 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
    2434:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
    2436:	4a06      	ldr	r2, [pc, #24]	; (2450 <_sbrk+0x1c>)
    2438:	6812      	ldr	r2, [r2, #0]
    243a:	2a00      	cmp	r2, #0
    243c:	d004      	beq.n	2448 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    243e:	4a04      	ldr	r2, [pc, #16]	; (2450 <_sbrk+0x1c>)
    2440:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    2442:	18c3      	adds	r3, r0, r3
    2444:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
    2446:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    2448:	4902      	ldr	r1, [pc, #8]	; (2454 <_sbrk+0x20>)
    244a:	4a01      	ldr	r2, [pc, #4]	; (2450 <_sbrk+0x1c>)
    244c:	6011      	str	r1, [r2, #0]
    244e:	e7f6      	b.n	243e <_sbrk+0xa>
    2450:	20000b3c 	.word	0x20000b3c
    2454:	20002f68 	.word	0x20002f68

00002458 <main>:
static void program_application_memory(void);
_Bool bShouldFlashNewFirmware = false;


int main (void)
{
    2458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    245a:	46ce      	mov	lr, r9
    245c:	4647      	mov	r7, r8
    245e:	b580      	push	{r7, lr}
	system_init();
    2460:	4b5a      	ldr	r3, [pc, #360]	; (25cc <main+0x174>)
    2462:	4798      	blx	r3
	pusart_init();
    2464:	4b5a      	ldr	r3, [pc, #360]	; (25d0 <main+0x178>)
    2466:	4798      	blx	r3
	i2c_master_bus_init();
    2468:	4b5a      	ldr	r3, [pc, #360]	; (25d4 <main+0x17c>)
    246a:	4798      	blx	r3
	br24_init();
    246c:	4b5a      	ldr	r3, [pc, #360]	; (25d8 <main+0x180>)
    246e:	4798      	blx	r3
	}
}

void configure_eeprom(void)
{
	enum status_code ret = eeprom_emulator_init();
    2470:	4b5a      	ldr	r3, [pc, #360]	; (25dc <main+0x184>)
    2472:	4798      	blx	r3
	
	if(ret == STATUS_ERR_NO_MEMORY)
    2474:	2816      	cmp	r0, #22
    2476:	d062      	beq.n	253e <main+0xe6>
	{
		DEBUG("No memory set... Dummying\n");
	}
	else if(ret != STATUS_OK)
    2478:	2800      	cmp	r0, #0
    247a:	d165      	bne.n	2548 <main+0xf0>
	//get file size from first 8 bytes
	u64_u8 size_of_firmware;
	u64_u8 test_ret;
	test_ret.value = 0;
	size_of_firmware.value = 4727;
	br24.addr = 0x50;
    247c:	4c58      	ldr	r4, [pc, #352]	; (25e0 <main+0x188>)
    247e:	2350      	movs	r3, #80	; 0x50
    2480:	7023      	strb	r3, [r4, #0]
	br24.buffer[0] = 0x0;
    2482:	2500      	movs	r5, #0
    2484:	6863      	ldr	r3, [r4, #4]
    2486:	701d      	strb	r5, [r3, #0]
	br24.buffer[1] = 0x0;
    2488:	6863      	ldr	r3, [r4, #4]
    248a:	705d      	strb	r5, [r3, #1]
	memcpy(&br24.buffer[2], size_of_firmware.data, 8);
    248c:	6862      	ldr	r2, [r4, #4]
    248e:	1c93      	adds	r3, r2, #2
    2490:	2177      	movs	r1, #119	; 0x77
    2492:	7091      	strb	r1, [r2, #2]
    2494:	2212      	movs	r2, #18
    2496:	705a      	strb	r2, [r3, #1]
    2498:	2200      	movs	r2, #0
    249a:	709a      	strb	r2, [r3, #2]
    249c:	70da      	strb	r2, [r3, #3]
    249e:	711a      	strb	r2, [r3, #4]
    24a0:	715a      	strb	r2, [r3, #5]
    24a2:	719a      	strb	r2, [r3, #6]
    24a4:	71da      	strb	r2, [r3, #7]
	i2c_write_bytes(&br24, 10, true);
    24a6:	3201      	adds	r2, #1
    24a8:	396d      	subs	r1, #109	; 0x6d
    24aa:	0020      	movs	r0, r4
    24ac:	4e4d      	ldr	r6, [pc, #308]	; (25e4 <main+0x18c>)
    24ae:	47b0      	blx	r6
	
	br24.buffer[0] = 0x0;
    24b0:	6863      	ldr	r3, [r4, #4]
    24b2:	701d      	strb	r5, [r3, #0]
	br24.buffer[1] = 0x0;
    24b4:	6863      	ldr	r3, [r4, #4]
    24b6:	705d      	strb	r5, [r3, #1]
	i2c_write_bytes(&br24, 2, false);
    24b8:	2200      	movs	r2, #0
    24ba:	2102      	movs	r1, #2
    24bc:	0020      	movs	r0, r4
    24be:	47b0      	blx	r6
	br24.addr = 0x51;
    24c0:	2351      	movs	r3, #81	; 0x51
    24c2:	7023      	strb	r3, [r4, #0]
	i2c_read(&br24, 8, true);
    24c4:	2201      	movs	r2, #1
    24c6:	2108      	movs	r1, #8
    24c8:	0020      	movs	r0, r4
    24ca:	4b47      	ldr	r3, [pc, #284]	; (25e8 <main+0x190>)
    24cc:	4798      	blx	r3
	memcpy(test_ret.data, br24.buffer, 8);
    24ce:	6861      	ldr	r1, [r4, #4]
    24d0:	780a      	ldrb	r2, [r1, #0]
    24d2:	784b      	ldrb	r3, [r1, #1]
    24d4:	021b      	lsls	r3, r3, #8
    24d6:	4313      	orrs	r3, r2
    24d8:	788a      	ldrb	r2, [r1, #2]
    24da:	0412      	lsls	r2, r2, #16
    24dc:	4313      	orrs	r3, r2
    24de:	78ca      	ldrb	r2, [r1, #3]
    24e0:	0612      	lsls	r2, r2, #24
    24e2:	431a      	orrs	r2, r3
    24e4:	790b      	ldrb	r3, [r1, #4]
    24e6:	7948      	ldrb	r0, [r1, #5]
    24e8:	0200      	lsls	r0, r0, #8
    24ea:	4318      	orrs	r0, r3
    24ec:	798b      	ldrb	r3, [r1, #6]
    24ee:	041b      	lsls	r3, r3, #16
    24f0:	4318      	orrs	r0, r3
    24f2:	79cb      	ldrb	r3, [r1, #7]
    24f4:	061b      	lsls	r3, r3, #24
    24f6:	4303      	orrs	r3, r0
	DEBUG("%llu\n", test_ret.value);
    24f8:	4d3c      	ldr	r5, [pc, #240]	; (25ec <main+0x194>)
    24fa:	493d      	ldr	r1, [pc, #244]	; (25f0 <main+0x198>)
    24fc:	0028      	movs	r0, r5
    24fe:	4c3d      	ldr	r4, [pc, #244]	; (25f4 <main+0x19c>)
    2500:	47a0      	blx	r4
	eeprom_emulator_read_page(0, page_data_buffer);
    2502:	493d      	ldr	r1, [pc, #244]	; (25f8 <main+0x1a0>)
    2504:	2000      	movs	r0, #0
    2506:	4b3d      	ldr	r3, [pc, #244]	; (25fc <main+0x1a4>)
    2508:	4798      	blx	r3
	DEBUG("%4s", " ");
    250a:	4a3d      	ldr	r2, [pc, #244]	; (2600 <main+0x1a8>)
    250c:	493d      	ldr	r1, [pc, #244]	; (2604 <main+0x1ac>)
    250e:	0028      	movs	r0, r5
    2510:	47a0      	blx	r4
    2512:	4c3d      	ldr	r4, [pc, #244]	; (2608 <main+0x1b0>)
    2514:	2310      	movs	r3, #16
    2516:	4698      	mov	r8, r3
    2518:	44a0      	add	r8, r4
		DEBUG("0%c ", gridChars[ind]);
    251a:	4f3c      	ldr	r7, [pc, #240]	; (260c <main+0x1b4>)
    251c:	4e33      	ldr	r6, [pc, #204]	; (25ec <main+0x194>)
    251e:	4d35      	ldr	r5, [pc, #212]	; (25f4 <main+0x19c>)
    2520:	7822      	ldrb	r2, [r4, #0]
    2522:	0039      	movs	r1, r7
    2524:	0030      	movs	r0, r6
    2526:	47a8      	blx	r5
    2528:	3401      	adds	r4, #1
	for(int ind = 0; ind < 16; ind++)
    252a:	4544      	cmp	r4, r8
    252c:	d1f8      	bne.n	2520 <main+0xc8>
	DEBUG("\n");
    252e:	4938      	ldr	r1, [pc, #224]	; (2610 <main+0x1b8>)
    2530:	482e      	ldr	r0, [pc, #184]	; (25ec <main+0x194>)
    2532:	4b30      	ldr	r3, [pc, #192]	; (25f4 <main+0x19c>)
    2534:	4798      	blx	r3
	for(int row = 0; row < 4; row++)
    2536:	2300      	movs	r3, #0
    2538:	4699      	mov	r9, r3
	int tempctr = 0;
    253a:	2600      	movs	r6, #0
    253c:	e00a      	b.n	2554 <main+0xfc>
		DEBUG("No memory set... Dummying\n");
    253e:	4935      	ldr	r1, [pc, #212]	; (2614 <main+0x1bc>)
    2540:	482a      	ldr	r0, [pc, #168]	; (25ec <main+0x194>)
    2542:	4b2c      	ldr	r3, [pc, #176]	; (25f4 <main+0x19c>)
    2544:	4798      	blx	r3
    2546:	e799      	b.n	247c <main+0x24>
		eeprom_emulator_erase_memory();
    2548:	4b33      	ldr	r3, [pc, #204]	; (2618 <main+0x1c0>)
    254a:	4798      	blx	r3
		eeprom_emulator_init();
    254c:	4b23      	ldr	r3, [pc, #140]	; (25dc <main+0x184>)
    254e:	4798      	blx	r3
    2550:	e794      	b.n	247c <main+0x24>
			DEBUG("%2x ", page_data_buffer[tempctr++]);
    2552:	002e      	movs	r6, r5
		if(row == 0)
    2554:	464b      	mov	r3, r9
    2556:	2b00      	cmp	r3, #0
    2558:	d02a      	beq.n	25b0 <main+0x158>
			DEBUG("0%c: ", gridChars[row]);
    255a:	4b2b      	ldr	r3, [pc, #172]	; (2608 <main+0x1b0>)
    255c:	464a      	mov	r2, r9
    255e:	5cd2      	ldrb	r2, [r2, r3]
    2560:	492e      	ldr	r1, [pc, #184]	; (261c <main+0x1c4>)
    2562:	4822      	ldr	r0, [pc, #136]	; (25ec <main+0x194>)
    2564:	4b23      	ldr	r3, [pc, #140]	; (25f4 <main+0x19c>)
    2566:	4798      	blx	r3
		int col = 0;
    2568:	2300      	movs	r3, #0
	int tempctr = 0;
    256a:	001c      	movs	r4, r3
    256c:	0035      	movs	r5, r6
			DEBUG("%2x ", page_data_buffer[tempctr++]);
    256e:	1af6      	subs	r6, r6, r3
    2570:	4b21      	ldr	r3, [pc, #132]	; (25f8 <main+0x1a0>)
    2572:	18f6      	adds	r6, r6, r3
    2574:	4f2a      	ldr	r7, [pc, #168]	; (2620 <main+0x1c8>)
    2576:	3501      	adds	r5, #1
    2578:	5d32      	ldrb	r2, [r6, r4]
    257a:	0039      	movs	r1, r7
    257c:	481b      	ldr	r0, [pc, #108]	; (25ec <main+0x194>)
    257e:	4b1d      	ldr	r3, [pc, #116]	; (25f4 <main+0x19c>)
    2580:	4798      	blx	r3
		for(; col < 16; col++)
    2582:	3401      	adds	r4, #1
    2584:	2c0f      	cmp	r4, #15
    2586:	ddf6      	ble.n	2576 <main+0x11e>
		DEBUG("\n");
    2588:	4921      	ldr	r1, [pc, #132]	; (2610 <main+0x1b8>)
    258a:	4818      	ldr	r0, [pc, #96]	; (25ec <main+0x194>)
    258c:	4b19      	ldr	r3, [pc, #100]	; (25f4 <main+0x19c>)
    258e:	4798      	blx	r3
	for(int row = 0; row < 4; row++)
    2590:	2301      	movs	r3, #1
    2592:	469c      	mov	ip, r3
    2594:	44e1      	add	r9, ip
    2596:	464b      	mov	r3, r9
    2598:	2b04      	cmp	r3, #4
    259a:	d1da      	bne.n	2552 <main+0xfa>
	page_data_buffer[0] = bShouldFlashNewFirmware;
    259c:	4916      	ldr	r1, [pc, #88]	; (25f8 <main+0x1a0>)
    259e:	4b21      	ldr	r3, [pc, #132]	; (2624 <main+0x1cc>)
    25a0:	781b      	ldrb	r3, [r3, #0]
    25a2:	700b      	strb	r3, [r1, #0]
	eeprom_emulator_write_page(0, page_data_buffer);
    25a4:	2000      	movs	r0, #0
    25a6:	4b20      	ldr	r3, [pc, #128]	; (2628 <main+0x1d0>)
    25a8:	4798      	blx	r3
	eeprom_emulator_commit_page_buffer();
    25aa:	4b20      	ldr	r3, [pc, #128]	; (262c <main+0x1d4>)
    25ac:	4798      	blx	r3
    25ae:	e7fe      	b.n	25ae <main+0x156>
			DEBUG("0%c: ", gridChars[row]);
    25b0:	4b15      	ldr	r3, [pc, #84]	; (2608 <main+0x1b0>)
    25b2:	781a      	ldrb	r2, [r3, #0]
    25b4:	4d0d      	ldr	r5, [pc, #52]	; (25ec <main+0x194>)
    25b6:	4919      	ldr	r1, [pc, #100]	; (261c <main+0x1c4>)
    25b8:	0028      	movs	r0, r5
    25ba:	4c0e      	ldr	r4, [pc, #56]	; (25f4 <main+0x19c>)
    25bc:	47a0      	blx	r4
			DEBUG("%12s", " ");
    25be:	4a10      	ldr	r2, [pc, #64]	; (2600 <main+0x1a8>)
    25c0:	491b      	ldr	r1, [pc, #108]	; (2630 <main+0x1d8>)
    25c2:	0028      	movs	r0, r5
    25c4:	47a0      	blx	r4
			col = 4;
    25c6:	2304      	movs	r3, #4
    25c8:	e7cf      	b.n	256a <main+0x112>
    25ca:	46c0      	nop			; (mov r8, r8)
    25cc:	00002321 	.word	0x00002321
    25d0:	000013c9 	.word	0x000013c9
    25d4:	00000d01 	.word	0x00000d01
    25d8:	00000aed 	.word	0x00000aed
    25dc:	00000f81 	.word	0x00000f81
    25e0:	20000bd0 	.word	0x20000bd0
    25e4:	00000bed 	.word	0x00000bed
    25e8:	00000c91 	.word	0x00000c91
    25ec:	20000cdc 	.word	0x20000cdc
    25f0:	0000889c 	.word	0x0000889c
    25f4:	00001371 	.word	0x00001371
    25f8:	20000f04 	.word	0x20000f04
    25fc:	00001145 	.word	0x00001145
    2600:	000088ac 	.word	0x000088ac
    2604:	000088a4 	.word	0x000088a4
    2608:	20000004 	.word	0x20000004
    260c:	000087d8 	.word	0x000087d8
    2610:	000088a0 	.word	0x000088a0
    2614:	00008880 	.word	0x00008880
    2618:	00001065 	.word	0x00001065
    261c:	000088a8 	.word	0x000088a8
    2620:	000087e8 	.word	0x000087e8
    2624:	20000b40 	.word	0x20000b40
    2628:	000011dd 	.word	0x000011dd
    262c:	000011ad 	.word	0x000011ad
    2630:	000088b0 	.word	0x000088b0

00002634 <__udivsi3>:
    2634:	2200      	movs	r2, #0
    2636:	0843      	lsrs	r3, r0, #1
    2638:	428b      	cmp	r3, r1
    263a:	d374      	bcc.n	2726 <__udivsi3+0xf2>
    263c:	0903      	lsrs	r3, r0, #4
    263e:	428b      	cmp	r3, r1
    2640:	d35f      	bcc.n	2702 <__udivsi3+0xce>
    2642:	0a03      	lsrs	r3, r0, #8
    2644:	428b      	cmp	r3, r1
    2646:	d344      	bcc.n	26d2 <__udivsi3+0x9e>
    2648:	0b03      	lsrs	r3, r0, #12
    264a:	428b      	cmp	r3, r1
    264c:	d328      	bcc.n	26a0 <__udivsi3+0x6c>
    264e:	0c03      	lsrs	r3, r0, #16
    2650:	428b      	cmp	r3, r1
    2652:	d30d      	bcc.n	2670 <__udivsi3+0x3c>
    2654:	22ff      	movs	r2, #255	; 0xff
    2656:	0209      	lsls	r1, r1, #8
    2658:	ba12      	rev	r2, r2
    265a:	0c03      	lsrs	r3, r0, #16
    265c:	428b      	cmp	r3, r1
    265e:	d302      	bcc.n	2666 <__udivsi3+0x32>
    2660:	1212      	asrs	r2, r2, #8
    2662:	0209      	lsls	r1, r1, #8
    2664:	d065      	beq.n	2732 <__udivsi3+0xfe>
    2666:	0b03      	lsrs	r3, r0, #12
    2668:	428b      	cmp	r3, r1
    266a:	d319      	bcc.n	26a0 <__udivsi3+0x6c>
    266c:	e000      	b.n	2670 <__udivsi3+0x3c>
    266e:	0a09      	lsrs	r1, r1, #8
    2670:	0bc3      	lsrs	r3, r0, #15
    2672:	428b      	cmp	r3, r1
    2674:	d301      	bcc.n	267a <__udivsi3+0x46>
    2676:	03cb      	lsls	r3, r1, #15
    2678:	1ac0      	subs	r0, r0, r3
    267a:	4152      	adcs	r2, r2
    267c:	0b83      	lsrs	r3, r0, #14
    267e:	428b      	cmp	r3, r1
    2680:	d301      	bcc.n	2686 <__udivsi3+0x52>
    2682:	038b      	lsls	r3, r1, #14
    2684:	1ac0      	subs	r0, r0, r3
    2686:	4152      	adcs	r2, r2
    2688:	0b43      	lsrs	r3, r0, #13
    268a:	428b      	cmp	r3, r1
    268c:	d301      	bcc.n	2692 <__udivsi3+0x5e>
    268e:	034b      	lsls	r3, r1, #13
    2690:	1ac0      	subs	r0, r0, r3
    2692:	4152      	adcs	r2, r2
    2694:	0b03      	lsrs	r3, r0, #12
    2696:	428b      	cmp	r3, r1
    2698:	d301      	bcc.n	269e <__udivsi3+0x6a>
    269a:	030b      	lsls	r3, r1, #12
    269c:	1ac0      	subs	r0, r0, r3
    269e:	4152      	adcs	r2, r2
    26a0:	0ac3      	lsrs	r3, r0, #11
    26a2:	428b      	cmp	r3, r1
    26a4:	d301      	bcc.n	26aa <__udivsi3+0x76>
    26a6:	02cb      	lsls	r3, r1, #11
    26a8:	1ac0      	subs	r0, r0, r3
    26aa:	4152      	adcs	r2, r2
    26ac:	0a83      	lsrs	r3, r0, #10
    26ae:	428b      	cmp	r3, r1
    26b0:	d301      	bcc.n	26b6 <__udivsi3+0x82>
    26b2:	028b      	lsls	r3, r1, #10
    26b4:	1ac0      	subs	r0, r0, r3
    26b6:	4152      	adcs	r2, r2
    26b8:	0a43      	lsrs	r3, r0, #9
    26ba:	428b      	cmp	r3, r1
    26bc:	d301      	bcc.n	26c2 <__udivsi3+0x8e>
    26be:	024b      	lsls	r3, r1, #9
    26c0:	1ac0      	subs	r0, r0, r3
    26c2:	4152      	adcs	r2, r2
    26c4:	0a03      	lsrs	r3, r0, #8
    26c6:	428b      	cmp	r3, r1
    26c8:	d301      	bcc.n	26ce <__udivsi3+0x9a>
    26ca:	020b      	lsls	r3, r1, #8
    26cc:	1ac0      	subs	r0, r0, r3
    26ce:	4152      	adcs	r2, r2
    26d0:	d2cd      	bcs.n	266e <__udivsi3+0x3a>
    26d2:	09c3      	lsrs	r3, r0, #7
    26d4:	428b      	cmp	r3, r1
    26d6:	d301      	bcc.n	26dc <__udivsi3+0xa8>
    26d8:	01cb      	lsls	r3, r1, #7
    26da:	1ac0      	subs	r0, r0, r3
    26dc:	4152      	adcs	r2, r2
    26de:	0983      	lsrs	r3, r0, #6
    26e0:	428b      	cmp	r3, r1
    26e2:	d301      	bcc.n	26e8 <__udivsi3+0xb4>
    26e4:	018b      	lsls	r3, r1, #6
    26e6:	1ac0      	subs	r0, r0, r3
    26e8:	4152      	adcs	r2, r2
    26ea:	0943      	lsrs	r3, r0, #5
    26ec:	428b      	cmp	r3, r1
    26ee:	d301      	bcc.n	26f4 <__udivsi3+0xc0>
    26f0:	014b      	lsls	r3, r1, #5
    26f2:	1ac0      	subs	r0, r0, r3
    26f4:	4152      	adcs	r2, r2
    26f6:	0903      	lsrs	r3, r0, #4
    26f8:	428b      	cmp	r3, r1
    26fa:	d301      	bcc.n	2700 <__udivsi3+0xcc>
    26fc:	010b      	lsls	r3, r1, #4
    26fe:	1ac0      	subs	r0, r0, r3
    2700:	4152      	adcs	r2, r2
    2702:	08c3      	lsrs	r3, r0, #3
    2704:	428b      	cmp	r3, r1
    2706:	d301      	bcc.n	270c <__udivsi3+0xd8>
    2708:	00cb      	lsls	r3, r1, #3
    270a:	1ac0      	subs	r0, r0, r3
    270c:	4152      	adcs	r2, r2
    270e:	0883      	lsrs	r3, r0, #2
    2710:	428b      	cmp	r3, r1
    2712:	d301      	bcc.n	2718 <__udivsi3+0xe4>
    2714:	008b      	lsls	r3, r1, #2
    2716:	1ac0      	subs	r0, r0, r3
    2718:	4152      	adcs	r2, r2
    271a:	0843      	lsrs	r3, r0, #1
    271c:	428b      	cmp	r3, r1
    271e:	d301      	bcc.n	2724 <__udivsi3+0xf0>
    2720:	004b      	lsls	r3, r1, #1
    2722:	1ac0      	subs	r0, r0, r3
    2724:	4152      	adcs	r2, r2
    2726:	1a41      	subs	r1, r0, r1
    2728:	d200      	bcs.n	272c <__udivsi3+0xf8>
    272a:	4601      	mov	r1, r0
    272c:	4152      	adcs	r2, r2
    272e:	4610      	mov	r0, r2
    2730:	4770      	bx	lr
    2732:	e7ff      	b.n	2734 <__udivsi3+0x100>
    2734:	b501      	push	{r0, lr}
    2736:	2000      	movs	r0, #0
    2738:	f000 f806 	bl	2748 <__aeabi_idiv0>
    273c:	bd02      	pop	{r1, pc}
    273e:	46c0      	nop			; (mov r8, r8)

00002740 <__aeabi_uidivmod>:
    2740:	2900      	cmp	r1, #0
    2742:	d0f7      	beq.n	2734 <__udivsi3+0x100>
    2744:	e776      	b.n	2634 <__udivsi3>
    2746:	4770      	bx	lr

00002748 <__aeabi_idiv0>:
    2748:	4770      	bx	lr
    274a:	46c0      	nop			; (mov r8, r8)

0000274c <__aeabi_lmul>:
    274c:	b5f0      	push	{r4, r5, r6, r7, lr}
    274e:	46ce      	mov	lr, r9
    2750:	4647      	mov	r7, r8
    2752:	0415      	lsls	r5, r2, #16
    2754:	0c2d      	lsrs	r5, r5, #16
    2756:	002e      	movs	r6, r5
    2758:	b580      	push	{r7, lr}
    275a:	0407      	lsls	r7, r0, #16
    275c:	0c14      	lsrs	r4, r2, #16
    275e:	0c3f      	lsrs	r7, r7, #16
    2760:	4699      	mov	r9, r3
    2762:	0c03      	lsrs	r3, r0, #16
    2764:	437e      	muls	r6, r7
    2766:	435d      	muls	r5, r3
    2768:	4367      	muls	r7, r4
    276a:	4363      	muls	r3, r4
    276c:	197f      	adds	r7, r7, r5
    276e:	0c34      	lsrs	r4, r6, #16
    2770:	19e4      	adds	r4, r4, r7
    2772:	469c      	mov	ip, r3
    2774:	42a5      	cmp	r5, r4
    2776:	d903      	bls.n	2780 <__aeabi_lmul+0x34>
    2778:	2380      	movs	r3, #128	; 0x80
    277a:	025b      	lsls	r3, r3, #9
    277c:	4698      	mov	r8, r3
    277e:	44c4      	add	ip, r8
    2780:	464b      	mov	r3, r9
    2782:	4351      	muls	r1, r2
    2784:	4343      	muls	r3, r0
    2786:	0436      	lsls	r6, r6, #16
    2788:	0c36      	lsrs	r6, r6, #16
    278a:	0c25      	lsrs	r5, r4, #16
    278c:	0424      	lsls	r4, r4, #16
    278e:	4465      	add	r5, ip
    2790:	19a4      	adds	r4, r4, r6
    2792:	1859      	adds	r1, r3, r1
    2794:	1949      	adds	r1, r1, r5
    2796:	0020      	movs	r0, r4
    2798:	bc0c      	pop	{r2, r3}
    279a:	4690      	mov	r8, r2
    279c:	4699      	mov	r9, r3
    279e:	bdf0      	pop	{r4, r5, r6, r7, pc}

000027a0 <__aeabi_dadd>:
    27a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    27a2:	4645      	mov	r5, r8
    27a4:	46de      	mov	lr, fp
    27a6:	4657      	mov	r7, sl
    27a8:	464e      	mov	r6, r9
    27aa:	030c      	lsls	r4, r1, #12
    27ac:	b5e0      	push	{r5, r6, r7, lr}
    27ae:	004e      	lsls	r6, r1, #1
    27b0:	0fc9      	lsrs	r1, r1, #31
    27b2:	4688      	mov	r8, r1
    27b4:	000d      	movs	r5, r1
    27b6:	0a61      	lsrs	r1, r4, #9
    27b8:	0f44      	lsrs	r4, r0, #29
    27ba:	430c      	orrs	r4, r1
    27bc:	00c7      	lsls	r7, r0, #3
    27be:	0319      	lsls	r1, r3, #12
    27c0:	0058      	lsls	r0, r3, #1
    27c2:	0fdb      	lsrs	r3, r3, #31
    27c4:	469b      	mov	fp, r3
    27c6:	0a4b      	lsrs	r3, r1, #9
    27c8:	0f51      	lsrs	r1, r2, #29
    27ca:	430b      	orrs	r3, r1
    27cc:	0d76      	lsrs	r6, r6, #21
    27ce:	0d40      	lsrs	r0, r0, #21
    27d0:	0019      	movs	r1, r3
    27d2:	00d2      	lsls	r2, r2, #3
    27d4:	45d8      	cmp	r8, fp
    27d6:	d100      	bne.n	27da <__aeabi_dadd+0x3a>
    27d8:	e0ae      	b.n	2938 <__aeabi_dadd+0x198>
    27da:	1a35      	subs	r5, r6, r0
    27dc:	2d00      	cmp	r5, #0
    27de:	dc00      	bgt.n	27e2 <__aeabi_dadd+0x42>
    27e0:	e0f6      	b.n	29d0 <__aeabi_dadd+0x230>
    27e2:	2800      	cmp	r0, #0
    27e4:	d10f      	bne.n	2806 <__aeabi_dadd+0x66>
    27e6:	4313      	orrs	r3, r2
    27e8:	d100      	bne.n	27ec <__aeabi_dadd+0x4c>
    27ea:	e0db      	b.n	29a4 <__aeabi_dadd+0x204>
    27ec:	1e6b      	subs	r3, r5, #1
    27ee:	2b00      	cmp	r3, #0
    27f0:	d000      	beq.n	27f4 <__aeabi_dadd+0x54>
    27f2:	e137      	b.n	2a64 <__aeabi_dadd+0x2c4>
    27f4:	1aba      	subs	r2, r7, r2
    27f6:	4297      	cmp	r7, r2
    27f8:	41bf      	sbcs	r7, r7
    27fa:	1a64      	subs	r4, r4, r1
    27fc:	427f      	negs	r7, r7
    27fe:	1be4      	subs	r4, r4, r7
    2800:	2601      	movs	r6, #1
    2802:	0017      	movs	r7, r2
    2804:	e024      	b.n	2850 <__aeabi_dadd+0xb0>
    2806:	4bc6      	ldr	r3, [pc, #792]	; (2b20 <__aeabi_dadd+0x380>)
    2808:	429e      	cmp	r6, r3
    280a:	d04d      	beq.n	28a8 <__aeabi_dadd+0x108>
    280c:	2380      	movs	r3, #128	; 0x80
    280e:	041b      	lsls	r3, r3, #16
    2810:	4319      	orrs	r1, r3
    2812:	2d38      	cmp	r5, #56	; 0x38
    2814:	dd00      	ble.n	2818 <__aeabi_dadd+0x78>
    2816:	e107      	b.n	2a28 <__aeabi_dadd+0x288>
    2818:	2d1f      	cmp	r5, #31
    281a:	dd00      	ble.n	281e <__aeabi_dadd+0x7e>
    281c:	e138      	b.n	2a90 <__aeabi_dadd+0x2f0>
    281e:	2020      	movs	r0, #32
    2820:	1b43      	subs	r3, r0, r5
    2822:	469a      	mov	sl, r3
    2824:	000b      	movs	r3, r1
    2826:	4650      	mov	r0, sl
    2828:	4083      	lsls	r3, r0
    282a:	4699      	mov	r9, r3
    282c:	0013      	movs	r3, r2
    282e:	4648      	mov	r0, r9
    2830:	40eb      	lsrs	r3, r5
    2832:	4318      	orrs	r0, r3
    2834:	0003      	movs	r3, r0
    2836:	4650      	mov	r0, sl
    2838:	4082      	lsls	r2, r0
    283a:	1e50      	subs	r0, r2, #1
    283c:	4182      	sbcs	r2, r0
    283e:	40e9      	lsrs	r1, r5
    2840:	431a      	orrs	r2, r3
    2842:	1aba      	subs	r2, r7, r2
    2844:	1a61      	subs	r1, r4, r1
    2846:	4297      	cmp	r7, r2
    2848:	41a4      	sbcs	r4, r4
    284a:	0017      	movs	r7, r2
    284c:	4264      	negs	r4, r4
    284e:	1b0c      	subs	r4, r1, r4
    2850:	0223      	lsls	r3, r4, #8
    2852:	d562      	bpl.n	291a <__aeabi_dadd+0x17a>
    2854:	0264      	lsls	r4, r4, #9
    2856:	0a65      	lsrs	r5, r4, #9
    2858:	2d00      	cmp	r5, #0
    285a:	d100      	bne.n	285e <__aeabi_dadd+0xbe>
    285c:	e0df      	b.n	2a1e <__aeabi_dadd+0x27e>
    285e:	0028      	movs	r0, r5
    2860:	f001 fbe4 	bl	402c <__clzsi2>
    2864:	0003      	movs	r3, r0
    2866:	3b08      	subs	r3, #8
    2868:	2b1f      	cmp	r3, #31
    286a:	dd00      	ble.n	286e <__aeabi_dadd+0xce>
    286c:	e0d2      	b.n	2a14 <__aeabi_dadd+0x274>
    286e:	2220      	movs	r2, #32
    2870:	003c      	movs	r4, r7
    2872:	1ad2      	subs	r2, r2, r3
    2874:	409d      	lsls	r5, r3
    2876:	40d4      	lsrs	r4, r2
    2878:	409f      	lsls	r7, r3
    287a:	4325      	orrs	r5, r4
    287c:	429e      	cmp	r6, r3
    287e:	dd00      	ble.n	2882 <__aeabi_dadd+0xe2>
    2880:	e0c4      	b.n	2a0c <__aeabi_dadd+0x26c>
    2882:	1b9e      	subs	r6, r3, r6
    2884:	1c73      	adds	r3, r6, #1
    2886:	2b1f      	cmp	r3, #31
    2888:	dd00      	ble.n	288c <__aeabi_dadd+0xec>
    288a:	e0f1      	b.n	2a70 <__aeabi_dadd+0x2d0>
    288c:	2220      	movs	r2, #32
    288e:	0038      	movs	r0, r7
    2890:	0029      	movs	r1, r5
    2892:	1ad2      	subs	r2, r2, r3
    2894:	40d8      	lsrs	r0, r3
    2896:	4091      	lsls	r1, r2
    2898:	4097      	lsls	r7, r2
    289a:	002c      	movs	r4, r5
    289c:	4301      	orrs	r1, r0
    289e:	1e78      	subs	r0, r7, #1
    28a0:	4187      	sbcs	r7, r0
    28a2:	40dc      	lsrs	r4, r3
    28a4:	2600      	movs	r6, #0
    28a6:	430f      	orrs	r7, r1
    28a8:	077b      	lsls	r3, r7, #29
    28aa:	d009      	beq.n	28c0 <__aeabi_dadd+0x120>
    28ac:	230f      	movs	r3, #15
    28ae:	403b      	ands	r3, r7
    28b0:	2b04      	cmp	r3, #4
    28b2:	d005      	beq.n	28c0 <__aeabi_dadd+0x120>
    28b4:	1d3b      	adds	r3, r7, #4
    28b6:	42bb      	cmp	r3, r7
    28b8:	41bf      	sbcs	r7, r7
    28ba:	427f      	negs	r7, r7
    28bc:	19e4      	adds	r4, r4, r7
    28be:	001f      	movs	r7, r3
    28c0:	0223      	lsls	r3, r4, #8
    28c2:	d52c      	bpl.n	291e <__aeabi_dadd+0x17e>
    28c4:	4b96      	ldr	r3, [pc, #600]	; (2b20 <__aeabi_dadd+0x380>)
    28c6:	3601      	adds	r6, #1
    28c8:	429e      	cmp	r6, r3
    28ca:	d100      	bne.n	28ce <__aeabi_dadd+0x12e>
    28cc:	e09a      	b.n	2a04 <__aeabi_dadd+0x264>
    28ce:	4645      	mov	r5, r8
    28d0:	4b94      	ldr	r3, [pc, #592]	; (2b24 <__aeabi_dadd+0x384>)
    28d2:	08ff      	lsrs	r7, r7, #3
    28d4:	401c      	ands	r4, r3
    28d6:	0760      	lsls	r0, r4, #29
    28d8:	0576      	lsls	r6, r6, #21
    28da:	0264      	lsls	r4, r4, #9
    28dc:	4307      	orrs	r7, r0
    28de:	0b24      	lsrs	r4, r4, #12
    28e0:	0d76      	lsrs	r6, r6, #21
    28e2:	2100      	movs	r1, #0
    28e4:	0324      	lsls	r4, r4, #12
    28e6:	0b23      	lsrs	r3, r4, #12
    28e8:	0d0c      	lsrs	r4, r1, #20
    28ea:	4a8f      	ldr	r2, [pc, #572]	; (2b28 <__aeabi_dadd+0x388>)
    28ec:	0524      	lsls	r4, r4, #20
    28ee:	431c      	orrs	r4, r3
    28f0:	4014      	ands	r4, r2
    28f2:	0533      	lsls	r3, r6, #20
    28f4:	4323      	orrs	r3, r4
    28f6:	005b      	lsls	r3, r3, #1
    28f8:	07ed      	lsls	r5, r5, #31
    28fa:	085b      	lsrs	r3, r3, #1
    28fc:	432b      	orrs	r3, r5
    28fe:	0038      	movs	r0, r7
    2900:	0019      	movs	r1, r3
    2902:	bc3c      	pop	{r2, r3, r4, r5}
    2904:	4690      	mov	r8, r2
    2906:	4699      	mov	r9, r3
    2908:	46a2      	mov	sl, r4
    290a:	46ab      	mov	fp, r5
    290c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    290e:	4664      	mov	r4, ip
    2910:	4304      	orrs	r4, r0
    2912:	d100      	bne.n	2916 <__aeabi_dadd+0x176>
    2914:	e211      	b.n	2d3a <__aeabi_dadd+0x59a>
    2916:	0004      	movs	r4, r0
    2918:	4667      	mov	r7, ip
    291a:	077b      	lsls	r3, r7, #29
    291c:	d1c6      	bne.n	28ac <__aeabi_dadd+0x10c>
    291e:	4645      	mov	r5, r8
    2920:	0760      	lsls	r0, r4, #29
    2922:	08ff      	lsrs	r7, r7, #3
    2924:	4307      	orrs	r7, r0
    2926:	08e4      	lsrs	r4, r4, #3
    2928:	4b7d      	ldr	r3, [pc, #500]	; (2b20 <__aeabi_dadd+0x380>)
    292a:	429e      	cmp	r6, r3
    292c:	d030      	beq.n	2990 <__aeabi_dadd+0x1f0>
    292e:	0324      	lsls	r4, r4, #12
    2930:	0576      	lsls	r6, r6, #21
    2932:	0b24      	lsrs	r4, r4, #12
    2934:	0d76      	lsrs	r6, r6, #21
    2936:	e7d4      	b.n	28e2 <__aeabi_dadd+0x142>
    2938:	1a33      	subs	r3, r6, r0
    293a:	469a      	mov	sl, r3
    293c:	2b00      	cmp	r3, #0
    293e:	dd78      	ble.n	2a32 <__aeabi_dadd+0x292>
    2940:	2800      	cmp	r0, #0
    2942:	d031      	beq.n	29a8 <__aeabi_dadd+0x208>
    2944:	4876      	ldr	r0, [pc, #472]	; (2b20 <__aeabi_dadd+0x380>)
    2946:	4286      	cmp	r6, r0
    2948:	d0ae      	beq.n	28a8 <__aeabi_dadd+0x108>
    294a:	2080      	movs	r0, #128	; 0x80
    294c:	0400      	lsls	r0, r0, #16
    294e:	4301      	orrs	r1, r0
    2950:	4653      	mov	r3, sl
    2952:	2b38      	cmp	r3, #56	; 0x38
    2954:	dc00      	bgt.n	2958 <__aeabi_dadd+0x1b8>
    2956:	e0e9      	b.n	2b2c <__aeabi_dadd+0x38c>
    2958:	430a      	orrs	r2, r1
    295a:	1e51      	subs	r1, r2, #1
    295c:	418a      	sbcs	r2, r1
    295e:	2100      	movs	r1, #0
    2960:	19d2      	adds	r2, r2, r7
    2962:	42ba      	cmp	r2, r7
    2964:	41bf      	sbcs	r7, r7
    2966:	1909      	adds	r1, r1, r4
    2968:	427c      	negs	r4, r7
    296a:	0017      	movs	r7, r2
    296c:	190c      	adds	r4, r1, r4
    296e:	0223      	lsls	r3, r4, #8
    2970:	d5d3      	bpl.n	291a <__aeabi_dadd+0x17a>
    2972:	4b6b      	ldr	r3, [pc, #428]	; (2b20 <__aeabi_dadd+0x380>)
    2974:	3601      	adds	r6, #1
    2976:	429e      	cmp	r6, r3
    2978:	d100      	bne.n	297c <__aeabi_dadd+0x1dc>
    297a:	e13a      	b.n	2bf2 <__aeabi_dadd+0x452>
    297c:	2001      	movs	r0, #1
    297e:	4b69      	ldr	r3, [pc, #420]	; (2b24 <__aeabi_dadd+0x384>)
    2980:	401c      	ands	r4, r3
    2982:	087b      	lsrs	r3, r7, #1
    2984:	4007      	ands	r7, r0
    2986:	431f      	orrs	r7, r3
    2988:	07e0      	lsls	r0, r4, #31
    298a:	4307      	orrs	r7, r0
    298c:	0864      	lsrs	r4, r4, #1
    298e:	e78b      	b.n	28a8 <__aeabi_dadd+0x108>
    2990:	0023      	movs	r3, r4
    2992:	433b      	orrs	r3, r7
    2994:	d100      	bne.n	2998 <__aeabi_dadd+0x1f8>
    2996:	e1cb      	b.n	2d30 <__aeabi_dadd+0x590>
    2998:	2280      	movs	r2, #128	; 0x80
    299a:	0312      	lsls	r2, r2, #12
    299c:	4314      	orrs	r4, r2
    299e:	0324      	lsls	r4, r4, #12
    29a0:	0b24      	lsrs	r4, r4, #12
    29a2:	e79e      	b.n	28e2 <__aeabi_dadd+0x142>
    29a4:	002e      	movs	r6, r5
    29a6:	e77f      	b.n	28a8 <__aeabi_dadd+0x108>
    29a8:	0008      	movs	r0, r1
    29aa:	4310      	orrs	r0, r2
    29ac:	d100      	bne.n	29b0 <__aeabi_dadd+0x210>
    29ae:	e0b4      	b.n	2b1a <__aeabi_dadd+0x37a>
    29b0:	1e58      	subs	r0, r3, #1
    29b2:	2800      	cmp	r0, #0
    29b4:	d000      	beq.n	29b8 <__aeabi_dadd+0x218>
    29b6:	e0de      	b.n	2b76 <__aeabi_dadd+0x3d6>
    29b8:	18ba      	adds	r2, r7, r2
    29ba:	42ba      	cmp	r2, r7
    29bc:	419b      	sbcs	r3, r3
    29be:	1864      	adds	r4, r4, r1
    29c0:	425b      	negs	r3, r3
    29c2:	18e4      	adds	r4, r4, r3
    29c4:	0017      	movs	r7, r2
    29c6:	2601      	movs	r6, #1
    29c8:	0223      	lsls	r3, r4, #8
    29ca:	d5a6      	bpl.n	291a <__aeabi_dadd+0x17a>
    29cc:	2602      	movs	r6, #2
    29ce:	e7d5      	b.n	297c <__aeabi_dadd+0x1dc>
    29d0:	2d00      	cmp	r5, #0
    29d2:	d16e      	bne.n	2ab2 <__aeabi_dadd+0x312>
    29d4:	1c70      	adds	r0, r6, #1
    29d6:	0540      	lsls	r0, r0, #21
    29d8:	0d40      	lsrs	r0, r0, #21
    29da:	2801      	cmp	r0, #1
    29dc:	dc00      	bgt.n	29e0 <__aeabi_dadd+0x240>
    29de:	e0f9      	b.n	2bd4 <__aeabi_dadd+0x434>
    29e0:	1ab8      	subs	r0, r7, r2
    29e2:	4684      	mov	ip, r0
    29e4:	4287      	cmp	r7, r0
    29e6:	4180      	sbcs	r0, r0
    29e8:	1ae5      	subs	r5, r4, r3
    29ea:	4240      	negs	r0, r0
    29ec:	1a2d      	subs	r5, r5, r0
    29ee:	0228      	lsls	r0, r5, #8
    29f0:	d400      	bmi.n	29f4 <__aeabi_dadd+0x254>
    29f2:	e089      	b.n	2b08 <__aeabi_dadd+0x368>
    29f4:	1bd7      	subs	r7, r2, r7
    29f6:	42ba      	cmp	r2, r7
    29f8:	4192      	sbcs	r2, r2
    29fa:	1b1c      	subs	r4, r3, r4
    29fc:	4252      	negs	r2, r2
    29fe:	1aa5      	subs	r5, r4, r2
    2a00:	46d8      	mov	r8, fp
    2a02:	e729      	b.n	2858 <__aeabi_dadd+0xb8>
    2a04:	4645      	mov	r5, r8
    2a06:	2400      	movs	r4, #0
    2a08:	2700      	movs	r7, #0
    2a0a:	e76a      	b.n	28e2 <__aeabi_dadd+0x142>
    2a0c:	4c45      	ldr	r4, [pc, #276]	; (2b24 <__aeabi_dadd+0x384>)
    2a0e:	1af6      	subs	r6, r6, r3
    2a10:	402c      	ands	r4, r5
    2a12:	e749      	b.n	28a8 <__aeabi_dadd+0x108>
    2a14:	003d      	movs	r5, r7
    2a16:	3828      	subs	r0, #40	; 0x28
    2a18:	4085      	lsls	r5, r0
    2a1a:	2700      	movs	r7, #0
    2a1c:	e72e      	b.n	287c <__aeabi_dadd+0xdc>
    2a1e:	0038      	movs	r0, r7
    2a20:	f001 fb04 	bl	402c <__clzsi2>
    2a24:	3020      	adds	r0, #32
    2a26:	e71d      	b.n	2864 <__aeabi_dadd+0xc4>
    2a28:	430a      	orrs	r2, r1
    2a2a:	1e51      	subs	r1, r2, #1
    2a2c:	418a      	sbcs	r2, r1
    2a2e:	2100      	movs	r1, #0
    2a30:	e707      	b.n	2842 <__aeabi_dadd+0xa2>
    2a32:	2b00      	cmp	r3, #0
    2a34:	d000      	beq.n	2a38 <__aeabi_dadd+0x298>
    2a36:	e0f3      	b.n	2c20 <__aeabi_dadd+0x480>
    2a38:	1c70      	adds	r0, r6, #1
    2a3a:	0543      	lsls	r3, r0, #21
    2a3c:	0d5b      	lsrs	r3, r3, #21
    2a3e:	2b01      	cmp	r3, #1
    2a40:	dc00      	bgt.n	2a44 <__aeabi_dadd+0x2a4>
    2a42:	e0ad      	b.n	2ba0 <__aeabi_dadd+0x400>
    2a44:	4b36      	ldr	r3, [pc, #216]	; (2b20 <__aeabi_dadd+0x380>)
    2a46:	4298      	cmp	r0, r3
    2a48:	d100      	bne.n	2a4c <__aeabi_dadd+0x2ac>
    2a4a:	e0d1      	b.n	2bf0 <__aeabi_dadd+0x450>
    2a4c:	18ba      	adds	r2, r7, r2
    2a4e:	42ba      	cmp	r2, r7
    2a50:	41bf      	sbcs	r7, r7
    2a52:	1864      	adds	r4, r4, r1
    2a54:	427f      	negs	r7, r7
    2a56:	19e4      	adds	r4, r4, r7
    2a58:	07e7      	lsls	r7, r4, #31
    2a5a:	0852      	lsrs	r2, r2, #1
    2a5c:	4317      	orrs	r7, r2
    2a5e:	0864      	lsrs	r4, r4, #1
    2a60:	0006      	movs	r6, r0
    2a62:	e721      	b.n	28a8 <__aeabi_dadd+0x108>
    2a64:	482e      	ldr	r0, [pc, #184]	; (2b20 <__aeabi_dadd+0x380>)
    2a66:	4285      	cmp	r5, r0
    2a68:	d100      	bne.n	2a6c <__aeabi_dadd+0x2cc>
    2a6a:	e093      	b.n	2b94 <__aeabi_dadd+0x3f4>
    2a6c:	001d      	movs	r5, r3
    2a6e:	e6d0      	b.n	2812 <__aeabi_dadd+0x72>
    2a70:	0029      	movs	r1, r5
    2a72:	3e1f      	subs	r6, #31
    2a74:	40f1      	lsrs	r1, r6
    2a76:	2b20      	cmp	r3, #32
    2a78:	d100      	bne.n	2a7c <__aeabi_dadd+0x2dc>
    2a7a:	e08d      	b.n	2b98 <__aeabi_dadd+0x3f8>
    2a7c:	2240      	movs	r2, #64	; 0x40
    2a7e:	1ad3      	subs	r3, r2, r3
    2a80:	409d      	lsls	r5, r3
    2a82:	432f      	orrs	r7, r5
    2a84:	1e7d      	subs	r5, r7, #1
    2a86:	41af      	sbcs	r7, r5
    2a88:	2400      	movs	r4, #0
    2a8a:	430f      	orrs	r7, r1
    2a8c:	2600      	movs	r6, #0
    2a8e:	e744      	b.n	291a <__aeabi_dadd+0x17a>
    2a90:	002b      	movs	r3, r5
    2a92:	0008      	movs	r0, r1
    2a94:	3b20      	subs	r3, #32
    2a96:	40d8      	lsrs	r0, r3
    2a98:	0003      	movs	r3, r0
    2a9a:	2d20      	cmp	r5, #32
    2a9c:	d100      	bne.n	2aa0 <__aeabi_dadd+0x300>
    2a9e:	e07d      	b.n	2b9c <__aeabi_dadd+0x3fc>
    2aa0:	2040      	movs	r0, #64	; 0x40
    2aa2:	1b45      	subs	r5, r0, r5
    2aa4:	40a9      	lsls	r1, r5
    2aa6:	430a      	orrs	r2, r1
    2aa8:	1e51      	subs	r1, r2, #1
    2aaa:	418a      	sbcs	r2, r1
    2aac:	2100      	movs	r1, #0
    2aae:	431a      	orrs	r2, r3
    2ab0:	e6c7      	b.n	2842 <__aeabi_dadd+0xa2>
    2ab2:	2e00      	cmp	r6, #0
    2ab4:	d050      	beq.n	2b58 <__aeabi_dadd+0x3b8>
    2ab6:	4e1a      	ldr	r6, [pc, #104]	; (2b20 <__aeabi_dadd+0x380>)
    2ab8:	42b0      	cmp	r0, r6
    2aba:	d057      	beq.n	2b6c <__aeabi_dadd+0x3cc>
    2abc:	2680      	movs	r6, #128	; 0x80
    2abe:	426b      	negs	r3, r5
    2ac0:	4699      	mov	r9, r3
    2ac2:	0436      	lsls	r6, r6, #16
    2ac4:	4334      	orrs	r4, r6
    2ac6:	464b      	mov	r3, r9
    2ac8:	2b38      	cmp	r3, #56	; 0x38
    2aca:	dd00      	ble.n	2ace <__aeabi_dadd+0x32e>
    2acc:	e0d6      	b.n	2c7c <__aeabi_dadd+0x4dc>
    2ace:	2b1f      	cmp	r3, #31
    2ad0:	dd00      	ble.n	2ad4 <__aeabi_dadd+0x334>
    2ad2:	e135      	b.n	2d40 <__aeabi_dadd+0x5a0>
    2ad4:	2620      	movs	r6, #32
    2ad6:	1af5      	subs	r5, r6, r3
    2ad8:	0026      	movs	r6, r4
    2ada:	40ae      	lsls	r6, r5
    2adc:	46b2      	mov	sl, r6
    2ade:	003e      	movs	r6, r7
    2ae0:	40de      	lsrs	r6, r3
    2ae2:	46ac      	mov	ip, r5
    2ae4:	0035      	movs	r5, r6
    2ae6:	4656      	mov	r6, sl
    2ae8:	432e      	orrs	r6, r5
    2aea:	4665      	mov	r5, ip
    2aec:	40af      	lsls	r7, r5
    2aee:	1e7d      	subs	r5, r7, #1
    2af0:	41af      	sbcs	r7, r5
    2af2:	40dc      	lsrs	r4, r3
    2af4:	4337      	orrs	r7, r6
    2af6:	1bd7      	subs	r7, r2, r7
    2af8:	42ba      	cmp	r2, r7
    2afa:	4192      	sbcs	r2, r2
    2afc:	1b0c      	subs	r4, r1, r4
    2afe:	4252      	negs	r2, r2
    2b00:	1aa4      	subs	r4, r4, r2
    2b02:	0006      	movs	r6, r0
    2b04:	46d8      	mov	r8, fp
    2b06:	e6a3      	b.n	2850 <__aeabi_dadd+0xb0>
    2b08:	4664      	mov	r4, ip
    2b0a:	4667      	mov	r7, ip
    2b0c:	432c      	orrs	r4, r5
    2b0e:	d000      	beq.n	2b12 <__aeabi_dadd+0x372>
    2b10:	e6a2      	b.n	2858 <__aeabi_dadd+0xb8>
    2b12:	2500      	movs	r5, #0
    2b14:	2600      	movs	r6, #0
    2b16:	2700      	movs	r7, #0
    2b18:	e706      	b.n	2928 <__aeabi_dadd+0x188>
    2b1a:	001e      	movs	r6, r3
    2b1c:	e6c4      	b.n	28a8 <__aeabi_dadd+0x108>
    2b1e:	46c0      	nop			; (mov r8, r8)
    2b20:	000007ff 	.word	0x000007ff
    2b24:	ff7fffff 	.word	0xff7fffff
    2b28:	800fffff 	.word	0x800fffff
    2b2c:	2b1f      	cmp	r3, #31
    2b2e:	dc63      	bgt.n	2bf8 <__aeabi_dadd+0x458>
    2b30:	2020      	movs	r0, #32
    2b32:	1ac3      	subs	r3, r0, r3
    2b34:	0008      	movs	r0, r1
    2b36:	4098      	lsls	r0, r3
    2b38:	469c      	mov	ip, r3
    2b3a:	4683      	mov	fp, r0
    2b3c:	4653      	mov	r3, sl
    2b3e:	0010      	movs	r0, r2
    2b40:	40d8      	lsrs	r0, r3
    2b42:	0003      	movs	r3, r0
    2b44:	4658      	mov	r0, fp
    2b46:	4318      	orrs	r0, r3
    2b48:	4663      	mov	r3, ip
    2b4a:	409a      	lsls	r2, r3
    2b4c:	1e53      	subs	r3, r2, #1
    2b4e:	419a      	sbcs	r2, r3
    2b50:	4653      	mov	r3, sl
    2b52:	4302      	orrs	r2, r0
    2b54:	40d9      	lsrs	r1, r3
    2b56:	e703      	b.n	2960 <__aeabi_dadd+0x1c0>
    2b58:	0026      	movs	r6, r4
    2b5a:	433e      	orrs	r6, r7
    2b5c:	d006      	beq.n	2b6c <__aeabi_dadd+0x3cc>
    2b5e:	43eb      	mvns	r3, r5
    2b60:	4699      	mov	r9, r3
    2b62:	2b00      	cmp	r3, #0
    2b64:	d0c7      	beq.n	2af6 <__aeabi_dadd+0x356>
    2b66:	4e94      	ldr	r6, [pc, #592]	; (2db8 <__aeabi_dadd+0x618>)
    2b68:	42b0      	cmp	r0, r6
    2b6a:	d1ac      	bne.n	2ac6 <__aeabi_dadd+0x326>
    2b6c:	000c      	movs	r4, r1
    2b6e:	0017      	movs	r7, r2
    2b70:	0006      	movs	r6, r0
    2b72:	46d8      	mov	r8, fp
    2b74:	e698      	b.n	28a8 <__aeabi_dadd+0x108>
    2b76:	4b90      	ldr	r3, [pc, #576]	; (2db8 <__aeabi_dadd+0x618>)
    2b78:	459a      	cmp	sl, r3
    2b7a:	d00b      	beq.n	2b94 <__aeabi_dadd+0x3f4>
    2b7c:	4682      	mov	sl, r0
    2b7e:	e6e7      	b.n	2950 <__aeabi_dadd+0x1b0>
    2b80:	2800      	cmp	r0, #0
    2b82:	d000      	beq.n	2b86 <__aeabi_dadd+0x3e6>
    2b84:	e09e      	b.n	2cc4 <__aeabi_dadd+0x524>
    2b86:	0018      	movs	r0, r3
    2b88:	4310      	orrs	r0, r2
    2b8a:	d100      	bne.n	2b8e <__aeabi_dadd+0x3ee>
    2b8c:	e0e9      	b.n	2d62 <__aeabi_dadd+0x5c2>
    2b8e:	001c      	movs	r4, r3
    2b90:	0017      	movs	r7, r2
    2b92:	46d8      	mov	r8, fp
    2b94:	4e88      	ldr	r6, [pc, #544]	; (2db8 <__aeabi_dadd+0x618>)
    2b96:	e687      	b.n	28a8 <__aeabi_dadd+0x108>
    2b98:	2500      	movs	r5, #0
    2b9a:	e772      	b.n	2a82 <__aeabi_dadd+0x2e2>
    2b9c:	2100      	movs	r1, #0
    2b9e:	e782      	b.n	2aa6 <__aeabi_dadd+0x306>
    2ba0:	0023      	movs	r3, r4
    2ba2:	433b      	orrs	r3, r7
    2ba4:	2e00      	cmp	r6, #0
    2ba6:	d000      	beq.n	2baa <__aeabi_dadd+0x40a>
    2ba8:	e0ab      	b.n	2d02 <__aeabi_dadd+0x562>
    2baa:	2b00      	cmp	r3, #0
    2bac:	d100      	bne.n	2bb0 <__aeabi_dadd+0x410>
    2bae:	e0e7      	b.n	2d80 <__aeabi_dadd+0x5e0>
    2bb0:	000b      	movs	r3, r1
    2bb2:	4313      	orrs	r3, r2
    2bb4:	d100      	bne.n	2bb8 <__aeabi_dadd+0x418>
    2bb6:	e677      	b.n	28a8 <__aeabi_dadd+0x108>
    2bb8:	18ba      	adds	r2, r7, r2
    2bba:	42ba      	cmp	r2, r7
    2bbc:	41bf      	sbcs	r7, r7
    2bbe:	1864      	adds	r4, r4, r1
    2bc0:	427f      	negs	r7, r7
    2bc2:	19e4      	adds	r4, r4, r7
    2bc4:	0223      	lsls	r3, r4, #8
    2bc6:	d400      	bmi.n	2bca <__aeabi_dadd+0x42a>
    2bc8:	e0f2      	b.n	2db0 <__aeabi_dadd+0x610>
    2bca:	4b7c      	ldr	r3, [pc, #496]	; (2dbc <__aeabi_dadd+0x61c>)
    2bcc:	0017      	movs	r7, r2
    2bce:	401c      	ands	r4, r3
    2bd0:	0006      	movs	r6, r0
    2bd2:	e669      	b.n	28a8 <__aeabi_dadd+0x108>
    2bd4:	0020      	movs	r0, r4
    2bd6:	4338      	orrs	r0, r7
    2bd8:	2e00      	cmp	r6, #0
    2bda:	d1d1      	bne.n	2b80 <__aeabi_dadd+0x3e0>
    2bdc:	2800      	cmp	r0, #0
    2bde:	d15b      	bne.n	2c98 <__aeabi_dadd+0x4f8>
    2be0:	001c      	movs	r4, r3
    2be2:	4314      	orrs	r4, r2
    2be4:	d100      	bne.n	2be8 <__aeabi_dadd+0x448>
    2be6:	e0a8      	b.n	2d3a <__aeabi_dadd+0x59a>
    2be8:	001c      	movs	r4, r3
    2bea:	0017      	movs	r7, r2
    2bec:	46d8      	mov	r8, fp
    2bee:	e65b      	b.n	28a8 <__aeabi_dadd+0x108>
    2bf0:	0006      	movs	r6, r0
    2bf2:	2400      	movs	r4, #0
    2bf4:	2700      	movs	r7, #0
    2bf6:	e697      	b.n	2928 <__aeabi_dadd+0x188>
    2bf8:	4650      	mov	r0, sl
    2bfa:	000b      	movs	r3, r1
    2bfc:	3820      	subs	r0, #32
    2bfe:	40c3      	lsrs	r3, r0
    2c00:	4699      	mov	r9, r3
    2c02:	4653      	mov	r3, sl
    2c04:	2b20      	cmp	r3, #32
    2c06:	d100      	bne.n	2c0a <__aeabi_dadd+0x46a>
    2c08:	e095      	b.n	2d36 <__aeabi_dadd+0x596>
    2c0a:	2340      	movs	r3, #64	; 0x40
    2c0c:	4650      	mov	r0, sl
    2c0e:	1a1b      	subs	r3, r3, r0
    2c10:	4099      	lsls	r1, r3
    2c12:	430a      	orrs	r2, r1
    2c14:	1e51      	subs	r1, r2, #1
    2c16:	418a      	sbcs	r2, r1
    2c18:	464b      	mov	r3, r9
    2c1a:	2100      	movs	r1, #0
    2c1c:	431a      	orrs	r2, r3
    2c1e:	e69f      	b.n	2960 <__aeabi_dadd+0x1c0>
    2c20:	2e00      	cmp	r6, #0
    2c22:	d130      	bne.n	2c86 <__aeabi_dadd+0x4e6>
    2c24:	0026      	movs	r6, r4
    2c26:	433e      	orrs	r6, r7
    2c28:	d067      	beq.n	2cfa <__aeabi_dadd+0x55a>
    2c2a:	43db      	mvns	r3, r3
    2c2c:	469a      	mov	sl, r3
    2c2e:	2b00      	cmp	r3, #0
    2c30:	d01c      	beq.n	2c6c <__aeabi_dadd+0x4cc>
    2c32:	4e61      	ldr	r6, [pc, #388]	; (2db8 <__aeabi_dadd+0x618>)
    2c34:	42b0      	cmp	r0, r6
    2c36:	d060      	beq.n	2cfa <__aeabi_dadd+0x55a>
    2c38:	4653      	mov	r3, sl
    2c3a:	2b38      	cmp	r3, #56	; 0x38
    2c3c:	dd00      	ble.n	2c40 <__aeabi_dadd+0x4a0>
    2c3e:	e096      	b.n	2d6e <__aeabi_dadd+0x5ce>
    2c40:	2b1f      	cmp	r3, #31
    2c42:	dd00      	ble.n	2c46 <__aeabi_dadd+0x4a6>
    2c44:	e09f      	b.n	2d86 <__aeabi_dadd+0x5e6>
    2c46:	2620      	movs	r6, #32
    2c48:	1af3      	subs	r3, r6, r3
    2c4a:	0026      	movs	r6, r4
    2c4c:	409e      	lsls	r6, r3
    2c4e:	469c      	mov	ip, r3
    2c50:	46b3      	mov	fp, r6
    2c52:	4653      	mov	r3, sl
    2c54:	003e      	movs	r6, r7
    2c56:	40de      	lsrs	r6, r3
    2c58:	0033      	movs	r3, r6
    2c5a:	465e      	mov	r6, fp
    2c5c:	431e      	orrs	r6, r3
    2c5e:	4663      	mov	r3, ip
    2c60:	409f      	lsls	r7, r3
    2c62:	1e7b      	subs	r3, r7, #1
    2c64:	419f      	sbcs	r7, r3
    2c66:	4653      	mov	r3, sl
    2c68:	40dc      	lsrs	r4, r3
    2c6a:	4337      	orrs	r7, r6
    2c6c:	18bf      	adds	r7, r7, r2
    2c6e:	4297      	cmp	r7, r2
    2c70:	4192      	sbcs	r2, r2
    2c72:	1864      	adds	r4, r4, r1
    2c74:	4252      	negs	r2, r2
    2c76:	18a4      	adds	r4, r4, r2
    2c78:	0006      	movs	r6, r0
    2c7a:	e678      	b.n	296e <__aeabi_dadd+0x1ce>
    2c7c:	4327      	orrs	r7, r4
    2c7e:	1e7c      	subs	r4, r7, #1
    2c80:	41a7      	sbcs	r7, r4
    2c82:	2400      	movs	r4, #0
    2c84:	e737      	b.n	2af6 <__aeabi_dadd+0x356>
    2c86:	4e4c      	ldr	r6, [pc, #304]	; (2db8 <__aeabi_dadd+0x618>)
    2c88:	42b0      	cmp	r0, r6
    2c8a:	d036      	beq.n	2cfa <__aeabi_dadd+0x55a>
    2c8c:	2680      	movs	r6, #128	; 0x80
    2c8e:	425b      	negs	r3, r3
    2c90:	0436      	lsls	r6, r6, #16
    2c92:	469a      	mov	sl, r3
    2c94:	4334      	orrs	r4, r6
    2c96:	e7cf      	b.n	2c38 <__aeabi_dadd+0x498>
    2c98:	0018      	movs	r0, r3
    2c9a:	4310      	orrs	r0, r2
    2c9c:	d100      	bne.n	2ca0 <__aeabi_dadd+0x500>
    2c9e:	e603      	b.n	28a8 <__aeabi_dadd+0x108>
    2ca0:	1ab8      	subs	r0, r7, r2
    2ca2:	4684      	mov	ip, r0
    2ca4:	4567      	cmp	r7, ip
    2ca6:	41ad      	sbcs	r5, r5
    2ca8:	1ae0      	subs	r0, r4, r3
    2caa:	426d      	negs	r5, r5
    2cac:	1b40      	subs	r0, r0, r5
    2cae:	0205      	lsls	r5, r0, #8
    2cb0:	d400      	bmi.n	2cb4 <__aeabi_dadd+0x514>
    2cb2:	e62c      	b.n	290e <__aeabi_dadd+0x16e>
    2cb4:	1bd7      	subs	r7, r2, r7
    2cb6:	42ba      	cmp	r2, r7
    2cb8:	4192      	sbcs	r2, r2
    2cba:	1b1c      	subs	r4, r3, r4
    2cbc:	4252      	negs	r2, r2
    2cbe:	1aa4      	subs	r4, r4, r2
    2cc0:	46d8      	mov	r8, fp
    2cc2:	e5f1      	b.n	28a8 <__aeabi_dadd+0x108>
    2cc4:	0018      	movs	r0, r3
    2cc6:	4310      	orrs	r0, r2
    2cc8:	d100      	bne.n	2ccc <__aeabi_dadd+0x52c>
    2cca:	e763      	b.n	2b94 <__aeabi_dadd+0x3f4>
    2ccc:	08f8      	lsrs	r0, r7, #3
    2cce:	0767      	lsls	r7, r4, #29
    2cd0:	4307      	orrs	r7, r0
    2cd2:	2080      	movs	r0, #128	; 0x80
    2cd4:	08e4      	lsrs	r4, r4, #3
    2cd6:	0300      	lsls	r0, r0, #12
    2cd8:	4204      	tst	r4, r0
    2cda:	d008      	beq.n	2cee <__aeabi_dadd+0x54e>
    2cdc:	08dd      	lsrs	r5, r3, #3
    2cde:	4205      	tst	r5, r0
    2ce0:	d105      	bne.n	2cee <__aeabi_dadd+0x54e>
    2ce2:	08d2      	lsrs	r2, r2, #3
    2ce4:	0759      	lsls	r1, r3, #29
    2ce6:	4311      	orrs	r1, r2
    2ce8:	000f      	movs	r7, r1
    2cea:	002c      	movs	r4, r5
    2cec:	46d8      	mov	r8, fp
    2cee:	0f7b      	lsrs	r3, r7, #29
    2cf0:	00e4      	lsls	r4, r4, #3
    2cf2:	431c      	orrs	r4, r3
    2cf4:	00ff      	lsls	r7, r7, #3
    2cf6:	4e30      	ldr	r6, [pc, #192]	; (2db8 <__aeabi_dadd+0x618>)
    2cf8:	e5d6      	b.n	28a8 <__aeabi_dadd+0x108>
    2cfa:	000c      	movs	r4, r1
    2cfc:	0017      	movs	r7, r2
    2cfe:	0006      	movs	r6, r0
    2d00:	e5d2      	b.n	28a8 <__aeabi_dadd+0x108>
    2d02:	2b00      	cmp	r3, #0
    2d04:	d038      	beq.n	2d78 <__aeabi_dadd+0x5d8>
    2d06:	000b      	movs	r3, r1
    2d08:	4313      	orrs	r3, r2
    2d0a:	d100      	bne.n	2d0e <__aeabi_dadd+0x56e>
    2d0c:	e742      	b.n	2b94 <__aeabi_dadd+0x3f4>
    2d0e:	08f8      	lsrs	r0, r7, #3
    2d10:	0767      	lsls	r7, r4, #29
    2d12:	4307      	orrs	r7, r0
    2d14:	2080      	movs	r0, #128	; 0x80
    2d16:	08e4      	lsrs	r4, r4, #3
    2d18:	0300      	lsls	r0, r0, #12
    2d1a:	4204      	tst	r4, r0
    2d1c:	d0e7      	beq.n	2cee <__aeabi_dadd+0x54e>
    2d1e:	08cb      	lsrs	r3, r1, #3
    2d20:	4203      	tst	r3, r0
    2d22:	d1e4      	bne.n	2cee <__aeabi_dadd+0x54e>
    2d24:	08d2      	lsrs	r2, r2, #3
    2d26:	0749      	lsls	r1, r1, #29
    2d28:	4311      	orrs	r1, r2
    2d2a:	000f      	movs	r7, r1
    2d2c:	001c      	movs	r4, r3
    2d2e:	e7de      	b.n	2cee <__aeabi_dadd+0x54e>
    2d30:	2700      	movs	r7, #0
    2d32:	2400      	movs	r4, #0
    2d34:	e5d5      	b.n	28e2 <__aeabi_dadd+0x142>
    2d36:	2100      	movs	r1, #0
    2d38:	e76b      	b.n	2c12 <__aeabi_dadd+0x472>
    2d3a:	2500      	movs	r5, #0
    2d3c:	2700      	movs	r7, #0
    2d3e:	e5f3      	b.n	2928 <__aeabi_dadd+0x188>
    2d40:	464e      	mov	r6, r9
    2d42:	0025      	movs	r5, r4
    2d44:	3e20      	subs	r6, #32
    2d46:	40f5      	lsrs	r5, r6
    2d48:	464b      	mov	r3, r9
    2d4a:	002e      	movs	r6, r5
    2d4c:	2b20      	cmp	r3, #32
    2d4e:	d02d      	beq.n	2dac <__aeabi_dadd+0x60c>
    2d50:	2540      	movs	r5, #64	; 0x40
    2d52:	1aed      	subs	r5, r5, r3
    2d54:	40ac      	lsls	r4, r5
    2d56:	4327      	orrs	r7, r4
    2d58:	1e7c      	subs	r4, r7, #1
    2d5a:	41a7      	sbcs	r7, r4
    2d5c:	2400      	movs	r4, #0
    2d5e:	4337      	orrs	r7, r6
    2d60:	e6c9      	b.n	2af6 <__aeabi_dadd+0x356>
    2d62:	2480      	movs	r4, #128	; 0x80
    2d64:	2500      	movs	r5, #0
    2d66:	0324      	lsls	r4, r4, #12
    2d68:	4e13      	ldr	r6, [pc, #76]	; (2db8 <__aeabi_dadd+0x618>)
    2d6a:	2700      	movs	r7, #0
    2d6c:	e5dc      	b.n	2928 <__aeabi_dadd+0x188>
    2d6e:	4327      	orrs	r7, r4
    2d70:	1e7c      	subs	r4, r7, #1
    2d72:	41a7      	sbcs	r7, r4
    2d74:	2400      	movs	r4, #0
    2d76:	e779      	b.n	2c6c <__aeabi_dadd+0x4cc>
    2d78:	000c      	movs	r4, r1
    2d7a:	0017      	movs	r7, r2
    2d7c:	4e0e      	ldr	r6, [pc, #56]	; (2db8 <__aeabi_dadd+0x618>)
    2d7e:	e593      	b.n	28a8 <__aeabi_dadd+0x108>
    2d80:	000c      	movs	r4, r1
    2d82:	0017      	movs	r7, r2
    2d84:	e590      	b.n	28a8 <__aeabi_dadd+0x108>
    2d86:	4656      	mov	r6, sl
    2d88:	0023      	movs	r3, r4
    2d8a:	3e20      	subs	r6, #32
    2d8c:	40f3      	lsrs	r3, r6
    2d8e:	4699      	mov	r9, r3
    2d90:	4653      	mov	r3, sl
    2d92:	2b20      	cmp	r3, #32
    2d94:	d00e      	beq.n	2db4 <__aeabi_dadd+0x614>
    2d96:	2340      	movs	r3, #64	; 0x40
    2d98:	4656      	mov	r6, sl
    2d9a:	1b9b      	subs	r3, r3, r6
    2d9c:	409c      	lsls	r4, r3
    2d9e:	4327      	orrs	r7, r4
    2da0:	1e7c      	subs	r4, r7, #1
    2da2:	41a7      	sbcs	r7, r4
    2da4:	464b      	mov	r3, r9
    2da6:	2400      	movs	r4, #0
    2da8:	431f      	orrs	r7, r3
    2daa:	e75f      	b.n	2c6c <__aeabi_dadd+0x4cc>
    2dac:	2400      	movs	r4, #0
    2dae:	e7d2      	b.n	2d56 <__aeabi_dadd+0x5b6>
    2db0:	0017      	movs	r7, r2
    2db2:	e5b2      	b.n	291a <__aeabi_dadd+0x17a>
    2db4:	2400      	movs	r4, #0
    2db6:	e7f2      	b.n	2d9e <__aeabi_dadd+0x5fe>
    2db8:	000007ff 	.word	0x000007ff
    2dbc:	ff7fffff 	.word	0xff7fffff

00002dc0 <__aeabi_ddiv>:
    2dc0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2dc2:	4657      	mov	r7, sl
    2dc4:	4645      	mov	r5, r8
    2dc6:	46de      	mov	lr, fp
    2dc8:	464e      	mov	r6, r9
    2dca:	b5e0      	push	{r5, r6, r7, lr}
    2dcc:	004c      	lsls	r4, r1, #1
    2dce:	030e      	lsls	r6, r1, #12
    2dd0:	b087      	sub	sp, #28
    2dd2:	4683      	mov	fp, r0
    2dd4:	4692      	mov	sl, r2
    2dd6:	001d      	movs	r5, r3
    2dd8:	4680      	mov	r8, r0
    2dda:	0b36      	lsrs	r6, r6, #12
    2ddc:	0d64      	lsrs	r4, r4, #21
    2dde:	0fcf      	lsrs	r7, r1, #31
    2de0:	2c00      	cmp	r4, #0
    2de2:	d04f      	beq.n	2e84 <__aeabi_ddiv+0xc4>
    2de4:	4b6f      	ldr	r3, [pc, #444]	; (2fa4 <__aeabi_ddiv+0x1e4>)
    2de6:	429c      	cmp	r4, r3
    2de8:	d035      	beq.n	2e56 <__aeabi_ddiv+0x96>
    2dea:	2380      	movs	r3, #128	; 0x80
    2dec:	0f42      	lsrs	r2, r0, #29
    2dee:	041b      	lsls	r3, r3, #16
    2df0:	00f6      	lsls	r6, r6, #3
    2df2:	4313      	orrs	r3, r2
    2df4:	4333      	orrs	r3, r6
    2df6:	4699      	mov	r9, r3
    2df8:	00c3      	lsls	r3, r0, #3
    2dfa:	4698      	mov	r8, r3
    2dfc:	4b6a      	ldr	r3, [pc, #424]	; (2fa8 <__aeabi_ddiv+0x1e8>)
    2dfe:	2600      	movs	r6, #0
    2e00:	469c      	mov	ip, r3
    2e02:	2300      	movs	r3, #0
    2e04:	4464      	add	r4, ip
    2e06:	9303      	str	r3, [sp, #12]
    2e08:	032b      	lsls	r3, r5, #12
    2e0a:	0b1b      	lsrs	r3, r3, #12
    2e0c:	469b      	mov	fp, r3
    2e0e:	006b      	lsls	r3, r5, #1
    2e10:	0fed      	lsrs	r5, r5, #31
    2e12:	4650      	mov	r0, sl
    2e14:	0d5b      	lsrs	r3, r3, #21
    2e16:	9501      	str	r5, [sp, #4]
    2e18:	d05e      	beq.n	2ed8 <__aeabi_ddiv+0x118>
    2e1a:	4a62      	ldr	r2, [pc, #392]	; (2fa4 <__aeabi_ddiv+0x1e4>)
    2e1c:	4293      	cmp	r3, r2
    2e1e:	d053      	beq.n	2ec8 <__aeabi_ddiv+0x108>
    2e20:	465a      	mov	r2, fp
    2e22:	00d1      	lsls	r1, r2, #3
    2e24:	2280      	movs	r2, #128	; 0x80
    2e26:	0f40      	lsrs	r0, r0, #29
    2e28:	0412      	lsls	r2, r2, #16
    2e2a:	4302      	orrs	r2, r0
    2e2c:	430a      	orrs	r2, r1
    2e2e:	4693      	mov	fp, r2
    2e30:	4652      	mov	r2, sl
    2e32:	00d1      	lsls	r1, r2, #3
    2e34:	4a5c      	ldr	r2, [pc, #368]	; (2fa8 <__aeabi_ddiv+0x1e8>)
    2e36:	4694      	mov	ip, r2
    2e38:	2200      	movs	r2, #0
    2e3a:	4463      	add	r3, ip
    2e3c:	0038      	movs	r0, r7
    2e3e:	4068      	eors	r0, r5
    2e40:	4684      	mov	ip, r0
    2e42:	9002      	str	r0, [sp, #8]
    2e44:	1ae4      	subs	r4, r4, r3
    2e46:	4316      	orrs	r6, r2
    2e48:	2e0f      	cmp	r6, #15
    2e4a:	d900      	bls.n	2e4e <__aeabi_ddiv+0x8e>
    2e4c:	e0b4      	b.n	2fb8 <__aeabi_ddiv+0x1f8>
    2e4e:	4b57      	ldr	r3, [pc, #348]	; (2fac <__aeabi_ddiv+0x1ec>)
    2e50:	00b6      	lsls	r6, r6, #2
    2e52:	599b      	ldr	r3, [r3, r6]
    2e54:	469f      	mov	pc, r3
    2e56:	0003      	movs	r3, r0
    2e58:	4333      	orrs	r3, r6
    2e5a:	4699      	mov	r9, r3
    2e5c:	d16c      	bne.n	2f38 <__aeabi_ddiv+0x178>
    2e5e:	2300      	movs	r3, #0
    2e60:	4698      	mov	r8, r3
    2e62:	3302      	adds	r3, #2
    2e64:	2608      	movs	r6, #8
    2e66:	9303      	str	r3, [sp, #12]
    2e68:	e7ce      	b.n	2e08 <__aeabi_ddiv+0x48>
    2e6a:	46cb      	mov	fp, r9
    2e6c:	4641      	mov	r1, r8
    2e6e:	9a03      	ldr	r2, [sp, #12]
    2e70:	9701      	str	r7, [sp, #4]
    2e72:	2a02      	cmp	r2, #2
    2e74:	d165      	bne.n	2f42 <__aeabi_ddiv+0x182>
    2e76:	9b01      	ldr	r3, [sp, #4]
    2e78:	4c4a      	ldr	r4, [pc, #296]	; (2fa4 <__aeabi_ddiv+0x1e4>)
    2e7a:	469c      	mov	ip, r3
    2e7c:	2300      	movs	r3, #0
    2e7e:	2200      	movs	r2, #0
    2e80:	4698      	mov	r8, r3
    2e82:	e06b      	b.n	2f5c <__aeabi_ddiv+0x19c>
    2e84:	0003      	movs	r3, r0
    2e86:	4333      	orrs	r3, r6
    2e88:	4699      	mov	r9, r3
    2e8a:	d04e      	beq.n	2f2a <__aeabi_ddiv+0x16a>
    2e8c:	2e00      	cmp	r6, #0
    2e8e:	d100      	bne.n	2e92 <__aeabi_ddiv+0xd2>
    2e90:	e1bc      	b.n	320c <__aeabi_ddiv+0x44c>
    2e92:	0030      	movs	r0, r6
    2e94:	f001 f8ca 	bl	402c <__clzsi2>
    2e98:	0003      	movs	r3, r0
    2e9a:	3b0b      	subs	r3, #11
    2e9c:	2b1c      	cmp	r3, #28
    2e9e:	dd00      	ble.n	2ea2 <__aeabi_ddiv+0xe2>
    2ea0:	e1ac      	b.n	31fc <__aeabi_ddiv+0x43c>
    2ea2:	221d      	movs	r2, #29
    2ea4:	1ad3      	subs	r3, r2, r3
    2ea6:	465a      	mov	r2, fp
    2ea8:	0001      	movs	r1, r0
    2eaa:	40da      	lsrs	r2, r3
    2eac:	3908      	subs	r1, #8
    2eae:	408e      	lsls	r6, r1
    2eb0:	0013      	movs	r3, r2
    2eb2:	4333      	orrs	r3, r6
    2eb4:	4699      	mov	r9, r3
    2eb6:	465b      	mov	r3, fp
    2eb8:	408b      	lsls	r3, r1
    2eba:	4698      	mov	r8, r3
    2ebc:	2300      	movs	r3, #0
    2ebe:	4c3c      	ldr	r4, [pc, #240]	; (2fb0 <__aeabi_ddiv+0x1f0>)
    2ec0:	2600      	movs	r6, #0
    2ec2:	1a24      	subs	r4, r4, r0
    2ec4:	9303      	str	r3, [sp, #12]
    2ec6:	e79f      	b.n	2e08 <__aeabi_ddiv+0x48>
    2ec8:	4651      	mov	r1, sl
    2eca:	465a      	mov	r2, fp
    2ecc:	4311      	orrs	r1, r2
    2ece:	d129      	bne.n	2f24 <__aeabi_ddiv+0x164>
    2ed0:	2200      	movs	r2, #0
    2ed2:	4693      	mov	fp, r2
    2ed4:	3202      	adds	r2, #2
    2ed6:	e7b1      	b.n	2e3c <__aeabi_ddiv+0x7c>
    2ed8:	4659      	mov	r1, fp
    2eda:	4301      	orrs	r1, r0
    2edc:	d01e      	beq.n	2f1c <__aeabi_ddiv+0x15c>
    2ede:	465b      	mov	r3, fp
    2ee0:	2b00      	cmp	r3, #0
    2ee2:	d100      	bne.n	2ee6 <__aeabi_ddiv+0x126>
    2ee4:	e19e      	b.n	3224 <__aeabi_ddiv+0x464>
    2ee6:	4658      	mov	r0, fp
    2ee8:	f001 f8a0 	bl	402c <__clzsi2>
    2eec:	0003      	movs	r3, r0
    2eee:	3b0b      	subs	r3, #11
    2ef0:	2b1c      	cmp	r3, #28
    2ef2:	dd00      	ble.n	2ef6 <__aeabi_ddiv+0x136>
    2ef4:	e18f      	b.n	3216 <__aeabi_ddiv+0x456>
    2ef6:	0002      	movs	r2, r0
    2ef8:	4659      	mov	r1, fp
    2efa:	3a08      	subs	r2, #8
    2efc:	4091      	lsls	r1, r2
    2efe:	468b      	mov	fp, r1
    2f00:	211d      	movs	r1, #29
    2f02:	1acb      	subs	r3, r1, r3
    2f04:	4651      	mov	r1, sl
    2f06:	40d9      	lsrs	r1, r3
    2f08:	000b      	movs	r3, r1
    2f0a:	4659      	mov	r1, fp
    2f0c:	430b      	orrs	r3, r1
    2f0e:	4651      	mov	r1, sl
    2f10:	469b      	mov	fp, r3
    2f12:	4091      	lsls	r1, r2
    2f14:	4b26      	ldr	r3, [pc, #152]	; (2fb0 <__aeabi_ddiv+0x1f0>)
    2f16:	2200      	movs	r2, #0
    2f18:	1a1b      	subs	r3, r3, r0
    2f1a:	e78f      	b.n	2e3c <__aeabi_ddiv+0x7c>
    2f1c:	2300      	movs	r3, #0
    2f1e:	2201      	movs	r2, #1
    2f20:	469b      	mov	fp, r3
    2f22:	e78b      	b.n	2e3c <__aeabi_ddiv+0x7c>
    2f24:	4651      	mov	r1, sl
    2f26:	2203      	movs	r2, #3
    2f28:	e788      	b.n	2e3c <__aeabi_ddiv+0x7c>
    2f2a:	2300      	movs	r3, #0
    2f2c:	4698      	mov	r8, r3
    2f2e:	3301      	adds	r3, #1
    2f30:	2604      	movs	r6, #4
    2f32:	2400      	movs	r4, #0
    2f34:	9303      	str	r3, [sp, #12]
    2f36:	e767      	b.n	2e08 <__aeabi_ddiv+0x48>
    2f38:	2303      	movs	r3, #3
    2f3a:	46b1      	mov	r9, r6
    2f3c:	9303      	str	r3, [sp, #12]
    2f3e:	260c      	movs	r6, #12
    2f40:	e762      	b.n	2e08 <__aeabi_ddiv+0x48>
    2f42:	2a03      	cmp	r2, #3
    2f44:	d100      	bne.n	2f48 <__aeabi_ddiv+0x188>
    2f46:	e25c      	b.n	3402 <__aeabi_ddiv+0x642>
    2f48:	9b01      	ldr	r3, [sp, #4]
    2f4a:	2a01      	cmp	r2, #1
    2f4c:	d000      	beq.n	2f50 <__aeabi_ddiv+0x190>
    2f4e:	e1e4      	b.n	331a <__aeabi_ddiv+0x55a>
    2f50:	4013      	ands	r3, r2
    2f52:	469c      	mov	ip, r3
    2f54:	2300      	movs	r3, #0
    2f56:	2400      	movs	r4, #0
    2f58:	2200      	movs	r2, #0
    2f5a:	4698      	mov	r8, r3
    2f5c:	2100      	movs	r1, #0
    2f5e:	0312      	lsls	r2, r2, #12
    2f60:	0b13      	lsrs	r3, r2, #12
    2f62:	0d0a      	lsrs	r2, r1, #20
    2f64:	0512      	lsls	r2, r2, #20
    2f66:	431a      	orrs	r2, r3
    2f68:	0523      	lsls	r3, r4, #20
    2f6a:	4c12      	ldr	r4, [pc, #72]	; (2fb4 <__aeabi_ddiv+0x1f4>)
    2f6c:	4640      	mov	r0, r8
    2f6e:	4022      	ands	r2, r4
    2f70:	4313      	orrs	r3, r2
    2f72:	4662      	mov	r2, ip
    2f74:	005b      	lsls	r3, r3, #1
    2f76:	07d2      	lsls	r2, r2, #31
    2f78:	085b      	lsrs	r3, r3, #1
    2f7a:	4313      	orrs	r3, r2
    2f7c:	0019      	movs	r1, r3
    2f7e:	b007      	add	sp, #28
    2f80:	bc3c      	pop	{r2, r3, r4, r5}
    2f82:	4690      	mov	r8, r2
    2f84:	4699      	mov	r9, r3
    2f86:	46a2      	mov	sl, r4
    2f88:	46ab      	mov	fp, r5
    2f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2f8c:	2300      	movs	r3, #0
    2f8e:	2280      	movs	r2, #128	; 0x80
    2f90:	469c      	mov	ip, r3
    2f92:	0312      	lsls	r2, r2, #12
    2f94:	4698      	mov	r8, r3
    2f96:	4c03      	ldr	r4, [pc, #12]	; (2fa4 <__aeabi_ddiv+0x1e4>)
    2f98:	e7e0      	b.n	2f5c <__aeabi_ddiv+0x19c>
    2f9a:	2300      	movs	r3, #0
    2f9c:	4c01      	ldr	r4, [pc, #4]	; (2fa4 <__aeabi_ddiv+0x1e4>)
    2f9e:	2200      	movs	r2, #0
    2fa0:	4698      	mov	r8, r3
    2fa2:	e7db      	b.n	2f5c <__aeabi_ddiv+0x19c>
    2fa4:	000007ff 	.word	0x000007ff
    2fa8:	fffffc01 	.word	0xfffffc01
    2fac:	000088b8 	.word	0x000088b8
    2fb0:	fffffc0d 	.word	0xfffffc0d
    2fb4:	800fffff 	.word	0x800fffff
    2fb8:	45d9      	cmp	r9, fp
    2fba:	d900      	bls.n	2fbe <__aeabi_ddiv+0x1fe>
    2fbc:	e139      	b.n	3232 <__aeabi_ddiv+0x472>
    2fbe:	d100      	bne.n	2fc2 <__aeabi_ddiv+0x202>
    2fc0:	e134      	b.n	322c <__aeabi_ddiv+0x46c>
    2fc2:	2300      	movs	r3, #0
    2fc4:	4646      	mov	r6, r8
    2fc6:	464d      	mov	r5, r9
    2fc8:	469a      	mov	sl, r3
    2fca:	3c01      	subs	r4, #1
    2fcc:	465b      	mov	r3, fp
    2fce:	0e0a      	lsrs	r2, r1, #24
    2fd0:	021b      	lsls	r3, r3, #8
    2fd2:	431a      	orrs	r2, r3
    2fd4:	020b      	lsls	r3, r1, #8
    2fd6:	0c17      	lsrs	r7, r2, #16
    2fd8:	9303      	str	r3, [sp, #12]
    2fda:	0413      	lsls	r3, r2, #16
    2fdc:	0c1b      	lsrs	r3, r3, #16
    2fde:	0039      	movs	r1, r7
    2fe0:	0028      	movs	r0, r5
    2fe2:	4690      	mov	r8, r2
    2fe4:	9301      	str	r3, [sp, #4]
    2fe6:	f7ff fb25 	bl	2634 <__udivsi3>
    2fea:	0002      	movs	r2, r0
    2fec:	9b01      	ldr	r3, [sp, #4]
    2fee:	4683      	mov	fp, r0
    2ff0:	435a      	muls	r2, r3
    2ff2:	0028      	movs	r0, r5
    2ff4:	0039      	movs	r1, r7
    2ff6:	4691      	mov	r9, r2
    2ff8:	f7ff fba2 	bl	2740 <__aeabi_uidivmod>
    2ffc:	0c35      	lsrs	r5, r6, #16
    2ffe:	0409      	lsls	r1, r1, #16
    3000:	430d      	orrs	r5, r1
    3002:	45a9      	cmp	r9, r5
    3004:	d90d      	bls.n	3022 <__aeabi_ddiv+0x262>
    3006:	465b      	mov	r3, fp
    3008:	4445      	add	r5, r8
    300a:	3b01      	subs	r3, #1
    300c:	45a8      	cmp	r8, r5
    300e:	d900      	bls.n	3012 <__aeabi_ddiv+0x252>
    3010:	e13a      	b.n	3288 <__aeabi_ddiv+0x4c8>
    3012:	45a9      	cmp	r9, r5
    3014:	d800      	bhi.n	3018 <__aeabi_ddiv+0x258>
    3016:	e137      	b.n	3288 <__aeabi_ddiv+0x4c8>
    3018:	2302      	movs	r3, #2
    301a:	425b      	negs	r3, r3
    301c:	469c      	mov	ip, r3
    301e:	4445      	add	r5, r8
    3020:	44e3      	add	fp, ip
    3022:	464b      	mov	r3, r9
    3024:	1aeb      	subs	r3, r5, r3
    3026:	0039      	movs	r1, r7
    3028:	0018      	movs	r0, r3
    302a:	9304      	str	r3, [sp, #16]
    302c:	f7ff fb02 	bl	2634 <__udivsi3>
    3030:	9b01      	ldr	r3, [sp, #4]
    3032:	0005      	movs	r5, r0
    3034:	4343      	muls	r3, r0
    3036:	0039      	movs	r1, r7
    3038:	9804      	ldr	r0, [sp, #16]
    303a:	4699      	mov	r9, r3
    303c:	f7ff fb80 	bl	2740 <__aeabi_uidivmod>
    3040:	0433      	lsls	r3, r6, #16
    3042:	0409      	lsls	r1, r1, #16
    3044:	0c1b      	lsrs	r3, r3, #16
    3046:	430b      	orrs	r3, r1
    3048:	4599      	cmp	r9, r3
    304a:	d909      	bls.n	3060 <__aeabi_ddiv+0x2a0>
    304c:	4443      	add	r3, r8
    304e:	1e6a      	subs	r2, r5, #1
    3050:	4598      	cmp	r8, r3
    3052:	d900      	bls.n	3056 <__aeabi_ddiv+0x296>
    3054:	e11a      	b.n	328c <__aeabi_ddiv+0x4cc>
    3056:	4599      	cmp	r9, r3
    3058:	d800      	bhi.n	305c <__aeabi_ddiv+0x29c>
    305a:	e117      	b.n	328c <__aeabi_ddiv+0x4cc>
    305c:	3d02      	subs	r5, #2
    305e:	4443      	add	r3, r8
    3060:	464a      	mov	r2, r9
    3062:	1a9b      	subs	r3, r3, r2
    3064:	465a      	mov	r2, fp
    3066:	0412      	lsls	r2, r2, #16
    3068:	432a      	orrs	r2, r5
    306a:	9903      	ldr	r1, [sp, #12]
    306c:	4693      	mov	fp, r2
    306e:	0c10      	lsrs	r0, r2, #16
    3070:	0c0a      	lsrs	r2, r1, #16
    3072:	4691      	mov	r9, r2
    3074:	0409      	lsls	r1, r1, #16
    3076:	465a      	mov	r2, fp
    3078:	0c09      	lsrs	r1, r1, #16
    307a:	464e      	mov	r6, r9
    307c:	000d      	movs	r5, r1
    307e:	0412      	lsls	r2, r2, #16
    3080:	0c12      	lsrs	r2, r2, #16
    3082:	4345      	muls	r5, r0
    3084:	9105      	str	r1, [sp, #20]
    3086:	4351      	muls	r1, r2
    3088:	4372      	muls	r2, r6
    308a:	4370      	muls	r0, r6
    308c:	1952      	adds	r2, r2, r5
    308e:	0c0e      	lsrs	r6, r1, #16
    3090:	18b2      	adds	r2, r6, r2
    3092:	4295      	cmp	r5, r2
    3094:	d903      	bls.n	309e <__aeabi_ddiv+0x2de>
    3096:	2580      	movs	r5, #128	; 0x80
    3098:	026d      	lsls	r5, r5, #9
    309a:	46ac      	mov	ip, r5
    309c:	4460      	add	r0, ip
    309e:	0c15      	lsrs	r5, r2, #16
    30a0:	0409      	lsls	r1, r1, #16
    30a2:	0412      	lsls	r2, r2, #16
    30a4:	0c09      	lsrs	r1, r1, #16
    30a6:	1828      	adds	r0, r5, r0
    30a8:	1852      	adds	r2, r2, r1
    30aa:	4283      	cmp	r3, r0
    30ac:	d200      	bcs.n	30b0 <__aeabi_ddiv+0x2f0>
    30ae:	e0ce      	b.n	324e <__aeabi_ddiv+0x48e>
    30b0:	d100      	bne.n	30b4 <__aeabi_ddiv+0x2f4>
    30b2:	e0c8      	b.n	3246 <__aeabi_ddiv+0x486>
    30b4:	1a1d      	subs	r5, r3, r0
    30b6:	4653      	mov	r3, sl
    30b8:	1a9e      	subs	r6, r3, r2
    30ba:	45b2      	cmp	sl, r6
    30bc:	4192      	sbcs	r2, r2
    30be:	4252      	negs	r2, r2
    30c0:	1aab      	subs	r3, r5, r2
    30c2:	469a      	mov	sl, r3
    30c4:	4598      	cmp	r8, r3
    30c6:	d100      	bne.n	30ca <__aeabi_ddiv+0x30a>
    30c8:	e117      	b.n	32fa <__aeabi_ddiv+0x53a>
    30ca:	0039      	movs	r1, r7
    30cc:	0018      	movs	r0, r3
    30ce:	f7ff fab1 	bl	2634 <__udivsi3>
    30d2:	9b01      	ldr	r3, [sp, #4]
    30d4:	0005      	movs	r5, r0
    30d6:	4343      	muls	r3, r0
    30d8:	0039      	movs	r1, r7
    30da:	4650      	mov	r0, sl
    30dc:	9304      	str	r3, [sp, #16]
    30de:	f7ff fb2f 	bl	2740 <__aeabi_uidivmod>
    30e2:	9804      	ldr	r0, [sp, #16]
    30e4:	040b      	lsls	r3, r1, #16
    30e6:	0c31      	lsrs	r1, r6, #16
    30e8:	4319      	orrs	r1, r3
    30ea:	4288      	cmp	r0, r1
    30ec:	d909      	bls.n	3102 <__aeabi_ddiv+0x342>
    30ee:	4441      	add	r1, r8
    30f0:	1e6b      	subs	r3, r5, #1
    30f2:	4588      	cmp	r8, r1
    30f4:	d900      	bls.n	30f8 <__aeabi_ddiv+0x338>
    30f6:	e107      	b.n	3308 <__aeabi_ddiv+0x548>
    30f8:	4288      	cmp	r0, r1
    30fa:	d800      	bhi.n	30fe <__aeabi_ddiv+0x33e>
    30fc:	e104      	b.n	3308 <__aeabi_ddiv+0x548>
    30fe:	3d02      	subs	r5, #2
    3100:	4441      	add	r1, r8
    3102:	9b04      	ldr	r3, [sp, #16]
    3104:	1acb      	subs	r3, r1, r3
    3106:	0018      	movs	r0, r3
    3108:	0039      	movs	r1, r7
    310a:	9304      	str	r3, [sp, #16]
    310c:	f7ff fa92 	bl	2634 <__udivsi3>
    3110:	9b01      	ldr	r3, [sp, #4]
    3112:	4682      	mov	sl, r0
    3114:	4343      	muls	r3, r0
    3116:	0039      	movs	r1, r7
    3118:	9804      	ldr	r0, [sp, #16]
    311a:	9301      	str	r3, [sp, #4]
    311c:	f7ff fb10 	bl	2740 <__aeabi_uidivmod>
    3120:	9801      	ldr	r0, [sp, #4]
    3122:	040b      	lsls	r3, r1, #16
    3124:	0431      	lsls	r1, r6, #16
    3126:	0c09      	lsrs	r1, r1, #16
    3128:	4319      	orrs	r1, r3
    312a:	4288      	cmp	r0, r1
    312c:	d90d      	bls.n	314a <__aeabi_ddiv+0x38a>
    312e:	4653      	mov	r3, sl
    3130:	4441      	add	r1, r8
    3132:	3b01      	subs	r3, #1
    3134:	4588      	cmp	r8, r1
    3136:	d900      	bls.n	313a <__aeabi_ddiv+0x37a>
    3138:	e0e8      	b.n	330c <__aeabi_ddiv+0x54c>
    313a:	4288      	cmp	r0, r1
    313c:	d800      	bhi.n	3140 <__aeabi_ddiv+0x380>
    313e:	e0e5      	b.n	330c <__aeabi_ddiv+0x54c>
    3140:	2302      	movs	r3, #2
    3142:	425b      	negs	r3, r3
    3144:	469c      	mov	ip, r3
    3146:	4441      	add	r1, r8
    3148:	44e2      	add	sl, ip
    314a:	9b01      	ldr	r3, [sp, #4]
    314c:	042d      	lsls	r5, r5, #16
    314e:	1ace      	subs	r6, r1, r3
    3150:	4651      	mov	r1, sl
    3152:	4329      	orrs	r1, r5
    3154:	9d05      	ldr	r5, [sp, #20]
    3156:	464f      	mov	r7, r9
    3158:	002a      	movs	r2, r5
    315a:	040b      	lsls	r3, r1, #16
    315c:	0c08      	lsrs	r0, r1, #16
    315e:	0c1b      	lsrs	r3, r3, #16
    3160:	435a      	muls	r2, r3
    3162:	4345      	muls	r5, r0
    3164:	437b      	muls	r3, r7
    3166:	4378      	muls	r0, r7
    3168:	195b      	adds	r3, r3, r5
    316a:	0c17      	lsrs	r7, r2, #16
    316c:	18fb      	adds	r3, r7, r3
    316e:	429d      	cmp	r5, r3
    3170:	d903      	bls.n	317a <__aeabi_ddiv+0x3ba>
    3172:	2580      	movs	r5, #128	; 0x80
    3174:	026d      	lsls	r5, r5, #9
    3176:	46ac      	mov	ip, r5
    3178:	4460      	add	r0, ip
    317a:	0c1d      	lsrs	r5, r3, #16
    317c:	0412      	lsls	r2, r2, #16
    317e:	041b      	lsls	r3, r3, #16
    3180:	0c12      	lsrs	r2, r2, #16
    3182:	1828      	adds	r0, r5, r0
    3184:	189b      	adds	r3, r3, r2
    3186:	4286      	cmp	r6, r0
    3188:	d200      	bcs.n	318c <__aeabi_ddiv+0x3cc>
    318a:	e093      	b.n	32b4 <__aeabi_ddiv+0x4f4>
    318c:	d100      	bne.n	3190 <__aeabi_ddiv+0x3d0>
    318e:	e08e      	b.n	32ae <__aeabi_ddiv+0x4ee>
    3190:	2301      	movs	r3, #1
    3192:	4319      	orrs	r1, r3
    3194:	4ba0      	ldr	r3, [pc, #640]	; (3418 <__aeabi_ddiv+0x658>)
    3196:	18e3      	adds	r3, r4, r3
    3198:	2b00      	cmp	r3, #0
    319a:	dc00      	bgt.n	319e <__aeabi_ddiv+0x3de>
    319c:	e099      	b.n	32d2 <__aeabi_ddiv+0x512>
    319e:	074a      	lsls	r2, r1, #29
    31a0:	d000      	beq.n	31a4 <__aeabi_ddiv+0x3e4>
    31a2:	e09e      	b.n	32e2 <__aeabi_ddiv+0x522>
    31a4:	465a      	mov	r2, fp
    31a6:	01d2      	lsls	r2, r2, #7
    31a8:	d506      	bpl.n	31b8 <__aeabi_ddiv+0x3f8>
    31aa:	465a      	mov	r2, fp
    31ac:	4b9b      	ldr	r3, [pc, #620]	; (341c <__aeabi_ddiv+0x65c>)
    31ae:	401a      	ands	r2, r3
    31b0:	2380      	movs	r3, #128	; 0x80
    31b2:	4693      	mov	fp, r2
    31b4:	00db      	lsls	r3, r3, #3
    31b6:	18e3      	adds	r3, r4, r3
    31b8:	4a99      	ldr	r2, [pc, #612]	; (3420 <__aeabi_ddiv+0x660>)
    31ba:	4293      	cmp	r3, r2
    31bc:	dd68      	ble.n	3290 <__aeabi_ddiv+0x4d0>
    31be:	2301      	movs	r3, #1
    31c0:	9a02      	ldr	r2, [sp, #8]
    31c2:	4c98      	ldr	r4, [pc, #608]	; (3424 <__aeabi_ddiv+0x664>)
    31c4:	401a      	ands	r2, r3
    31c6:	2300      	movs	r3, #0
    31c8:	4694      	mov	ip, r2
    31ca:	4698      	mov	r8, r3
    31cc:	2200      	movs	r2, #0
    31ce:	e6c5      	b.n	2f5c <__aeabi_ddiv+0x19c>
    31d0:	2280      	movs	r2, #128	; 0x80
    31d2:	464b      	mov	r3, r9
    31d4:	0312      	lsls	r2, r2, #12
    31d6:	4213      	tst	r3, r2
    31d8:	d00a      	beq.n	31f0 <__aeabi_ddiv+0x430>
    31da:	465b      	mov	r3, fp
    31dc:	4213      	tst	r3, r2
    31de:	d106      	bne.n	31ee <__aeabi_ddiv+0x42e>
    31e0:	431a      	orrs	r2, r3
    31e2:	0312      	lsls	r2, r2, #12
    31e4:	0b12      	lsrs	r2, r2, #12
    31e6:	46ac      	mov	ip, r5
    31e8:	4688      	mov	r8, r1
    31ea:	4c8e      	ldr	r4, [pc, #568]	; (3424 <__aeabi_ddiv+0x664>)
    31ec:	e6b6      	b.n	2f5c <__aeabi_ddiv+0x19c>
    31ee:	464b      	mov	r3, r9
    31f0:	431a      	orrs	r2, r3
    31f2:	0312      	lsls	r2, r2, #12
    31f4:	0b12      	lsrs	r2, r2, #12
    31f6:	46bc      	mov	ip, r7
    31f8:	4c8a      	ldr	r4, [pc, #552]	; (3424 <__aeabi_ddiv+0x664>)
    31fa:	e6af      	b.n	2f5c <__aeabi_ddiv+0x19c>
    31fc:	0003      	movs	r3, r0
    31fe:	465a      	mov	r2, fp
    3200:	3b28      	subs	r3, #40	; 0x28
    3202:	409a      	lsls	r2, r3
    3204:	2300      	movs	r3, #0
    3206:	4691      	mov	r9, r2
    3208:	4698      	mov	r8, r3
    320a:	e657      	b.n	2ebc <__aeabi_ddiv+0xfc>
    320c:	4658      	mov	r0, fp
    320e:	f000 ff0d 	bl	402c <__clzsi2>
    3212:	3020      	adds	r0, #32
    3214:	e640      	b.n	2e98 <__aeabi_ddiv+0xd8>
    3216:	0003      	movs	r3, r0
    3218:	4652      	mov	r2, sl
    321a:	3b28      	subs	r3, #40	; 0x28
    321c:	409a      	lsls	r2, r3
    321e:	2100      	movs	r1, #0
    3220:	4693      	mov	fp, r2
    3222:	e677      	b.n	2f14 <__aeabi_ddiv+0x154>
    3224:	f000 ff02 	bl	402c <__clzsi2>
    3228:	3020      	adds	r0, #32
    322a:	e65f      	b.n	2eec <__aeabi_ddiv+0x12c>
    322c:	4588      	cmp	r8, r1
    322e:	d200      	bcs.n	3232 <__aeabi_ddiv+0x472>
    3230:	e6c7      	b.n	2fc2 <__aeabi_ddiv+0x202>
    3232:	464b      	mov	r3, r9
    3234:	07de      	lsls	r6, r3, #31
    3236:	085d      	lsrs	r5, r3, #1
    3238:	4643      	mov	r3, r8
    323a:	085b      	lsrs	r3, r3, #1
    323c:	431e      	orrs	r6, r3
    323e:	4643      	mov	r3, r8
    3240:	07db      	lsls	r3, r3, #31
    3242:	469a      	mov	sl, r3
    3244:	e6c2      	b.n	2fcc <__aeabi_ddiv+0x20c>
    3246:	2500      	movs	r5, #0
    3248:	4592      	cmp	sl, r2
    324a:	d300      	bcc.n	324e <__aeabi_ddiv+0x48e>
    324c:	e733      	b.n	30b6 <__aeabi_ddiv+0x2f6>
    324e:	9e03      	ldr	r6, [sp, #12]
    3250:	4659      	mov	r1, fp
    3252:	46b4      	mov	ip, r6
    3254:	44e2      	add	sl, ip
    3256:	45b2      	cmp	sl, r6
    3258:	41ad      	sbcs	r5, r5
    325a:	426d      	negs	r5, r5
    325c:	4445      	add	r5, r8
    325e:	18eb      	adds	r3, r5, r3
    3260:	3901      	subs	r1, #1
    3262:	4598      	cmp	r8, r3
    3264:	d207      	bcs.n	3276 <__aeabi_ddiv+0x4b6>
    3266:	4298      	cmp	r0, r3
    3268:	d900      	bls.n	326c <__aeabi_ddiv+0x4ac>
    326a:	e07f      	b.n	336c <__aeabi_ddiv+0x5ac>
    326c:	d100      	bne.n	3270 <__aeabi_ddiv+0x4b0>
    326e:	e0bc      	b.n	33ea <__aeabi_ddiv+0x62a>
    3270:	1a1d      	subs	r5, r3, r0
    3272:	468b      	mov	fp, r1
    3274:	e71f      	b.n	30b6 <__aeabi_ddiv+0x2f6>
    3276:	4598      	cmp	r8, r3
    3278:	d1fa      	bne.n	3270 <__aeabi_ddiv+0x4b0>
    327a:	9d03      	ldr	r5, [sp, #12]
    327c:	4555      	cmp	r5, sl
    327e:	d9f2      	bls.n	3266 <__aeabi_ddiv+0x4a6>
    3280:	4643      	mov	r3, r8
    3282:	468b      	mov	fp, r1
    3284:	1a1d      	subs	r5, r3, r0
    3286:	e716      	b.n	30b6 <__aeabi_ddiv+0x2f6>
    3288:	469b      	mov	fp, r3
    328a:	e6ca      	b.n	3022 <__aeabi_ddiv+0x262>
    328c:	0015      	movs	r5, r2
    328e:	e6e7      	b.n	3060 <__aeabi_ddiv+0x2a0>
    3290:	465a      	mov	r2, fp
    3292:	08c9      	lsrs	r1, r1, #3
    3294:	0752      	lsls	r2, r2, #29
    3296:	430a      	orrs	r2, r1
    3298:	055b      	lsls	r3, r3, #21
    329a:	4690      	mov	r8, r2
    329c:	0d5c      	lsrs	r4, r3, #21
    329e:	465a      	mov	r2, fp
    32a0:	2301      	movs	r3, #1
    32a2:	9902      	ldr	r1, [sp, #8]
    32a4:	0252      	lsls	r2, r2, #9
    32a6:	4019      	ands	r1, r3
    32a8:	0b12      	lsrs	r2, r2, #12
    32aa:	468c      	mov	ip, r1
    32ac:	e656      	b.n	2f5c <__aeabi_ddiv+0x19c>
    32ae:	2b00      	cmp	r3, #0
    32b0:	d100      	bne.n	32b4 <__aeabi_ddiv+0x4f4>
    32b2:	e76f      	b.n	3194 <__aeabi_ddiv+0x3d4>
    32b4:	4446      	add	r6, r8
    32b6:	1e4a      	subs	r2, r1, #1
    32b8:	45b0      	cmp	r8, r6
    32ba:	d929      	bls.n	3310 <__aeabi_ddiv+0x550>
    32bc:	0011      	movs	r1, r2
    32be:	4286      	cmp	r6, r0
    32c0:	d000      	beq.n	32c4 <__aeabi_ddiv+0x504>
    32c2:	e765      	b.n	3190 <__aeabi_ddiv+0x3d0>
    32c4:	9a03      	ldr	r2, [sp, #12]
    32c6:	4293      	cmp	r3, r2
    32c8:	d000      	beq.n	32cc <__aeabi_ddiv+0x50c>
    32ca:	e761      	b.n	3190 <__aeabi_ddiv+0x3d0>
    32cc:	e762      	b.n	3194 <__aeabi_ddiv+0x3d4>
    32ce:	2101      	movs	r1, #1
    32d0:	4249      	negs	r1, r1
    32d2:	2001      	movs	r0, #1
    32d4:	1ac2      	subs	r2, r0, r3
    32d6:	2a38      	cmp	r2, #56	; 0x38
    32d8:	dd21      	ble.n	331e <__aeabi_ddiv+0x55e>
    32da:	9b02      	ldr	r3, [sp, #8]
    32dc:	4003      	ands	r3, r0
    32de:	469c      	mov	ip, r3
    32e0:	e638      	b.n	2f54 <__aeabi_ddiv+0x194>
    32e2:	220f      	movs	r2, #15
    32e4:	400a      	ands	r2, r1
    32e6:	2a04      	cmp	r2, #4
    32e8:	d100      	bne.n	32ec <__aeabi_ddiv+0x52c>
    32ea:	e75b      	b.n	31a4 <__aeabi_ddiv+0x3e4>
    32ec:	000a      	movs	r2, r1
    32ee:	1d11      	adds	r1, r2, #4
    32f0:	4291      	cmp	r1, r2
    32f2:	4192      	sbcs	r2, r2
    32f4:	4252      	negs	r2, r2
    32f6:	4493      	add	fp, r2
    32f8:	e754      	b.n	31a4 <__aeabi_ddiv+0x3e4>
    32fa:	4b47      	ldr	r3, [pc, #284]	; (3418 <__aeabi_ddiv+0x658>)
    32fc:	18e3      	adds	r3, r4, r3
    32fe:	2b00      	cmp	r3, #0
    3300:	dde5      	ble.n	32ce <__aeabi_ddiv+0x50e>
    3302:	2201      	movs	r2, #1
    3304:	4252      	negs	r2, r2
    3306:	e7f2      	b.n	32ee <__aeabi_ddiv+0x52e>
    3308:	001d      	movs	r5, r3
    330a:	e6fa      	b.n	3102 <__aeabi_ddiv+0x342>
    330c:	469a      	mov	sl, r3
    330e:	e71c      	b.n	314a <__aeabi_ddiv+0x38a>
    3310:	42b0      	cmp	r0, r6
    3312:	d839      	bhi.n	3388 <__aeabi_ddiv+0x5c8>
    3314:	d06e      	beq.n	33f4 <__aeabi_ddiv+0x634>
    3316:	0011      	movs	r1, r2
    3318:	e73a      	b.n	3190 <__aeabi_ddiv+0x3d0>
    331a:	9302      	str	r3, [sp, #8]
    331c:	e73a      	b.n	3194 <__aeabi_ddiv+0x3d4>
    331e:	2a1f      	cmp	r2, #31
    3320:	dc3c      	bgt.n	339c <__aeabi_ddiv+0x5dc>
    3322:	2320      	movs	r3, #32
    3324:	1a9b      	subs	r3, r3, r2
    3326:	000c      	movs	r4, r1
    3328:	4658      	mov	r0, fp
    332a:	4099      	lsls	r1, r3
    332c:	4098      	lsls	r0, r3
    332e:	1e4b      	subs	r3, r1, #1
    3330:	4199      	sbcs	r1, r3
    3332:	465b      	mov	r3, fp
    3334:	40d4      	lsrs	r4, r2
    3336:	40d3      	lsrs	r3, r2
    3338:	4320      	orrs	r0, r4
    333a:	4308      	orrs	r0, r1
    333c:	001a      	movs	r2, r3
    333e:	0743      	lsls	r3, r0, #29
    3340:	d009      	beq.n	3356 <__aeabi_ddiv+0x596>
    3342:	230f      	movs	r3, #15
    3344:	4003      	ands	r3, r0
    3346:	2b04      	cmp	r3, #4
    3348:	d005      	beq.n	3356 <__aeabi_ddiv+0x596>
    334a:	0001      	movs	r1, r0
    334c:	1d08      	adds	r0, r1, #4
    334e:	4288      	cmp	r0, r1
    3350:	419b      	sbcs	r3, r3
    3352:	425b      	negs	r3, r3
    3354:	18d2      	adds	r2, r2, r3
    3356:	0213      	lsls	r3, r2, #8
    3358:	d53a      	bpl.n	33d0 <__aeabi_ddiv+0x610>
    335a:	2301      	movs	r3, #1
    335c:	9a02      	ldr	r2, [sp, #8]
    335e:	2401      	movs	r4, #1
    3360:	401a      	ands	r2, r3
    3362:	2300      	movs	r3, #0
    3364:	4694      	mov	ip, r2
    3366:	4698      	mov	r8, r3
    3368:	2200      	movs	r2, #0
    336a:	e5f7      	b.n	2f5c <__aeabi_ddiv+0x19c>
    336c:	2102      	movs	r1, #2
    336e:	4249      	negs	r1, r1
    3370:	468c      	mov	ip, r1
    3372:	9d03      	ldr	r5, [sp, #12]
    3374:	44e3      	add	fp, ip
    3376:	46ac      	mov	ip, r5
    3378:	44e2      	add	sl, ip
    337a:	45aa      	cmp	sl, r5
    337c:	41ad      	sbcs	r5, r5
    337e:	426d      	negs	r5, r5
    3380:	4445      	add	r5, r8
    3382:	18ed      	adds	r5, r5, r3
    3384:	1a2d      	subs	r5, r5, r0
    3386:	e696      	b.n	30b6 <__aeabi_ddiv+0x2f6>
    3388:	1e8a      	subs	r2, r1, #2
    338a:	9903      	ldr	r1, [sp, #12]
    338c:	004d      	lsls	r5, r1, #1
    338e:	428d      	cmp	r5, r1
    3390:	4189      	sbcs	r1, r1
    3392:	4249      	negs	r1, r1
    3394:	4441      	add	r1, r8
    3396:	1876      	adds	r6, r6, r1
    3398:	9503      	str	r5, [sp, #12]
    339a:	e78f      	b.n	32bc <__aeabi_ddiv+0x4fc>
    339c:	201f      	movs	r0, #31
    339e:	4240      	negs	r0, r0
    33a0:	1ac3      	subs	r3, r0, r3
    33a2:	4658      	mov	r0, fp
    33a4:	40d8      	lsrs	r0, r3
    33a6:	0003      	movs	r3, r0
    33a8:	2a20      	cmp	r2, #32
    33aa:	d028      	beq.n	33fe <__aeabi_ddiv+0x63e>
    33ac:	2040      	movs	r0, #64	; 0x40
    33ae:	465d      	mov	r5, fp
    33b0:	1a82      	subs	r2, r0, r2
    33b2:	4095      	lsls	r5, r2
    33b4:	4329      	orrs	r1, r5
    33b6:	1e4a      	subs	r2, r1, #1
    33b8:	4191      	sbcs	r1, r2
    33ba:	4319      	orrs	r1, r3
    33bc:	2307      	movs	r3, #7
    33be:	2200      	movs	r2, #0
    33c0:	400b      	ands	r3, r1
    33c2:	d009      	beq.n	33d8 <__aeabi_ddiv+0x618>
    33c4:	230f      	movs	r3, #15
    33c6:	2200      	movs	r2, #0
    33c8:	400b      	ands	r3, r1
    33ca:	0008      	movs	r0, r1
    33cc:	2b04      	cmp	r3, #4
    33ce:	d1bd      	bne.n	334c <__aeabi_ddiv+0x58c>
    33d0:	0001      	movs	r1, r0
    33d2:	0753      	lsls	r3, r2, #29
    33d4:	0252      	lsls	r2, r2, #9
    33d6:	0b12      	lsrs	r2, r2, #12
    33d8:	08c9      	lsrs	r1, r1, #3
    33da:	4319      	orrs	r1, r3
    33dc:	2301      	movs	r3, #1
    33de:	4688      	mov	r8, r1
    33e0:	9902      	ldr	r1, [sp, #8]
    33e2:	2400      	movs	r4, #0
    33e4:	4019      	ands	r1, r3
    33e6:	468c      	mov	ip, r1
    33e8:	e5b8      	b.n	2f5c <__aeabi_ddiv+0x19c>
    33ea:	4552      	cmp	r2, sl
    33ec:	d8be      	bhi.n	336c <__aeabi_ddiv+0x5ac>
    33ee:	468b      	mov	fp, r1
    33f0:	2500      	movs	r5, #0
    33f2:	e660      	b.n	30b6 <__aeabi_ddiv+0x2f6>
    33f4:	9d03      	ldr	r5, [sp, #12]
    33f6:	429d      	cmp	r5, r3
    33f8:	d3c6      	bcc.n	3388 <__aeabi_ddiv+0x5c8>
    33fa:	0011      	movs	r1, r2
    33fc:	e762      	b.n	32c4 <__aeabi_ddiv+0x504>
    33fe:	2500      	movs	r5, #0
    3400:	e7d8      	b.n	33b4 <__aeabi_ddiv+0x5f4>
    3402:	2280      	movs	r2, #128	; 0x80
    3404:	465b      	mov	r3, fp
    3406:	0312      	lsls	r2, r2, #12
    3408:	431a      	orrs	r2, r3
    340a:	9b01      	ldr	r3, [sp, #4]
    340c:	0312      	lsls	r2, r2, #12
    340e:	0b12      	lsrs	r2, r2, #12
    3410:	469c      	mov	ip, r3
    3412:	4688      	mov	r8, r1
    3414:	4c03      	ldr	r4, [pc, #12]	; (3424 <__aeabi_ddiv+0x664>)
    3416:	e5a1      	b.n	2f5c <__aeabi_ddiv+0x19c>
    3418:	000003ff 	.word	0x000003ff
    341c:	feffffff 	.word	0xfeffffff
    3420:	000007fe 	.word	0x000007fe
    3424:	000007ff 	.word	0x000007ff

00003428 <__aeabi_dmul>:
    3428:	b5f0      	push	{r4, r5, r6, r7, lr}
    342a:	4657      	mov	r7, sl
    342c:	4645      	mov	r5, r8
    342e:	46de      	mov	lr, fp
    3430:	464e      	mov	r6, r9
    3432:	b5e0      	push	{r5, r6, r7, lr}
    3434:	030c      	lsls	r4, r1, #12
    3436:	4698      	mov	r8, r3
    3438:	004e      	lsls	r6, r1, #1
    343a:	0b23      	lsrs	r3, r4, #12
    343c:	b087      	sub	sp, #28
    343e:	0007      	movs	r7, r0
    3440:	4692      	mov	sl, r2
    3442:	469b      	mov	fp, r3
    3444:	0d76      	lsrs	r6, r6, #21
    3446:	0fcd      	lsrs	r5, r1, #31
    3448:	2e00      	cmp	r6, #0
    344a:	d06b      	beq.n	3524 <__aeabi_dmul+0xfc>
    344c:	4b6d      	ldr	r3, [pc, #436]	; (3604 <__aeabi_dmul+0x1dc>)
    344e:	429e      	cmp	r6, r3
    3450:	d035      	beq.n	34be <__aeabi_dmul+0x96>
    3452:	2480      	movs	r4, #128	; 0x80
    3454:	465b      	mov	r3, fp
    3456:	0f42      	lsrs	r2, r0, #29
    3458:	0424      	lsls	r4, r4, #16
    345a:	00db      	lsls	r3, r3, #3
    345c:	4314      	orrs	r4, r2
    345e:	431c      	orrs	r4, r3
    3460:	00c3      	lsls	r3, r0, #3
    3462:	4699      	mov	r9, r3
    3464:	4b68      	ldr	r3, [pc, #416]	; (3608 <__aeabi_dmul+0x1e0>)
    3466:	46a3      	mov	fp, r4
    3468:	469c      	mov	ip, r3
    346a:	2300      	movs	r3, #0
    346c:	2700      	movs	r7, #0
    346e:	4466      	add	r6, ip
    3470:	9302      	str	r3, [sp, #8]
    3472:	4643      	mov	r3, r8
    3474:	031c      	lsls	r4, r3, #12
    3476:	005a      	lsls	r2, r3, #1
    3478:	0fdb      	lsrs	r3, r3, #31
    347a:	4650      	mov	r0, sl
    347c:	0b24      	lsrs	r4, r4, #12
    347e:	0d52      	lsrs	r2, r2, #21
    3480:	4698      	mov	r8, r3
    3482:	d100      	bne.n	3486 <__aeabi_dmul+0x5e>
    3484:	e076      	b.n	3574 <__aeabi_dmul+0x14c>
    3486:	4b5f      	ldr	r3, [pc, #380]	; (3604 <__aeabi_dmul+0x1dc>)
    3488:	429a      	cmp	r2, r3
    348a:	d06d      	beq.n	3568 <__aeabi_dmul+0x140>
    348c:	2380      	movs	r3, #128	; 0x80
    348e:	0f41      	lsrs	r1, r0, #29
    3490:	041b      	lsls	r3, r3, #16
    3492:	430b      	orrs	r3, r1
    3494:	495c      	ldr	r1, [pc, #368]	; (3608 <__aeabi_dmul+0x1e0>)
    3496:	00e4      	lsls	r4, r4, #3
    3498:	468c      	mov	ip, r1
    349a:	431c      	orrs	r4, r3
    349c:	00c3      	lsls	r3, r0, #3
    349e:	2000      	movs	r0, #0
    34a0:	4462      	add	r2, ip
    34a2:	4641      	mov	r1, r8
    34a4:	18b6      	adds	r6, r6, r2
    34a6:	4069      	eors	r1, r5
    34a8:	1c72      	adds	r2, r6, #1
    34aa:	9101      	str	r1, [sp, #4]
    34ac:	4694      	mov	ip, r2
    34ae:	4307      	orrs	r7, r0
    34b0:	2f0f      	cmp	r7, #15
    34b2:	d900      	bls.n	34b6 <__aeabi_dmul+0x8e>
    34b4:	e0b0      	b.n	3618 <__aeabi_dmul+0x1f0>
    34b6:	4a55      	ldr	r2, [pc, #340]	; (360c <__aeabi_dmul+0x1e4>)
    34b8:	00bf      	lsls	r7, r7, #2
    34ba:	59d2      	ldr	r2, [r2, r7]
    34bc:	4697      	mov	pc, r2
    34be:	465b      	mov	r3, fp
    34c0:	4303      	orrs	r3, r0
    34c2:	4699      	mov	r9, r3
    34c4:	d000      	beq.n	34c8 <__aeabi_dmul+0xa0>
    34c6:	e087      	b.n	35d8 <__aeabi_dmul+0x1b0>
    34c8:	2300      	movs	r3, #0
    34ca:	469b      	mov	fp, r3
    34cc:	3302      	adds	r3, #2
    34ce:	2708      	movs	r7, #8
    34d0:	9302      	str	r3, [sp, #8]
    34d2:	e7ce      	b.n	3472 <__aeabi_dmul+0x4a>
    34d4:	4642      	mov	r2, r8
    34d6:	9201      	str	r2, [sp, #4]
    34d8:	2802      	cmp	r0, #2
    34da:	d067      	beq.n	35ac <__aeabi_dmul+0x184>
    34dc:	2803      	cmp	r0, #3
    34de:	d100      	bne.n	34e2 <__aeabi_dmul+0xba>
    34e0:	e20e      	b.n	3900 <__aeabi_dmul+0x4d8>
    34e2:	2801      	cmp	r0, #1
    34e4:	d000      	beq.n	34e8 <__aeabi_dmul+0xc0>
    34e6:	e162      	b.n	37ae <__aeabi_dmul+0x386>
    34e8:	2300      	movs	r3, #0
    34ea:	2400      	movs	r4, #0
    34ec:	2200      	movs	r2, #0
    34ee:	4699      	mov	r9, r3
    34f0:	9901      	ldr	r1, [sp, #4]
    34f2:	4001      	ands	r1, r0
    34f4:	b2cd      	uxtb	r5, r1
    34f6:	2100      	movs	r1, #0
    34f8:	0312      	lsls	r2, r2, #12
    34fa:	0d0b      	lsrs	r3, r1, #20
    34fc:	0b12      	lsrs	r2, r2, #12
    34fe:	051b      	lsls	r3, r3, #20
    3500:	4313      	orrs	r3, r2
    3502:	4a43      	ldr	r2, [pc, #268]	; (3610 <__aeabi_dmul+0x1e8>)
    3504:	0524      	lsls	r4, r4, #20
    3506:	4013      	ands	r3, r2
    3508:	431c      	orrs	r4, r3
    350a:	0064      	lsls	r4, r4, #1
    350c:	07ed      	lsls	r5, r5, #31
    350e:	0864      	lsrs	r4, r4, #1
    3510:	432c      	orrs	r4, r5
    3512:	4648      	mov	r0, r9
    3514:	0021      	movs	r1, r4
    3516:	b007      	add	sp, #28
    3518:	bc3c      	pop	{r2, r3, r4, r5}
    351a:	4690      	mov	r8, r2
    351c:	4699      	mov	r9, r3
    351e:	46a2      	mov	sl, r4
    3520:	46ab      	mov	fp, r5
    3522:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3524:	4303      	orrs	r3, r0
    3526:	4699      	mov	r9, r3
    3528:	d04f      	beq.n	35ca <__aeabi_dmul+0x1a2>
    352a:	465b      	mov	r3, fp
    352c:	2b00      	cmp	r3, #0
    352e:	d100      	bne.n	3532 <__aeabi_dmul+0x10a>
    3530:	e189      	b.n	3846 <__aeabi_dmul+0x41e>
    3532:	4658      	mov	r0, fp
    3534:	f000 fd7a 	bl	402c <__clzsi2>
    3538:	0003      	movs	r3, r0
    353a:	3b0b      	subs	r3, #11
    353c:	2b1c      	cmp	r3, #28
    353e:	dd00      	ble.n	3542 <__aeabi_dmul+0x11a>
    3540:	e17a      	b.n	3838 <__aeabi_dmul+0x410>
    3542:	221d      	movs	r2, #29
    3544:	1ad3      	subs	r3, r2, r3
    3546:	003a      	movs	r2, r7
    3548:	0001      	movs	r1, r0
    354a:	465c      	mov	r4, fp
    354c:	40da      	lsrs	r2, r3
    354e:	3908      	subs	r1, #8
    3550:	408c      	lsls	r4, r1
    3552:	0013      	movs	r3, r2
    3554:	408f      	lsls	r7, r1
    3556:	4323      	orrs	r3, r4
    3558:	469b      	mov	fp, r3
    355a:	46b9      	mov	r9, r7
    355c:	2300      	movs	r3, #0
    355e:	4e2d      	ldr	r6, [pc, #180]	; (3614 <__aeabi_dmul+0x1ec>)
    3560:	2700      	movs	r7, #0
    3562:	1a36      	subs	r6, r6, r0
    3564:	9302      	str	r3, [sp, #8]
    3566:	e784      	b.n	3472 <__aeabi_dmul+0x4a>
    3568:	4653      	mov	r3, sl
    356a:	4323      	orrs	r3, r4
    356c:	d12a      	bne.n	35c4 <__aeabi_dmul+0x19c>
    356e:	2400      	movs	r4, #0
    3570:	2002      	movs	r0, #2
    3572:	e796      	b.n	34a2 <__aeabi_dmul+0x7a>
    3574:	4653      	mov	r3, sl
    3576:	4323      	orrs	r3, r4
    3578:	d020      	beq.n	35bc <__aeabi_dmul+0x194>
    357a:	2c00      	cmp	r4, #0
    357c:	d100      	bne.n	3580 <__aeabi_dmul+0x158>
    357e:	e157      	b.n	3830 <__aeabi_dmul+0x408>
    3580:	0020      	movs	r0, r4
    3582:	f000 fd53 	bl	402c <__clzsi2>
    3586:	0003      	movs	r3, r0
    3588:	3b0b      	subs	r3, #11
    358a:	2b1c      	cmp	r3, #28
    358c:	dd00      	ble.n	3590 <__aeabi_dmul+0x168>
    358e:	e149      	b.n	3824 <__aeabi_dmul+0x3fc>
    3590:	211d      	movs	r1, #29
    3592:	1acb      	subs	r3, r1, r3
    3594:	4651      	mov	r1, sl
    3596:	0002      	movs	r2, r0
    3598:	40d9      	lsrs	r1, r3
    359a:	4653      	mov	r3, sl
    359c:	3a08      	subs	r2, #8
    359e:	4094      	lsls	r4, r2
    35a0:	4093      	lsls	r3, r2
    35a2:	430c      	orrs	r4, r1
    35a4:	4a1b      	ldr	r2, [pc, #108]	; (3614 <__aeabi_dmul+0x1ec>)
    35a6:	1a12      	subs	r2, r2, r0
    35a8:	2000      	movs	r0, #0
    35aa:	e77a      	b.n	34a2 <__aeabi_dmul+0x7a>
    35ac:	2501      	movs	r5, #1
    35ae:	9b01      	ldr	r3, [sp, #4]
    35b0:	4c14      	ldr	r4, [pc, #80]	; (3604 <__aeabi_dmul+0x1dc>)
    35b2:	401d      	ands	r5, r3
    35b4:	2300      	movs	r3, #0
    35b6:	2200      	movs	r2, #0
    35b8:	4699      	mov	r9, r3
    35ba:	e79c      	b.n	34f6 <__aeabi_dmul+0xce>
    35bc:	2400      	movs	r4, #0
    35be:	2200      	movs	r2, #0
    35c0:	2001      	movs	r0, #1
    35c2:	e76e      	b.n	34a2 <__aeabi_dmul+0x7a>
    35c4:	4653      	mov	r3, sl
    35c6:	2003      	movs	r0, #3
    35c8:	e76b      	b.n	34a2 <__aeabi_dmul+0x7a>
    35ca:	2300      	movs	r3, #0
    35cc:	469b      	mov	fp, r3
    35ce:	3301      	adds	r3, #1
    35d0:	2704      	movs	r7, #4
    35d2:	2600      	movs	r6, #0
    35d4:	9302      	str	r3, [sp, #8]
    35d6:	e74c      	b.n	3472 <__aeabi_dmul+0x4a>
    35d8:	2303      	movs	r3, #3
    35da:	4681      	mov	r9, r0
    35dc:	270c      	movs	r7, #12
    35de:	9302      	str	r3, [sp, #8]
    35e0:	e747      	b.n	3472 <__aeabi_dmul+0x4a>
    35e2:	2280      	movs	r2, #128	; 0x80
    35e4:	2300      	movs	r3, #0
    35e6:	2500      	movs	r5, #0
    35e8:	0312      	lsls	r2, r2, #12
    35ea:	4699      	mov	r9, r3
    35ec:	4c05      	ldr	r4, [pc, #20]	; (3604 <__aeabi_dmul+0x1dc>)
    35ee:	e782      	b.n	34f6 <__aeabi_dmul+0xce>
    35f0:	465c      	mov	r4, fp
    35f2:	464b      	mov	r3, r9
    35f4:	9802      	ldr	r0, [sp, #8]
    35f6:	e76f      	b.n	34d8 <__aeabi_dmul+0xb0>
    35f8:	465c      	mov	r4, fp
    35fa:	464b      	mov	r3, r9
    35fc:	9501      	str	r5, [sp, #4]
    35fe:	9802      	ldr	r0, [sp, #8]
    3600:	e76a      	b.n	34d8 <__aeabi_dmul+0xb0>
    3602:	46c0      	nop			; (mov r8, r8)
    3604:	000007ff 	.word	0x000007ff
    3608:	fffffc01 	.word	0xfffffc01
    360c:	000088f8 	.word	0x000088f8
    3610:	800fffff 	.word	0x800fffff
    3614:	fffffc0d 	.word	0xfffffc0d
    3618:	464a      	mov	r2, r9
    361a:	4649      	mov	r1, r9
    361c:	0c17      	lsrs	r7, r2, #16
    361e:	0c1a      	lsrs	r2, r3, #16
    3620:	041b      	lsls	r3, r3, #16
    3622:	0c1b      	lsrs	r3, r3, #16
    3624:	0408      	lsls	r0, r1, #16
    3626:	0019      	movs	r1, r3
    3628:	0c00      	lsrs	r0, r0, #16
    362a:	4341      	muls	r1, r0
    362c:	0015      	movs	r5, r2
    362e:	4688      	mov	r8, r1
    3630:	0019      	movs	r1, r3
    3632:	437d      	muls	r5, r7
    3634:	4379      	muls	r1, r7
    3636:	9503      	str	r5, [sp, #12]
    3638:	4689      	mov	r9, r1
    363a:	0029      	movs	r1, r5
    363c:	0015      	movs	r5, r2
    363e:	4345      	muls	r5, r0
    3640:	444d      	add	r5, r9
    3642:	9502      	str	r5, [sp, #8]
    3644:	4645      	mov	r5, r8
    3646:	0c2d      	lsrs	r5, r5, #16
    3648:	46aa      	mov	sl, r5
    364a:	9d02      	ldr	r5, [sp, #8]
    364c:	4455      	add	r5, sl
    364e:	45a9      	cmp	r9, r5
    3650:	d906      	bls.n	3660 <__aeabi_dmul+0x238>
    3652:	468a      	mov	sl, r1
    3654:	2180      	movs	r1, #128	; 0x80
    3656:	0249      	lsls	r1, r1, #9
    3658:	4689      	mov	r9, r1
    365a:	44ca      	add	sl, r9
    365c:	4651      	mov	r1, sl
    365e:	9103      	str	r1, [sp, #12]
    3660:	0c29      	lsrs	r1, r5, #16
    3662:	9104      	str	r1, [sp, #16]
    3664:	4641      	mov	r1, r8
    3666:	0409      	lsls	r1, r1, #16
    3668:	042d      	lsls	r5, r5, #16
    366a:	0c09      	lsrs	r1, r1, #16
    366c:	4688      	mov	r8, r1
    366e:	0029      	movs	r1, r5
    3670:	0c25      	lsrs	r5, r4, #16
    3672:	0424      	lsls	r4, r4, #16
    3674:	4441      	add	r1, r8
    3676:	0c24      	lsrs	r4, r4, #16
    3678:	9105      	str	r1, [sp, #20]
    367a:	0021      	movs	r1, r4
    367c:	4341      	muls	r1, r0
    367e:	4688      	mov	r8, r1
    3680:	0021      	movs	r1, r4
    3682:	4379      	muls	r1, r7
    3684:	468a      	mov	sl, r1
    3686:	4368      	muls	r0, r5
    3688:	4641      	mov	r1, r8
    368a:	4450      	add	r0, sl
    368c:	4681      	mov	r9, r0
    368e:	0c08      	lsrs	r0, r1, #16
    3690:	4448      	add	r0, r9
    3692:	436f      	muls	r7, r5
    3694:	4582      	cmp	sl, r0
    3696:	d903      	bls.n	36a0 <__aeabi_dmul+0x278>
    3698:	2180      	movs	r1, #128	; 0x80
    369a:	0249      	lsls	r1, r1, #9
    369c:	4689      	mov	r9, r1
    369e:	444f      	add	r7, r9
    36a0:	0c01      	lsrs	r1, r0, #16
    36a2:	4689      	mov	r9, r1
    36a4:	0039      	movs	r1, r7
    36a6:	4449      	add	r1, r9
    36a8:	9102      	str	r1, [sp, #8]
    36aa:	4641      	mov	r1, r8
    36ac:	040f      	lsls	r7, r1, #16
    36ae:	9904      	ldr	r1, [sp, #16]
    36b0:	0c3f      	lsrs	r7, r7, #16
    36b2:	4688      	mov	r8, r1
    36b4:	0400      	lsls	r0, r0, #16
    36b6:	19c0      	adds	r0, r0, r7
    36b8:	4480      	add	r8, r0
    36ba:	4641      	mov	r1, r8
    36bc:	9104      	str	r1, [sp, #16]
    36be:	4659      	mov	r1, fp
    36c0:	0c0f      	lsrs	r7, r1, #16
    36c2:	0409      	lsls	r1, r1, #16
    36c4:	0c09      	lsrs	r1, r1, #16
    36c6:	4688      	mov	r8, r1
    36c8:	4359      	muls	r1, r3
    36ca:	468a      	mov	sl, r1
    36cc:	0039      	movs	r1, r7
    36ce:	4351      	muls	r1, r2
    36d0:	4689      	mov	r9, r1
    36d2:	4641      	mov	r1, r8
    36d4:	434a      	muls	r2, r1
    36d6:	4651      	mov	r1, sl
    36d8:	0c09      	lsrs	r1, r1, #16
    36da:	468b      	mov	fp, r1
    36dc:	437b      	muls	r3, r7
    36de:	18d2      	adds	r2, r2, r3
    36e0:	445a      	add	r2, fp
    36e2:	4293      	cmp	r3, r2
    36e4:	d903      	bls.n	36ee <__aeabi_dmul+0x2c6>
    36e6:	2380      	movs	r3, #128	; 0x80
    36e8:	025b      	lsls	r3, r3, #9
    36ea:	469b      	mov	fp, r3
    36ec:	44d9      	add	r9, fp
    36ee:	4651      	mov	r1, sl
    36f0:	0409      	lsls	r1, r1, #16
    36f2:	0c09      	lsrs	r1, r1, #16
    36f4:	468a      	mov	sl, r1
    36f6:	4641      	mov	r1, r8
    36f8:	4361      	muls	r1, r4
    36fa:	437c      	muls	r4, r7
    36fc:	0c13      	lsrs	r3, r2, #16
    36fe:	0412      	lsls	r2, r2, #16
    3700:	444b      	add	r3, r9
    3702:	4452      	add	r2, sl
    3704:	46a1      	mov	r9, r4
    3706:	468a      	mov	sl, r1
    3708:	003c      	movs	r4, r7
    370a:	4641      	mov	r1, r8
    370c:	436c      	muls	r4, r5
    370e:	434d      	muls	r5, r1
    3710:	4651      	mov	r1, sl
    3712:	444d      	add	r5, r9
    3714:	0c0f      	lsrs	r7, r1, #16
    3716:	197d      	adds	r5, r7, r5
    3718:	45a9      	cmp	r9, r5
    371a:	d903      	bls.n	3724 <__aeabi_dmul+0x2fc>
    371c:	2180      	movs	r1, #128	; 0x80
    371e:	0249      	lsls	r1, r1, #9
    3720:	4688      	mov	r8, r1
    3722:	4444      	add	r4, r8
    3724:	9f04      	ldr	r7, [sp, #16]
    3726:	9903      	ldr	r1, [sp, #12]
    3728:	46b8      	mov	r8, r7
    372a:	4441      	add	r1, r8
    372c:	468b      	mov	fp, r1
    372e:	4583      	cmp	fp, r0
    3730:	4180      	sbcs	r0, r0
    3732:	4241      	negs	r1, r0
    3734:	4688      	mov	r8, r1
    3736:	4651      	mov	r1, sl
    3738:	0408      	lsls	r0, r1, #16
    373a:	042f      	lsls	r7, r5, #16
    373c:	0c00      	lsrs	r0, r0, #16
    373e:	183f      	adds	r7, r7, r0
    3740:	4658      	mov	r0, fp
    3742:	9902      	ldr	r1, [sp, #8]
    3744:	1810      	adds	r0, r2, r0
    3746:	4689      	mov	r9, r1
    3748:	4290      	cmp	r0, r2
    374a:	4192      	sbcs	r2, r2
    374c:	444f      	add	r7, r9
    374e:	46ba      	mov	sl, r7
    3750:	4252      	negs	r2, r2
    3752:	4699      	mov	r9, r3
    3754:	4693      	mov	fp, r2
    3756:	44c2      	add	sl, r8
    3758:	44d1      	add	r9, sl
    375a:	44cb      	add	fp, r9
    375c:	428f      	cmp	r7, r1
    375e:	41bf      	sbcs	r7, r7
    3760:	45c2      	cmp	sl, r8
    3762:	4189      	sbcs	r1, r1
    3764:	4599      	cmp	r9, r3
    3766:	419b      	sbcs	r3, r3
    3768:	4593      	cmp	fp, r2
    376a:	4192      	sbcs	r2, r2
    376c:	427f      	negs	r7, r7
    376e:	4249      	negs	r1, r1
    3770:	0c2d      	lsrs	r5, r5, #16
    3772:	4252      	negs	r2, r2
    3774:	430f      	orrs	r7, r1
    3776:	425b      	negs	r3, r3
    3778:	4313      	orrs	r3, r2
    377a:	197f      	adds	r7, r7, r5
    377c:	18ff      	adds	r7, r7, r3
    377e:	465b      	mov	r3, fp
    3780:	193c      	adds	r4, r7, r4
    3782:	0ddb      	lsrs	r3, r3, #23
    3784:	9a05      	ldr	r2, [sp, #20]
    3786:	0264      	lsls	r4, r4, #9
    3788:	431c      	orrs	r4, r3
    378a:	0243      	lsls	r3, r0, #9
    378c:	4313      	orrs	r3, r2
    378e:	1e5d      	subs	r5, r3, #1
    3790:	41ab      	sbcs	r3, r5
    3792:	465a      	mov	r2, fp
    3794:	0dc0      	lsrs	r0, r0, #23
    3796:	4303      	orrs	r3, r0
    3798:	0252      	lsls	r2, r2, #9
    379a:	4313      	orrs	r3, r2
    379c:	01e2      	lsls	r2, r4, #7
    379e:	d556      	bpl.n	384e <__aeabi_dmul+0x426>
    37a0:	2001      	movs	r0, #1
    37a2:	085a      	lsrs	r2, r3, #1
    37a4:	4003      	ands	r3, r0
    37a6:	4313      	orrs	r3, r2
    37a8:	07e2      	lsls	r2, r4, #31
    37aa:	4313      	orrs	r3, r2
    37ac:	0864      	lsrs	r4, r4, #1
    37ae:	485a      	ldr	r0, [pc, #360]	; (3918 <__aeabi_dmul+0x4f0>)
    37b0:	4460      	add	r0, ip
    37b2:	2800      	cmp	r0, #0
    37b4:	dd4d      	ble.n	3852 <__aeabi_dmul+0x42a>
    37b6:	075a      	lsls	r2, r3, #29
    37b8:	d009      	beq.n	37ce <__aeabi_dmul+0x3a6>
    37ba:	220f      	movs	r2, #15
    37bc:	401a      	ands	r2, r3
    37be:	2a04      	cmp	r2, #4
    37c0:	d005      	beq.n	37ce <__aeabi_dmul+0x3a6>
    37c2:	1d1a      	adds	r2, r3, #4
    37c4:	429a      	cmp	r2, r3
    37c6:	419b      	sbcs	r3, r3
    37c8:	425b      	negs	r3, r3
    37ca:	18e4      	adds	r4, r4, r3
    37cc:	0013      	movs	r3, r2
    37ce:	01e2      	lsls	r2, r4, #7
    37d0:	d504      	bpl.n	37dc <__aeabi_dmul+0x3b4>
    37d2:	2080      	movs	r0, #128	; 0x80
    37d4:	4a51      	ldr	r2, [pc, #324]	; (391c <__aeabi_dmul+0x4f4>)
    37d6:	00c0      	lsls	r0, r0, #3
    37d8:	4014      	ands	r4, r2
    37da:	4460      	add	r0, ip
    37dc:	4a50      	ldr	r2, [pc, #320]	; (3920 <__aeabi_dmul+0x4f8>)
    37de:	4290      	cmp	r0, r2
    37e0:	dd00      	ble.n	37e4 <__aeabi_dmul+0x3bc>
    37e2:	e6e3      	b.n	35ac <__aeabi_dmul+0x184>
    37e4:	2501      	movs	r5, #1
    37e6:	08db      	lsrs	r3, r3, #3
    37e8:	0762      	lsls	r2, r4, #29
    37ea:	431a      	orrs	r2, r3
    37ec:	0264      	lsls	r4, r4, #9
    37ee:	9b01      	ldr	r3, [sp, #4]
    37f0:	4691      	mov	r9, r2
    37f2:	0b22      	lsrs	r2, r4, #12
    37f4:	0544      	lsls	r4, r0, #21
    37f6:	0d64      	lsrs	r4, r4, #21
    37f8:	401d      	ands	r5, r3
    37fa:	e67c      	b.n	34f6 <__aeabi_dmul+0xce>
    37fc:	2280      	movs	r2, #128	; 0x80
    37fe:	4659      	mov	r1, fp
    3800:	0312      	lsls	r2, r2, #12
    3802:	4211      	tst	r1, r2
    3804:	d008      	beq.n	3818 <__aeabi_dmul+0x3f0>
    3806:	4214      	tst	r4, r2
    3808:	d106      	bne.n	3818 <__aeabi_dmul+0x3f0>
    380a:	4322      	orrs	r2, r4
    380c:	0312      	lsls	r2, r2, #12
    380e:	0b12      	lsrs	r2, r2, #12
    3810:	4645      	mov	r5, r8
    3812:	4699      	mov	r9, r3
    3814:	4c43      	ldr	r4, [pc, #268]	; (3924 <__aeabi_dmul+0x4fc>)
    3816:	e66e      	b.n	34f6 <__aeabi_dmul+0xce>
    3818:	465b      	mov	r3, fp
    381a:	431a      	orrs	r2, r3
    381c:	0312      	lsls	r2, r2, #12
    381e:	0b12      	lsrs	r2, r2, #12
    3820:	4c40      	ldr	r4, [pc, #256]	; (3924 <__aeabi_dmul+0x4fc>)
    3822:	e668      	b.n	34f6 <__aeabi_dmul+0xce>
    3824:	0003      	movs	r3, r0
    3826:	4654      	mov	r4, sl
    3828:	3b28      	subs	r3, #40	; 0x28
    382a:	409c      	lsls	r4, r3
    382c:	2300      	movs	r3, #0
    382e:	e6b9      	b.n	35a4 <__aeabi_dmul+0x17c>
    3830:	f000 fbfc 	bl	402c <__clzsi2>
    3834:	3020      	adds	r0, #32
    3836:	e6a6      	b.n	3586 <__aeabi_dmul+0x15e>
    3838:	0003      	movs	r3, r0
    383a:	3b28      	subs	r3, #40	; 0x28
    383c:	409f      	lsls	r7, r3
    383e:	2300      	movs	r3, #0
    3840:	46bb      	mov	fp, r7
    3842:	4699      	mov	r9, r3
    3844:	e68a      	b.n	355c <__aeabi_dmul+0x134>
    3846:	f000 fbf1 	bl	402c <__clzsi2>
    384a:	3020      	adds	r0, #32
    384c:	e674      	b.n	3538 <__aeabi_dmul+0x110>
    384e:	46b4      	mov	ip, r6
    3850:	e7ad      	b.n	37ae <__aeabi_dmul+0x386>
    3852:	2501      	movs	r5, #1
    3854:	1a2a      	subs	r2, r5, r0
    3856:	2a38      	cmp	r2, #56	; 0x38
    3858:	dd06      	ble.n	3868 <__aeabi_dmul+0x440>
    385a:	9b01      	ldr	r3, [sp, #4]
    385c:	2400      	movs	r4, #0
    385e:	401d      	ands	r5, r3
    3860:	2300      	movs	r3, #0
    3862:	2200      	movs	r2, #0
    3864:	4699      	mov	r9, r3
    3866:	e646      	b.n	34f6 <__aeabi_dmul+0xce>
    3868:	2a1f      	cmp	r2, #31
    386a:	dc21      	bgt.n	38b0 <__aeabi_dmul+0x488>
    386c:	2520      	movs	r5, #32
    386e:	0020      	movs	r0, r4
    3870:	1aad      	subs	r5, r5, r2
    3872:	001e      	movs	r6, r3
    3874:	40ab      	lsls	r3, r5
    3876:	40a8      	lsls	r0, r5
    3878:	40d6      	lsrs	r6, r2
    387a:	1e5d      	subs	r5, r3, #1
    387c:	41ab      	sbcs	r3, r5
    387e:	4330      	orrs	r0, r6
    3880:	4318      	orrs	r0, r3
    3882:	40d4      	lsrs	r4, r2
    3884:	0743      	lsls	r3, r0, #29
    3886:	d009      	beq.n	389c <__aeabi_dmul+0x474>
    3888:	230f      	movs	r3, #15
    388a:	4003      	ands	r3, r0
    388c:	2b04      	cmp	r3, #4
    388e:	d005      	beq.n	389c <__aeabi_dmul+0x474>
    3890:	0003      	movs	r3, r0
    3892:	1d18      	adds	r0, r3, #4
    3894:	4298      	cmp	r0, r3
    3896:	419b      	sbcs	r3, r3
    3898:	425b      	negs	r3, r3
    389a:	18e4      	adds	r4, r4, r3
    389c:	0223      	lsls	r3, r4, #8
    389e:	d521      	bpl.n	38e4 <__aeabi_dmul+0x4bc>
    38a0:	2501      	movs	r5, #1
    38a2:	9b01      	ldr	r3, [sp, #4]
    38a4:	2401      	movs	r4, #1
    38a6:	401d      	ands	r5, r3
    38a8:	2300      	movs	r3, #0
    38aa:	2200      	movs	r2, #0
    38ac:	4699      	mov	r9, r3
    38ae:	e622      	b.n	34f6 <__aeabi_dmul+0xce>
    38b0:	251f      	movs	r5, #31
    38b2:	0021      	movs	r1, r4
    38b4:	426d      	negs	r5, r5
    38b6:	1a28      	subs	r0, r5, r0
    38b8:	40c1      	lsrs	r1, r0
    38ba:	0008      	movs	r0, r1
    38bc:	2a20      	cmp	r2, #32
    38be:	d01d      	beq.n	38fc <__aeabi_dmul+0x4d4>
    38c0:	355f      	adds	r5, #95	; 0x5f
    38c2:	1aaa      	subs	r2, r5, r2
    38c4:	4094      	lsls	r4, r2
    38c6:	4323      	orrs	r3, r4
    38c8:	1e5c      	subs	r4, r3, #1
    38ca:	41a3      	sbcs	r3, r4
    38cc:	2507      	movs	r5, #7
    38ce:	4303      	orrs	r3, r0
    38d0:	401d      	ands	r5, r3
    38d2:	2200      	movs	r2, #0
    38d4:	2d00      	cmp	r5, #0
    38d6:	d009      	beq.n	38ec <__aeabi_dmul+0x4c4>
    38d8:	220f      	movs	r2, #15
    38da:	2400      	movs	r4, #0
    38dc:	401a      	ands	r2, r3
    38de:	0018      	movs	r0, r3
    38e0:	2a04      	cmp	r2, #4
    38e2:	d1d6      	bne.n	3892 <__aeabi_dmul+0x46a>
    38e4:	0003      	movs	r3, r0
    38e6:	0765      	lsls	r5, r4, #29
    38e8:	0264      	lsls	r4, r4, #9
    38ea:	0b22      	lsrs	r2, r4, #12
    38ec:	08db      	lsrs	r3, r3, #3
    38ee:	432b      	orrs	r3, r5
    38f0:	2501      	movs	r5, #1
    38f2:	4699      	mov	r9, r3
    38f4:	9b01      	ldr	r3, [sp, #4]
    38f6:	2400      	movs	r4, #0
    38f8:	401d      	ands	r5, r3
    38fa:	e5fc      	b.n	34f6 <__aeabi_dmul+0xce>
    38fc:	2400      	movs	r4, #0
    38fe:	e7e2      	b.n	38c6 <__aeabi_dmul+0x49e>
    3900:	2280      	movs	r2, #128	; 0x80
    3902:	2501      	movs	r5, #1
    3904:	0312      	lsls	r2, r2, #12
    3906:	4322      	orrs	r2, r4
    3908:	9901      	ldr	r1, [sp, #4]
    390a:	0312      	lsls	r2, r2, #12
    390c:	0b12      	lsrs	r2, r2, #12
    390e:	400d      	ands	r5, r1
    3910:	4699      	mov	r9, r3
    3912:	4c04      	ldr	r4, [pc, #16]	; (3924 <__aeabi_dmul+0x4fc>)
    3914:	e5ef      	b.n	34f6 <__aeabi_dmul+0xce>
    3916:	46c0      	nop			; (mov r8, r8)
    3918:	000003ff 	.word	0x000003ff
    391c:	feffffff 	.word	0xfeffffff
    3920:	000007fe 	.word	0x000007fe
    3924:	000007ff 	.word	0x000007ff

00003928 <__aeabi_dsub>:
    3928:	b5f0      	push	{r4, r5, r6, r7, lr}
    392a:	4646      	mov	r6, r8
    392c:	46d6      	mov	lr, sl
    392e:	464f      	mov	r7, r9
    3930:	030c      	lsls	r4, r1, #12
    3932:	b5c0      	push	{r6, r7, lr}
    3934:	0fcd      	lsrs	r5, r1, #31
    3936:	004e      	lsls	r6, r1, #1
    3938:	0a61      	lsrs	r1, r4, #9
    393a:	0f44      	lsrs	r4, r0, #29
    393c:	430c      	orrs	r4, r1
    393e:	00c1      	lsls	r1, r0, #3
    3940:	0058      	lsls	r0, r3, #1
    3942:	0d40      	lsrs	r0, r0, #21
    3944:	4684      	mov	ip, r0
    3946:	468a      	mov	sl, r1
    3948:	000f      	movs	r7, r1
    394a:	0319      	lsls	r1, r3, #12
    394c:	0f50      	lsrs	r0, r2, #29
    394e:	0a49      	lsrs	r1, r1, #9
    3950:	4301      	orrs	r1, r0
    3952:	48c6      	ldr	r0, [pc, #792]	; (3c6c <__aeabi_dsub+0x344>)
    3954:	0d76      	lsrs	r6, r6, #21
    3956:	46a8      	mov	r8, r5
    3958:	0fdb      	lsrs	r3, r3, #31
    395a:	00d2      	lsls	r2, r2, #3
    395c:	4584      	cmp	ip, r0
    395e:	d100      	bne.n	3962 <__aeabi_dsub+0x3a>
    3960:	e0d8      	b.n	3b14 <__aeabi_dsub+0x1ec>
    3962:	2001      	movs	r0, #1
    3964:	4043      	eors	r3, r0
    3966:	42ab      	cmp	r3, r5
    3968:	d100      	bne.n	396c <__aeabi_dsub+0x44>
    396a:	e0a6      	b.n	3aba <__aeabi_dsub+0x192>
    396c:	4660      	mov	r0, ip
    396e:	1a35      	subs	r5, r6, r0
    3970:	2d00      	cmp	r5, #0
    3972:	dc00      	bgt.n	3976 <__aeabi_dsub+0x4e>
    3974:	e105      	b.n	3b82 <__aeabi_dsub+0x25a>
    3976:	2800      	cmp	r0, #0
    3978:	d110      	bne.n	399c <__aeabi_dsub+0x74>
    397a:	000b      	movs	r3, r1
    397c:	4313      	orrs	r3, r2
    397e:	d100      	bne.n	3982 <__aeabi_dsub+0x5a>
    3980:	e0d7      	b.n	3b32 <__aeabi_dsub+0x20a>
    3982:	1e6b      	subs	r3, r5, #1
    3984:	2b00      	cmp	r3, #0
    3986:	d000      	beq.n	398a <__aeabi_dsub+0x62>
    3988:	e14b      	b.n	3c22 <__aeabi_dsub+0x2fa>
    398a:	4653      	mov	r3, sl
    398c:	1a9f      	subs	r7, r3, r2
    398e:	45ba      	cmp	sl, r7
    3990:	4180      	sbcs	r0, r0
    3992:	1a64      	subs	r4, r4, r1
    3994:	4240      	negs	r0, r0
    3996:	1a24      	subs	r4, r4, r0
    3998:	2601      	movs	r6, #1
    399a:	e01e      	b.n	39da <__aeabi_dsub+0xb2>
    399c:	4bb3      	ldr	r3, [pc, #716]	; (3c6c <__aeabi_dsub+0x344>)
    399e:	429e      	cmp	r6, r3
    39a0:	d048      	beq.n	3a34 <__aeabi_dsub+0x10c>
    39a2:	2380      	movs	r3, #128	; 0x80
    39a4:	041b      	lsls	r3, r3, #16
    39a6:	4319      	orrs	r1, r3
    39a8:	2d38      	cmp	r5, #56	; 0x38
    39aa:	dd00      	ble.n	39ae <__aeabi_dsub+0x86>
    39ac:	e119      	b.n	3be2 <__aeabi_dsub+0x2ba>
    39ae:	2d1f      	cmp	r5, #31
    39b0:	dd00      	ble.n	39b4 <__aeabi_dsub+0x8c>
    39b2:	e14c      	b.n	3c4e <__aeabi_dsub+0x326>
    39b4:	2320      	movs	r3, #32
    39b6:	000f      	movs	r7, r1
    39b8:	1b5b      	subs	r3, r3, r5
    39ba:	0010      	movs	r0, r2
    39bc:	409a      	lsls	r2, r3
    39be:	409f      	lsls	r7, r3
    39c0:	40e8      	lsrs	r0, r5
    39c2:	1e53      	subs	r3, r2, #1
    39c4:	419a      	sbcs	r2, r3
    39c6:	40e9      	lsrs	r1, r5
    39c8:	4307      	orrs	r7, r0
    39ca:	4317      	orrs	r7, r2
    39cc:	4653      	mov	r3, sl
    39ce:	1bdf      	subs	r7, r3, r7
    39d0:	1a61      	subs	r1, r4, r1
    39d2:	45ba      	cmp	sl, r7
    39d4:	41a4      	sbcs	r4, r4
    39d6:	4264      	negs	r4, r4
    39d8:	1b0c      	subs	r4, r1, r4
    39da:	0223      	lsls	r3, r4, #8
    39dc:	d400      	bmi.n	39e0 <__aeabi_dsub+0xb8>
    39de:	e0c5      	b.n	3b6c <__aeabi_dsub+0x244>
    39e0:	0264      	lsls	r4, r4, #9
    39e2:	0a65      	lsrs	r5, r4, #9
    39e4:	2d00      	cmp	r5, #0
    39e6:	d100      	bne.n	39ea <__aeabi_dsub+0xc2>
    39e8:	e0f6      	b.n	3bd8 <__aeabi_dsub+0x2b0>
    39ea:	0028      	movs	r0, r5
    39ec:	f000 fb1e 	bl	402c <__clzsi2>
    39f0:	0003      	movs	r3, r0
    39f2:	3b08      	subs	r3, #8
    39f4:	2b1f      	cmp	r3, #31
    39f6:	dd00      	ble.n	39fa <__aeabi_dsub+0xd2>
    39f8:	e0e9      	b.n	3bce <__aeabi_dsub+0x2a6>
    39fa:	2220      	movs	r2, #32
    39fc:	003c      	movs	r4, r7
    39fe:	1ad2      	subs	r2, r2, r3
    3a00:	409d      	lsls	r5, r3
    3a02:	40d4      	lsrs	r4, r2
    3a04:	409f      	lsls	r7, r3
    3a06:	4325      	orrs	r5, r4
    3a08:	429e      	cmp	r6, r3
    3a0a:	dd00      	ble.n	3a0e <__aeabi_dsub+0xe6>
    3a0c:	e0db      	b.n	3bc6 <__aeabi_dsub+0x29e>
    3a0e:	1b9e      	subs	r6, r3, r6
    3a10:	1c73      	adds	r3, r6, #1
    3a12:	2b1f      	cmp	r3, #31
    3a14:	dd00      	ble.n	3a18 <__aeabi_dsub+0xf0>
    3a16:	e10a      	b.n	3c2e <__aeabi_dsub+0x306>
    3a18:	2220      	movs	r2, #32
    3a1a:	0038      	movs	r0, r7
    3a1c:	1ad2      	subs	r2, r2, r3
    3a1e:	0029      	movs	r1, r5
    3a20:	4097      	lsls	r7, r2
    3a22:	002c      	movs	r4, r5
    3a24:	4091      	lsls	r1, r2
    3a26:	40d8      	lsrs	r0, r3
    3a28:	1e7a      	subs	r2, r7, #1
    3a2a:	4197      	sbcs	r7, r2
    3a2c:	40dc      	lsrs	r4, r3
    3a2e:	2600      	movs	r6, #0
    3a30:	4301      	orrs	r1, r0
    3a32:	430f      	orrs	r7, r1
    3a34:	077b      	lsls	r3, r7, #29
    3a36:	d009      	beq.n	3a4c <__aeabi_dsub+0x124>
    3a38:	230f      	movs	r3, #15
    3a3a:	403b      	ands	r3, r7
    3a3c:	2b04      	cmp	r3, #4
    3a3e:	d005      	beq.n	3a4c <__aeabi_dsub+0x124>
    3a40:	1d3b      	adds	r3, r7, #4
    3a42:	42bb      	cmp	r3, r7
    3a44:	41bf      	sbcs	r7, r7
    3a46:	427f      	negs	r7, r7
    3a48:	19e4      	adds	r4, r4, r7
    3a4a:	001f      	movs	r7, r3
    3a4c:	0223      	lsls	r3, r4, #8
    3a4e:	d525      	bpl.n	3a9c <__aeabi_dsub+0x174>
    3a50:	4b86      	ldr	r3, [pc, #536]	; (3c6c <__aeabi_dsub+0x344>)
    3a52:	3601      	adds	r6, #1
    3a54:	429e      	cmp	r6, r3
    3a56:	d100      	bne.n	3a5a <__aeabi_dsub+0x132>
    3a58:	e0af      	b.n	3bba <__aeabi_dsub+0x292>
    3a5a:	4b85      	ldr	r3, [pc, #532]	; (3c70 <__aeabi_dsub+0x348>)
    3a5c:	2501      	movs	r5, #1
    3a5e:	401c      	ands	r4, r3
    3a60:	4643      	mov	r3, r8
    3a62:	0762      	lsls	r2, r4, #29
    3a64:	08ff      	lsrs	r7, r7, #3
    3a66:	0264      	lsls	r4, r4, #9
    3a68:	0576      	lsls	r6, r6, #21
    3a6a:	4317      	orrs	r7, r2
    3a6c:	0b24      	lsrs	r4, r4, #12
    3a6e:	0d76      	lsrs	r6, r6, #21
    3a70:	401d      	ands	r5, r3
    3a72:	2100      	movs	r1, #0
    3a74:	0324      	lsls	r4, r4, #12
    3a76:	0b23      	lsrs	r3, r4, #12
    3a78:	0d0c      	lsrs	r4, r1, #20
    3a7a:	4a7e      	ldr	r2, [pc, #504]	; (3c74 <__aeabi_dsub+0x34c>)
    3a7c:	0524      	lsls	r4, r4, #20
    3a7e:	431c      	orrs	r4, r3
    3a80:	4014      	ands	r4, r2
    3a82:	0533      	lsls	r3, r6, #20
    3a84:	4323      	orrs	r3, r4
    3a86:	005b      	lsls	r3, r3, #1
    3a88:	07ed      	lsls	r5, r5, #31
    3a8a:	085b      	lsrs	r3, r3, #1
    3a8c:	432b      	orrs	r3, r5
    3a8e:	0038      	movs	r0, r7
    3a90:	0019      	movs	r1, r3
    3a92:	bc1c      	pop	{r2, r3, r4}
    3a94:	4690      	mov	r8, r2
    3a96:	4699      	mov	r9, r3
    3a98:	46a2      	mov	sl, r4
    3a9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3a9c:	2501      	movs	r5, #1
    3a9e:	4643      	mov	r3, r8
    3aa0:	0762      	lsls	r2, r4, #29
    3aa2:	08ff      	lsrs	r7, r7, #3
    3aa4:	4317      	orrs	r7, r2
    3aa6:	08e4      	lsrs	r4, r4, #3
    3aa8:	401d      	ands	r5, r3
    3aaa:	4b70      	ldr	r3, [pc, #448]	; (3c6c <__aeabi_dsub+0x344>)
    3aac:	429e      	cmp	r6, r3
    3aae:	d036      	beq.n	3b1e <__aeabi_dsub+0x1f6>
    3ab0:	0324      	lsls	r4, r4, #12
    3ab2:	0576      	lsls	r6, r6, #21
    3ab4:	0b24      	lsrs	r4, r4, #12
    3ab6:	0d76      	lsrs	r6, r6, #21
    3ab8:	e7db      	b.n	3a72 <__aeabi_dsub+0x14a>
    3aba:	4663      	mov	r3, ip
    3abc:	1af3      	subs	r3, r6, r3
    3abe:	2b00      	cmp	r3, #0
    3ac0:	dc00      	bgt.n	3ac4 <__aeabi_dsub+0x19c>
    3ac2:	e094      	b.n	3bee <__aeabi_dsub+0x2c6>
    3ac4:	4660      	mov	r0, ip
    3ac6:	2800      	cmp	r0, #0
    3ac8:	d035      	beq.n	3b36 <__aeabi_dsub+0x20e>
    3aca:	4868      	ldr	r0, [pc, #416]	; (3c6c <__aeabi_dsub+0x344>)
    3acc:	4286      	cmp	r6, r0
    3ace:	d0b1      	beq.n	3a34 <__aeabi_dsub+0x10c>
    3ad0:	2780      	movs	r7, #128	; 0x80
    3ad2:	043f      	lsls	r7, r7, #16
    3ad4:	4339      	orrs	r1, r7
    3ad6:	2b38      	cmp	r3, #56	; 0x38
    3ad8:	dc00      	bgt.n	3adc <__aeabi_dsub+0x1b4>
    3ada:	e0fd      	b.n	3cd8 <__aeabi_dsub+0x3b0>
    3adc:	430a      	orrs	r2, r1
    3ade:	0017      	movs	r7, r2
    3ae0:	2100      	movs	r1, #0
    3ae2:	1e7a      	subs	r2, r7, #1
    3ae4:	4197      	sbcs	r7, r2
    3ae6:	4457      	add	r7, sl
    3ae8:	4557      	cmp	r7, sl
    3aea:	4180      	sbcs	r0, r0
    3aec:	1909      	adds	r1, r1, r4
    3aee:	4244      	negs	r4, r0
    3af0:	190c      	adds	r4, r1, r4
    3af2:	0223      	lsls	r3, r4, #8
    3af4:	d53a      	bpl.n	3b6c <__aeabi_dsub+0x244>
    3af6:	4b5d      	ldr	r3, [pc, #372]	; (3c6c <__aeabi_dsub+0x344>)
    3af8:	3601      	adds	r6, #1
    3afa:	429e      	cmp	r6, r3
    3afc:	d100      	bne.n	3b00 <__aeabi_dsub+0x1d8>
    3afe:	e14b      	b.n	3d98 <__aeabi_dsub+0x470>
    3b00:	2201      	movs	r2, #1
    3b02:	4b5b      	ldr	r3, [pc, #364]	; (3c70 <__aeabi_dsub+0x348>)
    3b04:	401c      	ands	r4, r3
    3b06:	087b      	lsrs	r3, r7, #1
    3b08:	4017      	ands	r7, r2
    3b0a:	431f      	orrs	r7, r3
    3b0c:	07e2      	lsls	r2, r4, #31
    3b0e:	4317      	orrs	r7, r2
    3b10:	0864      	lsrs	r4, r4, #1
    3b12:	e78f      	b.n	3a34 <__aeabi_dsub+0x10c>
    3b14:	0008      	movs	r0, r1
    3b16:	4310      	orrs	r0, r2
    3b18:	d000      	beq.n	3b1c <__aeabi_dsub+0x1f4>
    3b1a:	e724      	b.n	3966 <__aeabi_dsub+0x3e>
    3b1c:	e721      	b.n	3962 <__aeabi_dsub+0x3a>
    3b1e:	0023      	movs	r3, r4
    3b20:	433b      	orrs	r3, r7
    3b22:	d100      	bne.n	3b26 <__aeabi_dsub+0x1fe>
    3b24:	e1b9      	b.n	3e9a <__aeabi_dsub+0x572>
    3b26:	2280      	movs	r2, #128	; 0x80
    3b28:	0312      	lsls	r2, r2, #12
    3b2a:	4314      	orrs	r4, r2
    3b2c:	0324      	lsls	r4, r4, #12
    3b2e:	0b24      	lsrs	r4, r4, #12
    3b30:	e79f      	b.n	3a72 <__aeabi_dsub+0x14a>
    3b32:	002e      	movs	r6, r5
    3b34:	e77e      	b.n	3a34 <__aeabi_dsub+0x10c>
    3b36:	0008      	movs	r0, r1
    3b38:	4310      	orrs	r0, r2
    3b3a:	d100      	bne.n	3b3e <__aeabi_dsub+0x216>
    3b3c:	e0ca      	b.n	3cd4 <__aeabi_dsub+0x3ac>
    3b3e:	1e58      	subs	r0, r3, #1
    3b40:	4684      	mov	ip, r0
    3b42:	2800      	cmp	r0, #0
    3b44:	d000      	beq.n	3b48 <__aeabi_dsub+0x220>
    3b46:	e0e7      	b.n	3d18 <__aeabi_dsub+0x3f0>
    3b48:	4452      	add	r2, sl
    3b4a:	4552      	cmp	r2, sl
    3b4c:	4180      	sbcs	r0, r0
    3b4e:	1864      	adds	r4, r4, r1
    3b50:	4240      	negs	r0, r0
    3b52:	1824      	adds	r4, r4, r0
    3b54:	0017      	movs	r7, r2
    3b56:	2601      	movs	r6, #1
    3b58:	0223      	lsls	r3, r4, #8
    3b5a:	d507      	bpl.n	3b6c <__aeabi_dsub+0x244>
    3b5c:	2602      	movs	r6, #2
    3b5e:	e7cf      	b.n	3b00 <__aeabi_dsub+0x1d8>
    3b60:	4664      	mov	r4, ip
    3b62:	432c      	orrs	r4, r5
    3b64:	d100      	bne.n	3b68 <__aeabi_dsub+0x240>
    3b66:	e1b3      	b.n	3ed0 <__aeabi_dsub+0x5a8>
    3b68:	002c      	movs	r4, r5
    3b6a:	4667      	mov	r7, ip
    3b6c:	077b      	lsls	r3, r7, #29
    3b6e:	d000      	beq.n	3b72 <__aeabi_dsub+0x24a>
    3b70:	e762      	b.n	3a38 <__aeabi_dsub+0x110>
    3b72:	0763      	lsls	r3, r4, #29
    3b74:	08ff      	lsrs	r7, r7, #3
    3b76:	431f      	orrs	r7, r3
    3b78:	2501      	movs	r5, #1
    3b7a:	4643      	mov	r3, r8
    3b7c:	08e4      	lsrs	r4, r4, #3
    3b7e:	401d      	ands	r5, r3
    3b80:	e793      	b.n	3aaa <__aeabi_dsub+0x182>
    3b82:	2d00      	cmp	r5, #0
    3b84:	d178      	bne.n	3c78 <__aeabi_dsub+0x350>
    3b86:	1c75      	adds	r5, r6, #1
    3b88:	056d      	lsls	r5, r5, #21
    3b8a:	0d6d      	lsrs	r5, r5, #21
    3b8c:	2d01      	cmp	r5, #1
    3b8e:	dc00      	bgt.n	3b92 <__aeabi_dsub+0x26a>
    3b90:	e0f2      	b.n	3d78 <__aeabi_dsub+0x450>
    3b92:	4650      	mov	r0, sl
    3b94:	1a80      	subs	r0, r0, r2
    3b96:	4582      	cmp	sl, r0
    3b98:	41bf      	sbcs	r7, r7
    3b9a:	1a65      	subs	r5, r4, r1
    3b9c:	427f      	negs	r7, r7
    3b9e:	1bed      	subs	r5, r5, r7
    3ba0:	4684      	mov	ip, r0
    3ba2:	0228      	lsls	r0, r5, #8
    3ba4:	d400      	bmi.n	3ba8 <__aeabi_dsub+0x280>
    3ba6:	e08c      	b.n	3cc2 <__aeabi_dsub+0x39a>
    3ba8:	4650      	mov	r0, sl
    3baa:	1a17      	subs	r7, r2, r0
    3bac:	42ba      	cmp	r2, r7
    3bae:	4192      	sbcs	r2, r2
    3bb0:	1b0c      	subs	r4, r1, r4
    3bb2:	4255      	negs	r5, r2
    3bb4:	1b65      	subs	r5, r4, r5
    3bb6:	4698      	mov	r8, r3
    3bb8:	e714      	b.n	39e4 <__aeabi_dsub+0xbc>
    3bba:	2501      	movs	r5, #1
    3bbc:	4643      	mov	r3, r8
    3bbe:	2400      	movs	r4, #0
    3bc0:	401d      	ands	r5, r3
    3bc2:	2700      	movs	r7, #0
    3bc4:	e755      	b.n	3a72 <__aeabi_dsub+0x14a>
    3bc6:	4c2a      	ldr	r4, [pc, #168]	; (3c70 <__aeabi_dsub+0x348>)
    3bc8:	1af6      	subs	r6, r6, r3
    3bca:	402c      	ands	r4, r5
    3bcc:	e732      	b.n	3a34 <__aeabi_dsub+0x10c>
    3bce:	003d      	movs	r5, r7
    3bd0:	3828      	subs	r0, #40	; 0x28
    3bd2:	4085      	lsls	r5, r0
    3bd4:	2700      	movs	r7, #0
    3bd6:	e717      	b.n	3a08 <__aeabi_dsub+0xe0>
    3bd8:	0038      	movs	r0, r7
    3bda:	f000 fa27 	bl	402c <__clzsi2>
    3bde:	3020      	adds	r0, #32
    3be0:	e706      	b.n	39f0 <__aeabi_dsub+0xc8>
    3be2:	430a      	orrs	r2, r1
    3be4:	0017      	movs	r7, r2
    3be6:	2100      	movs	r1, #0
    3be8:	1e7a      	subs	r2, r7, #1
    3bea:	4197      	sbcs	r7, r2
    3bec:	e6ee      	b.n	39cc <__aeabi_dsub+0xa4>
    3bee:	2b00      	cmp	r3, #0
    3bf0:	d000      	beq.n	3bf4 <__aeabi_dsub+0x2cc>
    3bf2:	e0e5      	b.n	3dc0 <__aeabi_dsub+0x498>
    3bf4:	1c73      	adds	r3, r6, #1
    3bf6:	469c      	mov	ip, r3
    3bf8:	055b      	lsls	r3, r3, #21
    3bfa:	0d5b      	lsrs	r3, r3, #21
    3bfc:	2b01      	cmp	r3, #1
    3bfe:	dc00      	bgt.n	3c02 <__aeabi_dsub+0x2da>
    3c00:	e09f      	b.n	3d42 <__aeabi_dsub+0x41a>
    3c02:	4b1a      	ldr	r3, [pc, #104]	; (3c6c <__aeabi_dsub+0x344>)
    3c04:	459c      	cmp	ip, r3
    3c06:	d100      	bne.n	3c0a <__aeabi_dsub+0x2e2>
    3c08:	e0c5      	b.n	3d96 <__aeabi_dsub+0x46e>
    3c0a:	4452      	add	r2, sl
    3c0c:	4552      	cmp	r2, sl
    3c0e:	4180      	sbcs	r0, r0
    3c10:	1864      	adds	r4, r4, r1
    3c12:	4240      	negs	r0, r0
    3c14:	1824      	adds	r4, r4, r0
    3c16:	07e7      	lsls	r7, r4, #31
    3c18:	0852      	lsrs	r2, r2, #1
    3c1a:	4317      	orrs	r7, r2
    3c1c:	0864      	lsrs	r4, r4, #1
    3c1e:	4666      	mov	r6, ip
    3c20:	e708      	b.n	3a34 <__aeabi_dsub+0x10c>
    3c22:	4812      	ldr	r0, [pc, #72]	; (3c6c <__aeabi_dsub+0x344>)
    3c24:	4285      	cmp	r5, r0
    3c26:	d100      	bne.n	3c2a <__aeabi_dsub+0x302>
    3c28:	e085      	b.n	3d36 <__aeabi_dsub+0x40e>
    3c2a:	001d      	movs	r5, r3
    3c2c:	e6bc      	b.n	39a8 <__aeabi_dsub+0x80>
    3c2e:	0029      	movs	r1, r5
    3c30:	3e1f      	subs	r6, #31
    3c32:	40f1      	lsrs	r1, r6
    3c34:	2b20      	cmp	r3, #32
    3c36:	d100      	bne.n	3c3a <__aeabi_dsub+0x312>
    3c38:	e07f      	b.n	3d3a <__aeabi_dsub+0x412>
    3c3a:	2240      	movs	r2, #64	; 0x40
    3c3c:	1ad3      	subs	r3, r2, r3
    3c3e:	409d      	lsls	r5, r3
    3c40:	432f      	orrs	r7, r5
    3c42:	1e7d      	subs	r5, r7, #1
    3c44:	41af      	sbcs	r7, r5
    3c46:	2400      	movs	r4, #0
    3c48:	430f      	orrs	r7, r1
    3c4a:	2600      	movs	r6, #0
    3c4c:	e78e      	b.n	3b6c <__aeabi_dsub+0x244>
    3c4e:	002b      	movs	r3, r5
    3c50:	000f      	movs	r7, r1
    3c52:	3b20      	subs	r3, #32
    3c54:	40df      	lsrs	r7, r3
    3c56:	2d20      	cmp	r5, #32
    3c58:	d071      	beq.n	3d3e <__aeabi_dsub+0x416>
    3c5a:	2340      	movs	r3, #64	; 0x40
    3c5c:	1b5d      	subs	r5, r3, r5
    3c5e:	40a9      	lsls	r1, r5
    3c60:	430a      	orrs	r2, r1
    3c62:	1e51      	subs	r1, r2, #1
    3c64:	418a      	sbcs	r2, r1
    3c66:	2100      	movs	r1, #0
    3c68:	4317      	orrs	r7, r2
    3c6a:	e6af      	b.n	39cc <__aeabi_dsub+0xa4>
    3c6c:	000007ff 	.word	0x000007ff
    3c70:	ff7fffff 	.word	0xff7fffff
    3c74:	800fffff 	.word	0x800fffff
    3c78:	2e00      	cmp	r6, #0
    3c7a:	d03e      	beq.n	3cfa <__aeabi_dsub+0x3d2>
    3c7c:	4eb3      	ldr	r6, [pc, #716]	; (3f4c <__aeabi_dsub+0x624>)
    3c7e:	45b4      	cmp	ip, r6
    3c80:	d045      	beq.n	3d0e <__aeabi_dsub+0x3e6>
    3c82:	2680      	movs	r6, #128	; 0x80
    3c84:	0436      	lsls	r6, r6, #16
    3c86:	426d      	negs	r5, r5
    3c88:	4334      	orrs	r4, r6
    3c8a:	2d38      	cmp	r5, #56	; 0x38
    3c8c:	dd00      	ble.n	3c90 <__aeabi_dsub+0x368>
    3c8e:	e0a8      	b.n	3de2 <__aeabi_dsub+0x4ba>
    3c90:	2d1f      	cmp	r5, #31
    3c92:	dd00      	ble.n	3c96 <__aeabi_dsub+0x36e>
    3c94:	e11f      	b.n	3ed6 <__aeabi_dsub+0x5ae>
    3c96:	2620      	movs	r6, #32
    3c98:	0027      	movs	r7, r4
    3c9a:	4650      	mov	r0, sl
    3c9c:	1b76      	subs	r6, r6, r5
    3c9e:	40b7      	lsls	r7, r6
    3ca0:	40e8      	lsrs	r0, r5
    3ca2:	4307      	orrs	r7, r0
    3ca4:	4650      	mov	r0, sl
    3ca6:	40b0      	lsls	r0, r6
    3ca8:	1e46      	subs	r6, r0, #1
    3caa:	41b0      	sbcs	r0, r6
    3cac:	40ec      	lsrs	r4, r5
    3cae:	4338      	orrs	r0, r7
    3cb0:	1a17      	subs	r7, r2, r0
    3cb2:	42ba      	cmp	r2, r7
    3cb4:	4192      	sbcs	r2, r2
    3cb6:	1b0c      	subs	r4, r1, r4
    3cb8:	4252      	negs	r2, r2
    3cba:	1aa4      	subs	r4, r4, r2
    3cbc:	4666      	mov	r6, ip
    3cbe:	4698      	mov	r8, r3
    3cc0:	e68b      	b.n	39da <__aeabi_dsub+0xb2>
    3cc2:	4664      	mov	r4, ip
    3cc4:	4667      	mov	r7, ip
    3cc6:	432c      	orrs	r4, r5
    3cc8:	d000      	beq.n	3ccc <__aeabi_dsub+0x3a4>
    3cca:	e68b      	b.n	39e4 <__aeabi_dsub+0xbc>
    3ccc:	2500      	movs	r5, #0
    3cce:	2600      	movs	r6, #0
    3cd0:	2700      	movs	r7, #0
    3cd2:	e6ea      	b.n	3aaa <__aeabi_dsub+0x182>
    3cd4:	001e      	movs	r6, r3
    3cd6:	e6ad      	b.n	3a34 <__aeabi_dsub+0x10c>
    3cd8:	2b1f      	cmp	r3, #31
    3cda:	dc60      	bgt.n	3d9e <__aeabi_dsub+0x476>
    3cdc:	2720      	movs	r7, #32
    3cde:	1af8      	subs	r0, r7, r3
    3ce0:	000f      	movs	r7, r1
    3ce2:	4684      	mov	ip, r0
    3ce4:	4087      	lsls	r7, r0
    3ce6:	0010      	movs	r0, r2
    3ce8:	40d8      	lsrs	r0, r3
    3cea:	4307      	orrs	r7, r0
    3cec:	4660      	mov	r0, ip
    3cee:	4082      	lsls	r2, r0
    3cf0:	1e50      	subs	r0, r2, #1
    3cf2:	4182      	sbcs	r2, r0
    3cf4:	40d9      	lsrs	r1, r3
    3cf6:	4317      	orrs	r7, r2
    3cf8:	e6f5      	b.n	3ae6 <__aeabi_dsub+0x1be>
    3cfa:	0026      	movs	r6, r4
    3cfc:	4650      	mov	r0, sl
    3cfe:	4306      	orrs	r6, r0
    3d00:	d005      	beq.n	3d0e <__aeabi_dsub+0x3e6>
    3d02:	43ed      	mvns	r5, r5
    3d04:	2d00      	cmp	r5, #0
    3d06:	d0d3      	beq.n	3cb0 <__aeabi_dsub+0x388>
    3d08:	4e90      	ldr	r6, [pc, #576]	; (3f4c <__aeabi_dsub+0x624>)
    3d0a:	45b4      	cmp	ip, r6
    3d0c:	d1bd      	bne.n	3c8a <__aeabi_dsub+0x362>
    3d0e:	000c      	movs	r4, r1
    3d10:	0017      	movs	r7, r2
    3d12:	4666      	mov	r6, ip
    3d14:	4698      	mov	r8, r3
    3d16:	e68d      	b.n	3a34 <__aeabi_dsub+0x10c>
    3d18:	488c      	ldr	r0, [pc, #560]	; (3f4c <__aeabi_dsub+0x624>)
    3d1a:	4283      	cmp	r3, r0
    3d1c:	d00b      	beq.n	3d36 <__aeabi_dsub+0x40e>
    3d1e:	4663      	mov	r3, ip
    3d20:	e6d9      	b.n	3ad6 <__aeabi_dsub+0x1ae>
    3d22:	2d00      	cmp	r5, #0
    3d24:	d000      	beq.n	3d28 <__aeabi_dsub+0x400>
    3d26:	e096      	b.n	3e56 <__aeabi_dsub+0x52e>
    3d28:	0008      	movs	r0, r1
    3d2a:	4310      	orrs	r0, r2
    3d2c:	d100      	bne.n	3d30 <__aeabi_dsub+0x408>
    3d2e:	e0e2      	b.n	3ef6 <__aeabi_dsub+0x5ce>
    3d30:	000c      	movs	r4, r1
    3d32:	0017      	movs	r7, r2
    3d34:	4698      	mov	r8, r3
    3d36:	4e85      	ldr	r6, [pc, #532]	; (3f4c <__aeabi_dsub+0x624>)
    3d38:	e67c      	b.n	3a34 <__aeabi_dsub+0x10c>
    3d3a:	2500      	movs	r5, #0
    3d3c:	e780      	b.n	3c40 <__aeabi_dsub+0x318>
    3d3e:	2100      	movs	r1, #0
    3d40:	e78e      	b.n	3c60 <__aeabi_dsub+0x338>
    3d42:	0023      	movs	r3, r4
    3d44:	4650      	mov	r0, sl
    3d46:	4303      	orrs	r3, r0
    3d48:	2e00      	cmp	r6, #0
    3d4a:	d000      	beq.n	3d4e <__aeabi_dsub+0x426>
    3d4c:	e0a8      	b.n	3ea0 <__aeabi_dsub+0x578>
    3d4e:	2b00      	cmp	r3, #0
    3d50:	d100      	bne.n	3d54 <__aeabi_dsub+0x42c>
    3d52:	e0de      	b.n	3f12 <__aeabi_dsub+0x5ea>
    3d54:	000b      	movs	r3, r1
    3d56:	4313      	orrs	r3, r2
    3d58:	d100      	bne.n	3d5c <__aeabi_dsub+0x434>
    3d5a:	e66b      	b.n	3a34 <__aeabi_dsub+0x10c>
    3d5c:	4452      	add	r2, sl
    3d5e:	4552      	cmp	r2, sl
    3d60:	4180      	sbcs	r0, r0
    3d62:	1864      	adds	r4, r4, r1
    3d64:	4240      	negs	r0, r0
    3d66:	1824      	adds	r4, r4, r0
    3d68:	0017      	movs	r7, r2
    3d6a:	0223      	lsls	r3, r4, #8
    3d6c:	d400      	bmi.n	3d70 <__aeabi_dsub+0x448>
    3d6e:	e6fd      	b.n	3b6c <__aeabi_dsub+0x244>
    3d70:	4b77      	ldr	r3, [pc, #476]	; (3f50 <__aeabi_dsub+0x628>)
    3d72:	4666      	mov	r6, ip
    3d74:	401c      	ands	r4, r3
    3d76:	e65d      	b.n	3a34 <__aeabi_dsub+0x10c>
    3d78:	0025      	movs	r5, r4
    3d7a:	4650      	mov	r0, sl
    3d7c:	4305      	orrs	r5, r0
    3d7e:	2e00      	cmp	r6, #0
    3d80:	d1cf      	bne.n	3d22 <__aeabi_dsub+0x3fa>
    3d82:	2d00      	cmp	r5, #0
    3d84:	d14f      	bne.n	3e26 <__aeabi_dsub+0x4fe>
    3d86:	000c      	movs	r4, r1
    3d88:	4314      	orrs	r4, r2
    3d8a:	d100      	bne.n	3d8e <__aeabi_dsub+0x466>
    3d8c:	e0a0      	b.n	3ed0 <__aeabi_dsub+0x5a8>
    3d8e:	000c      	movs	r4, r1
    3d90:	0017      	movs	r7, r2
    3d92:	4698      	mov	r8, r3
    3d94:	e64e      	b.n	3a34 <__aeabi_dsub+0x10c>
    3d96:	4666      	mov	r6, ip
    3d98:	2400      	movs	r4, #0
    3d9a:	2700      	movs	r7, #0
    3d9c:	e685      	b.n	3aaa <__aeabi_dsub+0x182>
    3d9e:	001f      	movs	r7, r3
    3da0:	0008      	movs	r0, r1
    3da2:	3f20      	subs	r7, #32
    3da4:	40f8      	lsrs	r0, r7
    3da6:	0007      	movs	r7, r0
    3da8:	2b20      	cmp	r3, #32
    3daa:	d100      	bne.n	3dae <__aeabi_dsub+0x486>
    3dac:	e08e      	b.n	3ecc <__aeabi_dsub+0x5a4>
    3dae:	2040      	movs	r0, #64	; 0x40
    3db0:	1ac3      	subs	r3, r0, r3
    3db2:	4099      	lsls	r1, r3
    3db4:	430a      	orrs	r2, r1
    3db6:	1e51      	subs	r1, r2, #1
    3db8:	418a      	sbcs	r2, r1
    3dba:	2100      	movs	r1, #0
    3dbc:	4317      	orrs	r7, r2
    3dbe:	e692      	b.n	3ae6 <__aeabi_dsub+0x1be>
    3dc0:	2e00      	cmp	r6, #0
    3dc2:	d114      	bne.n	3dee <__aeabi_dsub+0x4c6>
    3dc4:	0026      	movs	r6, r4
    3dc6:	4650      	mov	r0, sl
    3dc8:	4306      	orrs	r6, r0
    3dca:	d062      	beq.n	3e92 <__aeabi_dsub+0x56a>
    3dcc:	43db      	mvns	r3, r3
    3dce:	2b00      	cmp	r3, #0
    3dd0:	d15c      	bne.n	3e8c <__aeabi_dsub+0x564>
    3dd2:	1887      	adds	r7, r0, r2
    3dd4:	4297      	cmp	r7, r2
    3dd6:	4192      	sbcs	r2, r2
    3dd8:	1864      	adds	r4, r4, r1
    3dda:	4252      	negs	r2, r2
    3ddc:	18a4      	adds	r4, r4, r2
    3dde:	4666      	mov	r6, ip
    3de0:	e687      	b.n	3af2 <__aeabi_dsub+0x1ca>
    3de2:	4650      	mov	r0, sl
    3de4:	4320      	orrs	r0, r4
    3de6:	1e44      	subs	r4, r0, #1
    3de8:	41a0      	sbcs	r0, r4
    3dea:	2400      	movs	r4, #0
    3dec:	e760      	b.n	3cb0 <__aeabi_dsub+0x388>
    3dee:	4e57      	ldr	r6, [pc, #348]	; (3f4c <__aeabi_dsub+0x624>)
    3df0:	45b4      	cmp	ip, r6
    3df2:	d04e      	beq.n	3e92 <__aeabi_dsub+0x56a>
    3df4:	2680      	movs	r6, #128	; 0x80
    3df6:	0436      	lsls	r6, r6, #16
    3df8:	425b      	negs	r3, r3
    3dfa:	4334      	orrs	r4, r6
    3dfc:	2b38      	cmp	r3, #56	; 0x38
    3dfe:	dd00      	ble.n	3e02 <__aeabi_dsub+0x4da>
    3e00:	e07f      	b.n	3f02 <__aeabi_dsub+0x5da>
    3e02:	2b1f      	cmp	r3, #31
    3e04:	dd00      	ble.n	3e08 <__aeabi_dsub+0x4e0>
    3e06:	e08b      	b.n	3f20 <__aeabi_dsub+0x5f8>
    3e08:	2620      	movs	r6, #32
    3e0a:	0027      	movs	r7, r4
    3e0c:	4650      	mov	r0, sl
    3e0e:	1af6      	subs	r6, r6, r3
    3e10:	40b7      	lsls	r7, r6
    3e12:	40d8      	lsrs	r0, r3
    3e14:	4307      	orrs	r7, r0
    3e16:	4650      	mov	r0, sl
    3e18:	40b0      	lsls	r0, r6
    3e1a:	1e46      	subs	r6, r0, #1
    3e1c:	41b0      	sbcs	r0, r6
    3e1e:	4307      	orrs	r7, r0
    3e20:	40dc      	lsrs	r4, r3
    3e22:	18bf      	adds	r7, r7, r2
    3e24:	e7d6      	b.n	3dd4 <__aeabi_dsub+0x4ac>
    3e26:	000d      	movs	r5, r1
    3e28:	4315      	orrs	r5, r2
    3e2a:	d100      	bne.n	3e2e <__aeabi_dsub+0x506>
    3e2c:	e602      	b.n	3a34 <__aeabi_dsub+0x10c>
    3e2e:	4650      	mov	r0, sl
    3e30:	1a80      	subs	r0, r0, r2
    3e32:	4582      	cmp	sl, r0
    3e34:	41bf      	sbcs	r7, r7
    3e36:	1a65      	subs	r5, r4, r1
    3e38:	427f      	negs	r7, r7
    3e3a:	1bed      	subs	r5, r5, r7
    3e3c:	4684      	mov	ip, r0
    3e3e:	0228      	lsls	r0, r5, #8
    3e40:	d400      	bmi.n	3e44 <__aeabi_dsub+0x51c>
    3e42:	e68d      	b.n	3b60 <__aeabi_dsub+0x238>
    3e44:	4650      	mov	r0, sl
    3e46:	1a17      	subs	r7, r2, r0
    3e48:	42ba      	cmp	r2, r7
    3e4a:	4192      	sbcs	r2, r2
    3e4c:	1b0c      	subs	r4, r1, r4
    3e4e:	4252      	negs	r2, r2
    3e50:	1aa4      	subs	r4, r4, r2
    3e52:	4698      	mov	r8, r3
    3e54:	e5ee      	b.n	3a34 <__aeabi_dsub+0x10c>
    3e56:	000d      	movs	r5, r1
    3e58:	4315      	orrs	r5, r2
    3e5a:	d100      	bne.n	3e5e <__aeabi_dsub+0x536>
    3e5c:	e76b      	b.n	3d36 <__aeabi_dsub+0x40e>
    3e5e:	4650      	mov	r0, sl
    3e60:	0767      	lsls	r7, r4, #29
    3e62:	08c0      	lsrs	r0, r0, #3
    3e64:	4307      	orrs	r7, r0
    3e66:	2080      	movs	r0, #128	; 0x80
    3e68:	08e4      	lsrs	r4, r4, #3
    3e6a:	0300      	lsls	r0, r0, #12
    3e6c:	4204      	tst	r4, r0
    3e6e:	d007      	beq.n	3e80 <__aeabi_dsub+0x558>
    3e70:	08cd      	lsrs	r5, r1, #3
    3e72:	4205      	tst	r5, r0
    3e74:	d104      	bne.n	3e80 <__aeabi_dsub+0x558>
    3e76:	002c      	movs	r4, r5
    3e78:	4698      	mov	r8, r3
    3e7a:	08d7      	lsrs	r7, r2, #3
    3e7c:	0749      	lsls	r1, r1, #29
    3e7e:	430f      	orrs	r7, r1
    3e80:	0f7b      	lsrs	r3, r7, #29
    3e82:	00e4      	lsls	r4, r4, #3
    3e84:	431c      	orrs	r4, r3
    3e86:	00ff      	lsls	r7, r7, #3
    3e88:	4e30      	ldr	r6, [pc, #192]	; (3f4c <__aeabi_dsub+0x624>)
    3e8a:	e5d3      	b.n	3a34 <__aeabi_dsub+0x10c>
    3e8c:	4e2f      	ldr	r6, [pc, #188]	; (3f4c <__aeabi_dsub+0x624>)
    3e8e:	45b4      	cmp	ip, r6
    3e90:	d1b4      	bne.n	3dfc <__aeabi_dsub+0x4d4>
    3e92:	000c      	movs	r4, r1
    3e94:	0017      	movs	r7, r2
    3e96:	4666      	mov	r6, ip
    3e98:	e5cc      	b.n	3a34 <__aeabi_dsub+0x10c>
    3e9a:	2700      	movs	r7, #0
    3e9c:	2400      	movs	r4, #0
    3e9e:	e5e8      	b.n	3a72 <__aeabi_dsub+0x14a>
    3ea0:	2b00      	cmp	r3, #0
    3ea2:	d039      	beq.n	3f18 <__aeabi_dsub+0x5f0>
    3ea4:	000b      	movs	r3, r1
    3ea6:	4313      	orrs	r3, r2
    3ea8:	d100      	bne.n	3eac <__aeabi_dsub+0x584>
    3eaa:	e744      	b.n	3d36 <__aeabi_dsub+0x40e>
    3eac:	08c0      	lsrs	r0, r0, #3
    3eae:	0767      	lsls	r7, r4, #29
    3eb0:	4307      	orrs	r7, r0
    3eb2:	2080      	movs	r0, #128	; 0x80
    3eb4:	08e4      	lsrs	r4, r4, #3
    3eb6:	0300      	lsls	r0, r0, #12
    3eb8:	4204      	tst	r4, r0
    3eba:	d0e1      	beq.n	3e80 <__aeabi_dsub+0x558>
    3ebc:	08cb      	lsrs	r3, r1, #3
    3ebe:	4203      	tst	r3, r0
    3ec0:	d1de      	bne.n	3e80 <__aeabi_dsub+0x558>
    3ec2:	08d7      	lsrs	r7, r2, #3
    3ec4:	0749      	lsls	r1, r1, #29
    3ec6:	430f      	orrs	r7, r1
    3ec8:	001c      	movs	r4, r3
    3eca:	e7d9      	b.n	3e80 <__aeabi_dsub+0x558>
    3ecc:	2100      	movs	r1, #0
    3ece:	e771      	b.n	3db4 <__aeabi_dsub+0x48c>
    3ed0:	2500      	movs	r5, #0
    3ed2:	2700      	movs	r7, #0
    3ed4:	e5e9      	b.n	3aaa <__aeabi_dsub+0x182>
    3ed6:	002e      	movs	r6, r5
    3ed8:	0027      	movs	r7, r4
    3eda:	3e20      	subs	r6, #32
    3edc:	40f7      	lsrs	r7, r6
    3ede:	2d20      	cmp	r5, #32
    3ee0:	d02f      	beq.n	3f42 <__aeabi_dsub+0x61a>
    3ee2:	2640      	movs	r6, #64	; 0x40
    3ee4:	1b75      	subs	r5, r6, r5
    3ee6:	40ac      	lsls	r4, r5
    3ee8:	4650      	mov	r0, sl
    3eea:	4320      	orrs	r0, r4
    3eec:	1e44      	subs	r4, r0, #1
    3eee:	41a0      	sbcs	r0, r4
    3ef0:	2400      	movs	r4, #0
    3ef2:	4338      	orrs	r0, r7
    3ef4:	e6dc      	b.n	3cb0 <__aeabi_dsub+0x388>
    3ef6:	2480      	movs	r4, #128	; 0x80
    3ef8:	2500      	movs	r5, #0
    3efa:	0324      	lsls	r4, r4, #12
    3efc:	4e13      	ldr	r6, [pc, #76]	; (3f4c <__aeabi_dsub+0x624>)
    3efe:	2700      	movs	r7, #0
    3f00:	e5d3      	b.n	3aaa <__aeabi_dsub+0x182>
    3f02:	4650      	mov	r0, sl
    3f04:	4320      	orrs	r0, r4
    3f06:	0007      	movs	r7, r0
    3f08:	1e78      	subs	r0, r7, #1
    3f0a:	4187      	sbcs	r7, r0
    3f0c:	2400      	movs	r4, #0
    3f0e:	18bf      	adds	r7, r7, r2
    3f10:	e760      	b.n	3dd4 <__aeabi_dsub+0x4ac>
    3f12:	000c      	movs	r4, r1
    3f14:	0017      	movs	r7, r2
    3f16:	e58d      	b.n	3a34 <__aeabi_dsub+0x10c>
    3f18:	000c      	movs	r4, r1
    3f1a:	0017      	movs	r7, r2
    3f1c:	4e0b      	ldr	r6, [pc, #44]	; (3f4c <__aeabi_dsub+0x624>)
    3f1e:	e589      	b.n	3a34 <__aeabi_dsub+0x10c>
    3f20:	001e      	movs	r6, r3
    3f22:	0027      	movs	r7, r4
    3f24:	3e20      	subs	r6, #32
    3f26:	40f7      	lsrs	r7, r6
    3f28:	2b20      	cmp	r3, #32
    3f2a:	d00c      	beq.n	3f46 <__aeabi_dsub+0x61e>
    3f2c:	2640      	movs	r6, #64	; 0x40
    3f2e:	1af3      	subs	r3, r6, r3
    3f30:	409c      	lsls	r4, r3
    3f32:	4650      	mov	r0, sl
    3f34:	4320      	orrs	r0, r4
    3f36:	1e44      	subs	r4, r0, #1
    3f38:	41a0      	sbcs	r0, r4
    3f3a:	4307      	orrs	r7, r0
    3f3c:	2400      	movs	r4, #0
    3f3e:	18bf      	adds	r7, r7, r2
    3f40:	e748      	b.n	3dd4 <__aeabi_dsub+0x4ac>
    3f42:	2400      	movs	r4, #0
    3f44:	e7d0      	b.n	3ee8 <__aeabi_dsub+0x5c0>
    3f46:	2400      	movs	r4, #0
    3f48:	e7f3      	b.n	3f32 <__aeabi_dsub+0x60a>
    3f4a:	46c0      	nop			; (mov r8, r8)
    3f4c:	000007ff 	.word	0x000007ff
    3f50:	ff7fffff 	.word	0xff7fffff

00003f54 <__aeabi_d2iz>:
    3f54:	b530      	push	{r4, r5, lr}
    3f56:	4d13      	ldr	r5, [pc, #76]	; (3fa4 <__aeabi_d2iz+0x50>)
    3f58:	030a      	lsls	r2, r1, #12
    3f5a:	004b      	lsls	r3, r1, #1
    3f5c:	0b12      	lsrs	r2, r2, #12
    3f5e:	0d5b      	lsrs	r3, r3, #21
    3f60:	0fc9      	lsrs	r1, r1, #31
    3f62:	2400      	movs	r4, #0
    3f64:	42ab      	cmp	r3, r5
    3f66:	dd10      	ble.n	3f8a <__aeabi_d2iz+0x36>
    3f68:	4c0f      	ldr	r4, [pc, #60]	; (3fa8 <__aeabi_d2iz+0x54>)
    3f6a:	42a3      	cmp	r3, r4
    3f6c:	dc0f      	bgt.n	3f8e <__aeabi_d2iz+0x3a>
    3f6e:	2480      	movs	r4, #128	; 0x80
    3f70:	4d0e      	ldr	r5, [pc, #56]	; (3fac <__aeabi_d2iz+0x58>)
    3f72:	0364      	lsls	r4, r4, #13
    3f74:	4322      	orrs	r2, r4
    3f76:	1aed      	subs	r5, r5, r3
    3f78:	2d1f      	cmp	r5, #31
    3f7a:	dd0b      	ble.n	3f94 <__aeabi_d2iz+0x40>
    3f7c:	480c      	ldr	r0, [pc, #48]	; (3fb0 <__aeabi_d2iz+0x5c>)
    3f7e:	1ac3      	subs	r3, r0, r3
    3f80:	40da      	lsrs	r2, r3
    3f82:	4254      	negs	r4, r2
    3f84:	2900      	cmp	r1, #0
    3f86:	d100      	bne.n	3f8a <__aeabi_d2iz+0x36>
    3f88:	0014      	movs	r4, r2
    3f8a:	0020      	movs	r0, r4
    3f8c:	bd30      	pop	{r4, r5, pc}
    3f8e:	4b09      	ldr	r3, [pc, #36]	; (3fb4 <__aeabi_d2iz+0x60>)
    3f90:	18cc      	adds	r4, r1, r3
    3f92:	e7fa      	b.n	3f8a <__aeabi_d2iz+0x36>
    3f94:	4c08      	ldr	r4, [pc, #32]	; (3fb8 <__aeabi_d2iz+0x64>)
    3f96:	40e8      	lsrs	r0, r5
    3f98:	46a4      	mov	ip, r4
    3f9a:	4463      	add	r3, ip
    3f9c:	409a      	lsls	r2, r3
    3f9e:	4302      	orrs	r2, r0
    3fa0:	e7ef      	b.n	3f82 <__aeabi_d2iz+0x2e>
    3fa2:	46c0      	nop			; (mov r8, r8)
    3fa4:	000003fe 	.word	0x000003fe
    3fa8:	0000041d 	.word	0x0000041d
    3fac:	00000433 	.word	0x00000433
    3fb0:	00000413 	.word	0x00000413
    3fb4:	7fffffff 	.word	0x7fffffff
    3fb8:	fffffbed 	.word	0xfffffbed

00003fbc <__aeabi_ui2d>:
    3fbc:	b510      	push	{r4, lr}
    3fbe:	1e04      	subs	r4, r0, #0
    3fc0:	d028      	beq.n	4014 <__aeabi_ui2d+0x58>
    3fc2:	f000 f833 	bl	402c <__clzsi2>
    3fc6:	4b15      	ldr	r3, [pc, #84]	; (401c <__aeabi_ui2d+0x60>)
    3fc8:	4a15      	ldr	r2, [pc, #84]	; (4020 <__aeabi_ui2d+0x64>)
    3fca:	1a1b      	subs	r3, r3, r0
    3fcc:	1ad2      	subs	r2, r2, r3
    3fce:	2a1f      	cmp	r2, #31
    3fd0:	dd15      	ble.n	3ffe <__aeabi_ui2d+0x42>
    3fd2:	4a14      	ldr	r2, [pc, #80]	; (4024 <__aeabi_ui2d+0x68>)
    3fd4:	1ad2      	subs	r2, r2, r3
    3fd6:	4094      	lsls	r4, r2
    3fd8:	2200      	movs	r2, #0
    3fda:	0324      	lsls	r4, r4, #12
    3fdc:	055b      	lsls	r3, r3, #21
    3fde:	0b24      	lsrs	r4, r4, #12
    3fe0:	0d5b      	lsrs	r3, r3, #21
    3fe2:	2100      	movs	r1, #0
    3fe4:	0010      	movs	r0, r2
    3fe6:	0324      	lsls	r4, r4, #12
    3fe8:	0d0a      	lsrs	r2, r1, #20
    3fea:	0b24      	lsrs	r4, r4, #12
    3fec:	0512      	lsls	r2, r2, #20
    3fee:	4322      	orrs	r2, r4
    3ff0:	4c0d      	ldr	r4, [pc, #52]	; (4028 <__aeabi_ui2d+0x6c>)
    3ff2:	051b      	lsls	r3, r3, #20
    3ff4:	4022      	ands	r2, r4
    3ff6:	4313      	orrs	r3, r2
    3ff8:	005b      	lsls	r3, r3, #1
    3ffa:	0859      	lsrs	r1, r3, #1
    3ffc:	bd10      	pop	{r4, pc}
    3ffe:	0021      	movs	r1, r4
    4000:	4091      	lsls	r1, r2
    4002:	000a      	movs	r2, r1
    4004:	210b      	movs	r1, #11
    4006:	1a08      	subs	r0, r1, r0
    4008:	40c4      	lsrs	r4, r0
    400a:	055b      	lsls	r3, r3, #21
    400c:	0324      	lsls	r4, r4, #12
    400e:	0b24      	lsrs	r4, r4, #12
    4010:	0d5b      	lsrs	r3, r3, #21
    4012:	e7e6      	b.n	3fe2 <__aeabi_ui2d+0x26>
    4014:	2300      	movs	r3, #0
    4016:	2400      	movs	r4, #0
    4018:	2200      	movs	r2, #0
    401a:	e7e2      	b.n	3fe2 <__aeabi_ui2d+0x26>
    401c:	0000041e 	.word	0x0000041e
    4020:	00000433 	.word	0x00000433
    4024:	00000413 	.word	0x00000413
    4028:	800fffff 	.word	0x800fffff

0000402c <__clzsi2>:
    402c:	211c      	movs	r1, #28
    402e:	2301      	movs	r3, #1
    4030:	041b      	lsls	r3, r3, #16
    4032:	4298      	cmp	r0, r3
    4034:	d301      	bcc.n	403a <__clzsi2+0xe>
    4036:	0c00      	lsrs	r0, r0, #16
    4038:	3910      	subs	r1, #16
    403a:	0a1b      	lsrs	r3, r3, #8
    403c:	4298      	cmp	r0, r3
    403e:	d301      	bcc.n	4044 <__clzsi2+0x18>
    4040:	0a00      	lsrs	r0, r0, #8
    4042:	3908      	subs	r1, #8
    4044:	091b      	lsrs	r3, r3, #4
    4046:	4298      	cmp	r0, r3
    4048:	d301      	bcc.n	404e <__clzsi2+0x22>
    404a:	0900      	lsrs	r0, r0, #4
    404c:	3904      	subs	r1, #4
    404e:	a202      	add	r2, pc, #8	; (adr r2, 4058 <__clzsi2+0x2c>)
    4050:	5c10      	ldrb	r0, [r2, r0]
    4052:	1840      	adds	r0, r0, r1
    4054:	4770      	bx	lr
    4056:	46c0      	nop			; (mov r8, r8)
    4058:	02020304 	.word	0x02020304
    405c:	01010101 	.word	0x01010101
	...

00004068 <__libc_init_array>:
    4068:	b570      	push	{r4, r5, r6, lr}
    406a:	4e0d      	ldr	r6, [pc, #52]	; (40a0 <__libc_init_array+0x38>)
    406c:	4d0d      	ldr	r5, [pc, #52]	; (40a4 <__libc_init_array+0x3c>)
    406e:	2400      	movs	r4, #0
    4070:	1bad      	subs	r5, r5, r6
    4072:	10ad      	asrs	r5, r5, #2
    4074:	d005      	beq.n	4082 <__libc_init_array+0x1a>
    4076:	00a3      	lsls	r3, r4, #2
    4078:	58f3      	ldr	r3, [r6, r3]
    407a:	3401      	adds	r4, #1
    407c:	4798      	blx	r3
    407e:	42a5      	cmp	r5, r4
    4080:	d1f9      	bne.n	4076 <__libc_init_array+0xe>
    4082:	f004 fe51 	bl	8d28 <_init>
    4086:	4e08      	ldr	r6, [pc, #32]	; (40a8 <__libc_init_array+0x40>)
    4088:	4d08      	ldr	r5, [pc, #32]	; (40ac <__libc_init_array+0x44>)
    408a:	2400      	movs	r4, #0
    408c:	1bad      	subs	r5, r5, r6
    408e:	10ad      	asrs	r5, r5, #2
    4090:	d005      	beq.n	409e <__libc_init_array+0x36>
    4092:	00a3      	lsls	r3, r4, #2
    4094:	58f3      	ldr	r3, [r6, r3]
    4096:	3401      	adds	r4, #1
    4098:	4798      	blx	r3
    409a:	42a5      	cmp	r5, r4
    409c:	d1f9      	bne.n	4092 <__libc_init_array+0x2a>
    409e:	bd70      	pop	{r4, r5, r6, pc}
    40a0:	00008d34 	.word	0x00008d34
    40a4:	00008d34 	.word	0x00008d34
    40a8:	00008d34 	.word	0x00008d34
    40ac:	00008d3c 	.word	0x00008d3c

000040b0 <memcpy>:
    40b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    40b2:	0005      	movs	r5, r0
    40b4:	2a0f      	cmp	r2, #15
    40b6:	d92f      	bls.n	4118 <memcpy+0x68>
    40b8:	000b      	movs	r3, r1
    40ba:	4303      	orrs	r3, r0
    40bc:	079b      	lsls	r3, r3, #30
    40be:	d134      	bne.n	412a <memcpy+0x7a>
    40c0:	0016      	movs	r6, r2
    40c2:	000c      	movs	r4, r1
    40c4:	0003      	movs	r3, r0
    40c6:	3e10      	subs	r6, #16
    40c8:	0935      	lsrs	r5, r6, #4
    40ca:	3501      	adds	r5, #1
    40cc:	012d      	lsls	r5, r5, #4
    40ce:	1945      	adds	r5, r0, r5
    40d0:	6827      	ldr	r7, [r4, #0]
    40d2:	601f      	str	r7, [r3, #0]
    40d4:	6867      	ldr	r7, [r4, #4]
    40d6:	605f      	str	r7, [r3, #4]
    40d8:	68a7      	ldr	r7, [r4, #8]
    40da:	609f      	str	r7, [r3, #8]
    40dc:	68e7      	ldr	r7, [r4, #12]
    40de:	3410      	adds	r4, #16
    40e0:	60df      	str	r7, [r3, #12]
    40e2:	3310      	adds	r3, #16
    40e4:	429d      	cmp	r5, r3
    40e6:	d1f3      	bne.n	40d0 <memcpy+0x20>
    40e8:	230f      	movs	r3, #15
    40ea:	439e      	bics	r6, r3
    40ec:	3610      	adds	r6, #16
    40ee:	1985      	adds	r5, r0, r6
    40f0:	1989      	adds	r1, r1, r6
    40f2:	4013      	ands	r3, r2
    40f4:	2b03      	cmp	r3, #3
    40f6:	d91a      	bls.n	412e <memcpy+0x7e>
    40f8:	1f1e      	subs	r6, r3, #4
    40fa:	2300      	movs	r3, #0
    40fc:	08b4      	lsrs	r4, r6, #2
    40fe:	3401      	adds	r4, #1
    4100:	00a4      	lsls	r4, r4, #2
    4102:	58cf      	ldr	r7, [r1, r3]
    4104:	50ef      	str	r7, [r5, r3]
    4106:	3304      	adds	r3, #4
    4108:	42a3      	cmp	r3, r4
    410a:	d1fa      	bne.n	4102 <memcpy+0x52>
    410c:	2403      	movs	r4, #3
    410e:	43a6      	bics	r6, r4
    4110:	1d33      	adds	r3, r6, #4
    4112:	4022      	ands	r2, r4
    4114:	18c9      	adds	r1, r1, r3
    4116:	18ed      	adds	r5, r5, r3
    4118:	2a00      	cmp	r2, #0
    411a:	d005      	beq.n	4128 <memcpy+0x78>
    411c:	2300      	movs	r3, #0
    411e:	5ccc      	ldrb	r4, [r1, r3]
    4120:	54ec      	strb	r4, [r5, r3]
    4122:	3301      	adds	r3, #1
    4124:	4293      	cmp	r3, r2
    4126:	d1fa      	bne.n	411e <memcpy+0x6e>
    4128:	bdf0      	pop	{r4, r5, r6, r7, pc}
    412a:	0005      	movs	r5, r0
    412c:	e7f6      	b.n	411c <memcpy+0x6c>
    412e:	001a      	movs	r2, r3
    4130:	e7f2      	b.n	4118 <memcpy+0x68>
    4132:	46c0      	nop			; (mov r8, r8)

00004134 <memset>:
    4134:	b5f0      	push	{r4, r5, r6, r7, lr}
    4136:	0783      	lsls	r3, r0, #30
    4138:	d043      	beq.n	41c2 <memset+0x8e>
    413a:	1e54      	subs	r4, r2, #1
    413c:	2a00      	cmp	r2, #0
    413e:	d03f      	beq.n	41c0 <memset+0x8c>
    4140:	b2ce      	uxtb	r6, r1
    4142:	0002      	movs	r2, r0
    4144:	2503      	movs	r5, #3
    4146:	e002      	b.n	414e <memset+0x1a>
    4148:	001a      	movs	r2, r3
    414a:	3c01      	subs	r4, #1
    414c:	d338      	bcc.n	41c0 <memset+0x8c>
    414e:	1c53      	adds	r3, r2, #1
    4150:	7016      	strb	r6, [r2, #0]
    4152:	422b      	tst	r3, r5
    4154:	d1f8      	bne.n	4148 <memset+0x14>
    4156:	2c03      	cmp	r4, #3
    4158:	d92a      	bls.n	41b0 <memset+0x7c>
    415a:	22ff      	movs	r2, #255	; 0xff
    415c:	400a      	ands	r2, r1
    415e:	0215      	lsls	r5, r2, #8
    4160:	4315      	orrs	r5, r2
    4162:	042a      	lsls	r2, r5, #16
    4164:	4315      	orrs	r5, r2
    4166:	2c0f      	cmp	r4, #15
    4168:	d914      	bls.n	4194 <memset+0x60>
    416a:	0027      	movs	r7, r4
    416c:	001a      	movs	r2, r3
    416e:	3f10      	subs	r7, #16
    4170:	093e      	lsrs	r6, r7, #4
    4172:	3601      	adds	r6, #1
    4174:	0136      	lsls	r6, r6, #4
    4176:	199e      	adds	r6, r3, r6
    4178:	6015      	str	r5, [r2, #0]
    417a:	6055      	str	r5, [r2, #4]
    417c:	6095      	str	r5, [r2, #8]
    417e:	60d5      	str	r5, [r2, #12]
    4180:	3210      	adds	r2, #16
    4182:	4296      	cmp	r6, r2
    4184:	d1f8      	bne.n	4178 <memset+0x44>
    4186:	220f      	movs	r2, #15
    4188:	4397      	bics	r7, r2
    418a:	3710      	adds	r7, #16
    418c:	19db      	adds	r3, r3, r7
    418e:	4014      	ands	r4, r2
    4190:	2c03      	cmp	r4, #3
    4192:	d90d      	bls.n	41b0 <memset+0x7c>
    4194:	001a      	movs	r2, r3
    4196:	1f27      	subs	r7, r4, #4
    4198:	08be      	lsrs	r6, r7, #2
    419a:	3601      	adds	r6, #1
    419c:	00b6      	lsls	r6, r6, #2
    419e:	199e      	adds	r6, r3, r6
    41a0:	c220      	stmia	r2!, {r5}
    41a2:	42b2      	cmp	r2, r6
    41a4:	d1fc      	bne.n	41a0 <memset+0x6c>
    41a6:	2203      	movs	r2, #3
    41a8:	4397      	bics	r7, r2
    41aa:	3704      	adds	r7, #4
    41ac:	19db      	adds	r3, r3, r7
    41ae:	4014      	ands	r4, r2
    41b0:	2c00      	cmp	r4, #0
    41b2:	d005      	beq.n	41c0 <memset+0x8c>
    41b4:	b2c9      	uxtb	r1, r1
    41b6:	191c      	adds	r4, r3, r4
    41b8:	7019      	strb	r1, [r3, #0]
    41ba:	3301      	adds	r3, #1
    41bc:	429c      	cmp	r4, r3
    41be:	d1fb      	bne.n	41b8 <memset+0x84>
    41c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    41c2:	0014      	movs	r4, r2
    41c4:	0003      	movs	r3, r0
    41c6:	e7c6      	b.n	4156 <memset+0x22>

000041c8 <strlen>:
    41c8:	b510      	push	{r4, lr}
    41ca:	0783      	lsls	r3, r0, #30
    41cc:	d025      	beq.n	421a <strlen+0x52>
    41ce:	7803      	ldrb	r3, [r0, #0]
    41d0:	2b00      	cmp	r3, #0
    41d2:	d024      	beq.n	421e <strlen+0x56>
    41d4:	0003      	movs	r3, r0
    41d6:	2103      	movs	r1, #3
    41d8:	e002      	b.n	41e0 <strlen+0x18>
    41da:	781a      	ldrb	r2, [r3, #0]
    41dc:	2a00      	cmp	r2, #0
    41de:	d01a      	beq.n	4216 <strlen+0x4e>
    41e0:	3301      	adds	r3, #1
    41e2:	420b      	tst	r3, r1
    41e4:	d1f9      	bne.n	41da <strlen+0x12>
    41e6:	6819      	ldr	r1, [r3, #0]
    41e8:	4a0e      	ldr	r2, [pc, #56]	; (4224 <strlen+0x5c>)
    41ea:	4c0f      	ldr	r4, [pc, #60]	; (4228 <strlen+0x60>)
    41ec:	188a      	adds	r2, r1, r2
    41ee:	438a      	bics	r2, r1
    41f0:	4222      	tst	r2, r4
    41f2:	d106      	bne.n	4202 <strlen+0x3a>
    41f4:	3304      	adds	r3, #4
    41f6:	6819      	ldr	r1, [r3, #0]
    41f8:	4a0a      	ldr	r2, [pc, #40]	; (4224 <strlen+0x5c>)
    41fa:	188a      	adds	r2, r1, r2
    41fc:	438a      	bics	r2, r1
    41fe:	4222      	tst	r2, r4
    4200:	d0f8      	beq.n	41f4 <strlen+0x2c>
    4202:	001a      	movs	r2, r3
    4204:	781b      	ldrb	r3, [r3, #0]
    4206:	2b00      	cmp	r3, #0
    4208:	d003      	beq.n	4212 <strlen+0x4a>
    420a:	3201      	adds	r2, #1
    420c:	7811      	ldrb	r1, [r2, #0]
    420e:	2900      	cmp	r1, #0
    4210:	d1fb      	bne.n	420a <strlen+0x42>
    4212:	1a10      	subs	r0, r2, r0
    4214:	bd10      	pop	{r4, pc}
    4216:	1a18      	subs	r0, r3, r0
    4218:	e7fc      	b.n	4214 <strlen+0x4c>
    421a:	0003      	movs	r3, r0
    421c:	e7e3      	b.n	41e6 <strlen+0x1e>
    421e:	2000      	movs	r0, #0
    4220:	e7f8      	b.n	4214 <strlen+0x4c>
    4222:	46c0      	nop			; (mov r8, r8)
    4224:	fefefeff 	.word	0xfefefeff
    4228:	80808080 	.word	0x80808080

0000422c <_vsprintf_r>:
    422c:	b530      	push	{r4, r5, lr}
    422e:	b09b      	sub	sp, #108	; 0x6c
    4230:	9100      	str	r1, [sp, #0]
    4232:	9104      	str	r1, [sp, #16]
    4234:	4908      	ldr	r1, [pc, #32]	; (4258 <_vsprintf_r+0x2c>)
    4236:	466d      	mov	r5, sp
    4238:	9102      	str	r1, [sp, #8]
    423a:	9105      	str	r1, [sp, #20]
    423c:	2101      	movs	r1, #1
    423e:	2482      	movs	r4, #130	; 0x82
    4240:	4249      	negs	r1, r1
    4242:	81e9      	strh	r1, [r5, #14]
    4244:	00a4      	lsls	r4, r4, #2
    4246:	4669      	mov	r1, sp
    4248:	81ac      	strh	r4, [r5, #12]
    424a:	f000 f845 	bl	42d8 <_svfprintf_r>
    424e:	2300      	movs	r3, #0
    4250:	9a00      	ldr	r2, [sp, #0]
    4252:	7013      	strb	r3, [r2, #0]
    4254:	b01b      	add	sp, #108	; 0x6c
    4256:	bd30      	pop	{r4, r5, pc}
    4258:	7fffffff 	.word	0x7fffffff

0000425c <vsprintf>:
    425c:	b510      	push	{r4, lr}
    425e:	0004      	movs	r4, r0
    4260:	0013      	movs	r3, r2
    4262:	4a03      	ldr	r2, [pc, #12]	; (4270 <vsprintf+0x14>)
    4264:	6810      	ldr	r0, [r2, #0]
    4266:	000a      	movs	r2, r1
    4268:	0021      	movs	r1, r4
    426a:	f7ff ffdf 	bl	422c <_vsprintf_r>
    426e:	bd10      	pop	{r4, pc}
    4270:	20000014 	.word	0x20000014

00004274 <register_fini>:
    4274:	4b03      	ldr	r3, [pc, #12]	; (4284 <register_fini+0x10>)
    4276:	b510      	push	{r4, lr}
    4278:	2b00      	cmp	r3, #0
    427a:	d002      	beq.n	4282 <register_fini+0xe>
    427c:	4802      	ldr	r0, [pc, #8]	; (4288 <register_fini+0x14>)
    427e:	f000 f805 	bl	428c <atexit>
    4282:	bd10      	pop	{r4, pc}
    4284:	00000000 	.word	0x00000000
    4288:	0000429d 	.word	0x0000429d

0000428c <atexit>:
    428c:	b510      	push	{r4, lr}
    428e:	0001      	movs	r1, r0
    4290:	2300      	movs	r3, #0
    4292:	2200      	movs	r2, #0
    4294:	2000      	movs	r0, #0
    4296:	f001 fb23 	bl	58e0 <__register_exitproc>
    429a:	bd10      	pop	{r4, pc}

0000429c <__libc_fini_array>:
    429c:	b570      	push	{r4, r5, r6, lr}
    429e:	4b09      	ldr	r3, [pc, #36]	; (42c4 <__libc_fini_array+0x28>)
    42a0:	4c09      	ldr	r4, [pc, #36]	; (42c8 <__libc_fini_array+0x2c>)
    42a2:	1ae4      	subs	r4, r4, r3
    42a4:	10a4      	asrs	r4, r4, #2
    42a6:	d009      	beq.n	42bc <__libc_fini_array+0x20>
    42a8:	4a08      	ldr	r2, [pc, #32]	; (42cc <__libc_fini_array+0x30>)
    42aa:	18a5      	adds	r5, r4, r2
    42ac:	00ad      	lsls	r5, r5, #2
    42ae:	18ed      	adds	r5, r5, r3
    42b0:	682b      	ldr	r3, [r5, #0]
    42b2:	3c01      	subs	r4, #1
    42b4:	4798      	blx	r3
    42b6:	3d04      	subs	r5, #4
    42b8:	2c00      	cmp	r4, #0
    42ba:	d1f9      	bne.n	42b0 <__libc_fini_array+0x14>
    42bc:	f004 fd3e 	bl	8d3c <_fini>
    42c0:	bd70      	pop	{r4, r5, r6, pc}
    42c2:	46c0      	nop			; (mov r8, r8)
    42c4:	00008d48 	.word	0x00008d48
    42c8:	00008d4c 	.word	0x00008d4c
    42cc:	3fffffff 	.word	0x3fffffff

000042d0 <__retarget_lock_acquire_recursive>:
    42d0:	4770      	bx	lr
    42d2:	46c0      	nop			; (mov r8, r8)

000042d4 <__retarget_lock_release_recursive>:
    42d4:	4770      	bx	lr
    42d6:	46c0      	nop			; (mov r8, r8)

000042d8 <_svfprintf_r>:
    42d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    42da:	46de      	mov	lr, fp
    42dc:	4645      	mov	r5, r8
    42de:	4657      	mov	r7, sl
    42e0:	464e      	mov	r6, r9
    42e2:	b5e0      	push	{r5, r6, r7, lr}
    42e4:	b0c3      	sub	sp, #268	; 0x10c
    42e6:	000d      	movs	r5, r1
    42e8:	9106      	str	r1, [sp, #24]
    42ea:	0014      	movs	r4, r2
    42ec:	930f      	str	r3, [sp, #60]	; 0x3c
    42ee:	9009      	str	r0, [sp, #36]	; 0x24
    42f0:	f002 fbde 	bl	6ab0 <_localeconv_r>
    42f4:	6803      	ldr	r3, [r0, #0]
    42f6:	0018      	movs	r0, r3
    42f8:	9319      	str	r3, [sp, #100]	; 0x64
    42fa:	f7ff ff65 	bl	41c8 <strlen>
    42fe:	9018      	str	r0, [sp, #96]	; 0x60
    4300:	89ab      	ldrh	r3, [r5, #12]
    4302:	061b      	lsls	r3, r3, #24
    4304:	d505      	bpl.n	4312 <_svfprintf_r+0x3a>
    4306:	692b      	ldr	r3, [r5, #16]
    4308:	9307      	str	r3, [sp, #28]
    430a:	2b00      	cmp	r3, #0
    430c:	d101      	bne.n	4312 <_svfprintf_r+0x3a>
    430e:	f001 f863 	bl	53d8 <_svfprintf_r+0x1100>
    4312:	ab32      	add	r3, sp, #200	; 0xc8
    4314:	9325      	str	r3, [sp, #148]	; 0x94
    4316:	2300      	movs	r3, #0
    4318:	46a3      	mov	fp, r4
    431a:	af25      	add	r7, sp, #148	; 0x94
    431c:	60bb      	str	r3, [r7, #8]
    431e:	607b      	str	r3, [r7, #4]
    4320:	9314      	str	r3, [sp, #80]	; 0x50
    4322:	9316      	str	r3, [sp, #88]	; 0x58
    4324:	9315      	str	r3, [sp, #84]	; 0x54
    4326:	ae32      	add	r6, sp, #200	; 0xc8
    4328:	9317      	str	r3, [sp, #92]	; 0x5c
    432a:	931a      	str	r3, [sp, #104]	; 0x68
    432c:	930a      	str	r3, [sp, #40]	; 0x28
    432e:	465b      	mov	r3, fp
    4330:	781b      	ldrb	r3, [r3, #0]
    4332:	465c      	mov	r4, fp
    4334:	2b00      	cmp	r3, #0
    4336:	d01c      	beq.n	4372 <_svfprintf_r+0x9a>
    4338:	2b25      	cmp	r3, #37	; 0x25
    433a:	d102      	bne.n	4342 <_svfprintf_r+0x6a>
    433c:	e019      	b.n	4372 <_svfprintf_r+0x9a>
    433e:	2b25      	cmp	r3, #37	; 0x25
    4340:	d003      	beq.n	434a <_svfprintf_r+0x72>
    4342:	3401      	adds	r4, #1
    4344:	7823      	ldrb	r3, [r4, #0]
    4346:	2b00      	cmp	r3, #0
    4348:	d1f9      	bne.n	433e <_svfprintf_r+0x66>
    434a:	465b      	mov	r3, fp
    434c:	1ae5      	subs	r5, r4, r3
    434e:	d010      	beq.n	4372 <_svfprintf_r+0x9a>
    4350:	465b      	mov	r3, fp
    4352:	6033      	str	r3, [r6, #0]
    4354:	68bb      	ldr	r3, [r7, #8]
    4356:	6075      	str	r5, [r6, #4]
    4358:	195b      	adds	r3, r3, r5
    435a:	60bb      	str	r3, [r7, #8]
    435c:	687b      	ldr	r3, [r7, #4]
    435e:	3301      	adds	r3, #1
    4360:	607b      	str	r3, [r7, #4]
    4362:	2b07      	cmp	r3, #7
    4364:	dc2e      	bgt.n	43c4 <_svfprintf_r+0xec>
    4366:	3608      	adds	r6, #8
    4368:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    436a:	469c      	mov	ip, r3
    436c:	44ac      	add	ip, r5
    436e:	4663      	mov	r3, ip
    4370:	930a      	str	r3, [sp, #40]	; 0x28
    4372:	7823      	ldrb	r3, [r4, #0]
    4374:	2b00      	cmp	r3, #0
    4376:	d02e      	beq.n	43d6 <_svfprintf_r+0xfe>
    4378:	1c63      	adds	r3, r4, #1
    437a:	469b      	mov	fp, r3
    437c:	2300      	movs	r3, #0
    437e:	aa16      	add	r2, sp, #88	; 0x58
    4380:	77d3      	strb	r3, [r2, #31]
    4382:	2201      	movs	r2, #1
    4384:	4252      	negs	r2, r2
    4386:	4692      	mov	sl, r2
    4388:	2200      	movs	r2, #0
    438a:	2100      	movs	r1, #0
    438c:	920b      	str	r2, [sp, #44]	; 0x2c
    438e:	3220      	adds	r2, #32
    4390:	4691      	mov	r9, r2
    4392:	3220      	adds	r2, #32
    4394:	7863      	ldrb	r3, [r4, #1]
    4396:	4688      	mov	r8, r1
    4398:	2000      	movs	r0, #0
    439a:	2400      	movs	r4, #0
    439c:	4694      	mov	ip, r2
    439e:	4659      	mov	r1, fp
    43a0:	3101      	adds	r1, #1
    43a2:	001a      	movs	r2, r3
    43a4:	3a20      	subs	r2, #32
    43a6:	2a58      	cmp	r2, #88	; 0x58
    43a8:	d900      	bls.n	43ac <_svfprintf_r+0xd4>
    43aa:	e2fd      	b.n	49a8 <_svfprintf_r+0x6d0>
    43ac:	4dd7      	ldr	r5, [pc, #860]	; (470c <_svfprintf_r+0x434>)
    43ae:	0092      	lsls	r2, r2, #2
    43b0:	58aa      	ldr	r2, [r5, r2]
    43b2:	4697      	mov	pc, r2
    43b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    43b6:	920f      	str	r2, [sp, #60]	; 0x3c
    43b8:	425b      	negs	r3, r3
    43ba:	930b      	str	r3, [sp, #44]	; 0x2c
    43bc:	2304      	movs	r3, #4
    43be:	431c      	orrs	r4, r3
    43c0:	780b      	ldrb	r3, [r1, #0]
    43c2:	e7ed      	b.n	43a0 <_svfprintf_r+0xc8>
    43c4:	003a      	movs	r2, r7
    43c6:	9906      	ldr	r1, [sp, #24]
    43c8:	9809      	ldr	r0, [sp, #36]	; 0x24
    43ca:	f003 f9dd 	bl	7788 <__ssprint_r>
    43ce:	2800      	cmp	r0, #0
    43d0:	d109      	bne.n	43e6 <_svfprintf_r+0x10e>
    43d2:	ae32      	add	r6, sp, #200	; 0xc8
    43d4:	e7c8      	b.n	4368 <_svfprintf_r+0x90>
    43d6:	68bb      	ldr	r3, [r7, #8]
    43d8:	2b00      	cmp	r3, #0
    43da:	d004      	beq.n	43e6 <_svfprintf_r+0x10e>
    43dc:	003a      	movs	r2, r7
    43de:	9906      	ldr	r1, [sp, #24]
    43e0:	9809      	ldr	r0, [sp, #36]	; 0x24
    43e2:	f003 f9d1 	bl	7788 <__ssprint_r>
    43e6:	9b06      	ldr	r3, [sp, #24]
    43e8:	899b      	ldrh	r3, [r3, #12]
    43ea:	065b      	lsls	r3, r3, #25
    43ec:	d501      	bpl.n	43f2 <_svfprintf_r+0x11a>
    43ee:	f001 f8ce 	bl	558e <_svfprintf_r+0x12b6>
    43f2:	980a      	ldr	r0, [sp, #40]	; 0x28
    43f4:	b043      	add	sp, #268	; 0x10c
    43f6:	bc3c      	pop	{r2, r3, r4, r5}
    43f8:	4690      	mov	r8, r2
    43fa:	4699      	mov	r9, r3
    43fc:	46a2      	mov	sl, r4
    43fe:	46ab      	mov	fp, r5
    4400:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4402:	2201      	movs	r2, #1
    4404:	780b      	ldrb	r3, [r1, #0]
    4406:	4690      	mov	r8, r2
    4408:	202b      	movs	r0, #43	; 0x2b
    440a:	e7c9      	b.n	43a0 <_svfprintf_r+0xc8>
    440c:	1c4b      	adds	r3, r1, #1
    440e:	469b      	mov	fp, r3
    4410:	780b      	ldrb	r3, [r1, #0]
    4412:	2b2a      	cmp	r3, #42	; 0x2a
    4414:	d101      	bne.n	441a <_svfprintf_r+0x142>
    4416:	f001 fa1b 	bl	5850 <_svfprintf_r+0x1578>
    441a:	001a      	movs	r2, r3
    441c:	2100      	movs	r1, #0
    441e:	3a30      	subs	r2, #48	; 0x30
    4420:	468a      	mov	sl, r1
    4422:	4659      	mov	r1, fp
    4424:	2a09      	cmp	r2, #9
    4426:	d8bc      	bhi.n	43a2 <_svfprintf_r+0xca>
    4428:	0003      	movs	r3, r0
    442a:	0011      	movs	r1, r2
    442c:	4650      	mov	r0, sl
    442e:	465a      	mov	r2, fp
    4430:	469a      	mov	sl, r3
    4432:	46a3      	mov	fp, r4
    4434:	0083      	lsls	r3, r0, #2
    4436:	181b      	adds	r3, r3, r0
    4438:	7814      	ldrb	r4, [r2, #0]
    443a:	005b      	lsls	r3, r3, #1
    443c:	1858      	adds	r0, r3, r1
    443e:	0021      	movs	r1, r4
    4440:	1c53      	adds	r3, r2, #1
    4442:	3930      	subs	r1, #48	; 0x30
    4444:	001a      	movs	r2, r3
    4446:	2909      	cmp	r1, #9
    4448:	d9f4      	bls.n	4434 <_svfprintf_r+0x15c>
    444a:	4652      	mov	r2, sl
    444c:	0019      	movs	r1, r3
    444e:	4682      	mov	sl, r0
    4450:	0023      	movs	r3, r4
    4452:	0010      	movs	r0, r2
    4454:	465c      	mov	r4, fp
    4456:	e7a4      	b.n	43a2 <_svfprintf_r+0xca>
    4458:	2380      	movs	r3, #128	; 0x80
    445a:	431c      	orrs	r4, r3
    445c:	780b      	ldrb	r3, [r1, #0]
    445e:	e79f      	b.n	43a0 <_svfprintf_r+0xc8>
    4460:	468b      	mov	fp, r1
    4462:	4641      	mov	r1, r8
    4464:	9312      	str	r3, [sp, #72]	; 0x48
    4466:	2900      	cmp	r1, #0
    4468:	d001      	beq.n	446e <_svfprintf_r+0x196>
    446a:	f001 fa1f 	bl	58ac <_svfprintf_r+0x15d4>
    446e:	2310      	movs	r3, #16
    4470:	431c      	orrs	r4, r3
    4472:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4474:	06a3      	lsls	r3, r4, #26
    4476:	d501      	bpl.n	447c <_svfprintf_r+0x1a4>
    4478:	f000 fe88 	bl	518c <_svfprintf_r+0xeb4>
    447c:	06e3      	lsls	r3, r4, #27
    447e:	d501      	bpl.n	4484 <_svfprintf_r+0x1ac>
    4480:	f000 fd80 	bl	4f84 <_svfprintf_r+0xcac>
    4484:	0663      	lsls	r3, r4, #25
    4486:	d401      	bmi.n	448c <_svfprintf_r+0x1b4>
    4488:	f000 fd7c 	bl	4f84 <_svfprintf_r+0xcac>
    448c:	2100      	movs	r1, #0
    448e:	5e53      	ldrsh	r3, [r2, r1]
    4490:	930c      	str	r3, [sp, #48]	; 0x30
    4492:	3204      	adds	r2, #4
    4494:	17db      	asrs	r3, r3, #31
    4496:	930d      	str	r3, [sp, #52]	; 0x34
    4498:	920f      	str	r2, [sp, #60]	; 0x3c
    449a:	d501      	bpl.n	44a0 <_svfprintf_r+0x1c8>
    449c:	f000 fe86 	bl	51ac <_svfprintf_r+0xed4>
    44a0:	990c      	ldr	r1, [sp, #48]	; 0x30
    44a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    44a4:	0008      	movs	r0, r1
    44a6:	ab16      	add	r3, sp, #88	; 0x58
    44a8:	7fdb      	ldrb	r3, [r3, #31]
    44aa:	4310      	orrs	r0, r2
    44ac:	4698      	mov	r8, r3
    44ae:	0002      	movs	r2, r0
    44b0:	2301      	movs	r3, #1
    44b2:	4651      	mov	r1, sl
    44b4:	3101      	adds	r1, #1
    44b6:	d100      	bne.n	44ba <_svfprintf_r+0x1e2>
    44b8:	e0ff      	b.n	46ba <_svfprintf_r+0x3e2>
    44ba:	2180      	movs	r1, #128	; 0x80
    44bc:	0020      	movs	r0, r4
    44be:	4388      	bics	r0, r1
    44c0:	9008      	str	r0, [sp, #32]
    44c2:	2a00      	cmp	r2, #0
    44c4:	d000      	beq.n	44c8 <_svfprintf_r+0x1f0>
    44c6:	e0fc      	b.n	46c2 <_svfprintf_r+0x3ea>
    44c8:	4652      	mov	r2, sl
    44ca:	2a00      	cmp	r2, #0
    44cc:	d001      	beq.n	44d2 <_svfprintf_r+0x1fa>
    44ce:	f000 fc2c 	bl	4d2a <_svfprintf_r+0xa52>
    44d2:	2b00      	cmp	r3, #0
    44d4:	d001      	beq.n	44da <_svfprintf_r+0x202>
    44d6:	f000 fd04 	bl	4ee2 <_svfprintf_r+0xc0a>
    44da:	2001      	movs	r0, #1
    44dc:	ab32      	add	r3, sp, #200	; 0xc8
    44de:	4020      	ands	r0, r4
    44e0:	900e      	str	r0, [sp, #56]	; 0x38
    44e2:	9311      	str	r3, [sp, #68]	; 0x44
    44e4:	d008      	beq.n	44f8 <_svfprintf_r+0x220>
    44e6:	2327      	movs	r3, #39	; 0x27
    44e8:	2130      	movs	r1, #48	; 0x30
    44ea:	aa28      	add	r2, sp, #160	; 0xa0
    44ec:	54d1      	strb	r1, [r2, r3]
    44ee:	aa16      	add	r2, sp, #88	; 0x58
    44f0:	4694      	mov	ip, r2
    44f2:	3348      	adds	r3, #72	; 0x48
    44f4:	4463      	add	r3, ip
    44f6:	9311      	str	r3, [sp, #68]	; 0x44
    44f8:	4653      	mov	r3, sl
    44fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    44fc:	9307      	str	r3, [sp, #28]
    44fe:	4592      	cmp	sl, r2
    4500:	da00      	bge.n	4504 <_svfprintf_r+0x22c>
    4502:	9207      	str	r2, [sp, #28]
    4504:	2300      	movs	r3, #0
    4506:	9313      	str	r3, [sp, #76]	; 0x4c
    4508:	4643      	mov	r3, r8
    450a:	2b00      	cmp	r3, #0
    450c:	d002      	beq.n	4514 <_svfprintf_r+0x23c>
    450e:	9b07      	ldr	r3, [sp, #28]
    4510:	3301      	adds	r3, #1
    4512:	9307      	str	r3, [sp, #28]
    4514:	2302      	movs	r3, #2
    4516:	9a08      	ldr	r2, [sp, #32]
    4518:	401a      	ands	r2, r3
    451a:	4691      	mov	r9, r2
    451c:	d002      	beq.n	4524 <_svfprintf_r+0x24c>
    451e:	9b07      	ldr	r3, [sp, #28]
    4520:	3302      	adds	r3, #2
    4522:	9307      	str	r3, [sp, #28]
    4524:	2384      	movs	r3, #132	; 0x84
    4526:	9a08      	ldr	r2, [sp, #32]
    4528:	401a      	ands	r2, r3
    452a:	9210      	str	r2, [sp, #64]	; 0x40
    452c:	d000      	beq.n	4530 <_svfprintf_r+0x258>
    452e:	e24d      	b.n	49cc <_svfprintf_r+0x6f4>
    4530:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4532:	9a07      	ldr	r2, [sp, #28]
    4534:	1a9c      	subs	r4, r3, r2
    4536:	2c00      	cmp	r4, #0
    4538:	dc00      	bgt.n	453c <_svfprintf_r+0x264>
    453a:	e247      	b.n	49cc <_svfprintf_r+0x6f4>
    453c:	4974      	ldr	r1, [pc, #464]	; (4710 <_svfprintf_r+0x438>)
    453e:	68ba      	ldr	r2, [r7, #8]
    4540:	687b      	ldr	r3, [r7, #4]
    4542:	4688      	mov	r8, r1
    4544:	2c10      	cmp	r4, #16
    4546:	dd1f      	ble.n	4588 <_svfprintf_r+0x2b0>
    4548:	0031      	movs	r1, r6
    454a:	2510      	movs	r5, #16
    454c:	4646      	mov	r6, r8
    454e:	e003      	b.n	4558 <_svfprintf_r+0x280>
    4550:	3c10      	subs	r4, #16
    4552:	3108      	adds	r1, #8
    4554:	2c10      	cmp	r4, #16
    4556:	dd15      	ble.n	4584 <_svfprintf_r+0x2ac>
    4558:	3210      	adds	r2, #16
    455a:	3301      	adds	r3, #1
    455c:	600e      	str	r6, [r1, #0]
    455e:	604d      	str	r5, [r1, #4]
    4560:	60ba      	str	r2, [r7, #8]
    4562:	607b      	str	r3, [r7, #4]
    4564:	2b07      	cmp	r3, #7
    4566:	ddf3      	ble.n	4550 <_svfprintf_r+0x278>
    4568:	003a      	movs	r2, r7
    456a:	9906      	ldr	r1, [sp, #24]
    456c:	9809      	ldr	r0, [sp, #36]	; 0x24
    456e:	f003 f90b 	bl	7788 <__ssprint_r>
    4572:	2800      	cmp	r0, #0
    4574:	d000      	beq.n	4578 <_svfprintf_r+0x2a0>
    4576:	e736      	b.n	43e6 <_svfprintf_r+0x10e>
    4578:	3c10      	subs	r4, #16
    457a:	68ba      	ldr	r2, [r7, #8]
    457c:	687b      	ldr	r3, [r7, #4]
    457e:	a932      	add	r1, sp, #200	; 0xc8
    4580:	2c10      	cmp	r4, #16
    4582:	dce9      	bgt.n	4558 <_svfprintf_r+0x280>
    4584:	46b0      	mov	r8, r6
    4586:	000e      	movs	r6, r1
    4588:	4641      	mov	r1, r8
    458a:	6074      	str	r4, [r6, #4]
    458c:	3301      	adds	r3, #1
    458e:	18a4      	adds	r4, r4, r2
    4590:	6031      	str	r1, [r6, #0]
    4592:	60bc      	str	r4, [r7, #8]
    4594:	607b      	str	r3, [r7, #4]
    4596:	2b07      	cmp	r3, #7
    4598:	dd01      	ble.n	459e <_svfprintf_r+0x2c6>
    459a:	f000 fca8 	bl	4eee <_svfprintf_r+0xc16>
    459e:	ab16      	add	r3, sp, #88	; 0x58
    45a0:	7fdb      	ldrb	r3, [r3, #31]
    45a2:	3608      	adds	r6, #8
    45a4:	4698      	mov	r8, r3
    45a6:	e212      	b.n	49ce <_svfprintf_r+0x6f6>
    45a8:	468b      	mov	fp, r1
    45aa:	4641      	mov	r1, r8
    45ac:	9312      	str	r3, [sp, #72]	; 0x48
    45ae:	2900      	cmp	r1, #0
    45b0:	d001      	beq.n	45b6 <_svfprintf_r+0x2de>
    45b2:	f001 f977 	bl	58a4 <_svfprintf_r+0x15cc>
    45b6:	2207      	movs	r2, #7
    45b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    45ba:	3307      	adds	r3, #7
    45bc:	4393      	bics	r3, r2
    45be:	3201      	adds	r2, #1
    45c0:	4694      	mov	ip, r2
    45c2:	449c      	add	ip, r3
    45c4:	4662      	mov	r2, ip
    45c6:	920f      	str	r2, [sp, #60]	; 0x3c
    45c8:	681a      	ldr	r2, [r3, #0]
    45ca:	9216      	str	r2, [sp, #88]	; 0x58
    45cc:	685b      	ldr	r3, [r3, #4]
    45ce:	2201      	movs	r2, #1
    45d0:	9315      	str	r3, [sp, #84]	; 0x54
    45d2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    45d4:	9d16      	ldr	r5, [sp, #88]	; 0x58
    45d6:	005b      	lsls	r3, r3, #1
    45d8:	085b      	lsrs	r3, r3, #1
    45da:	4698      	mov	r8, r3
    45dc:	4252      	negs	r2, r2
    45de:	4b4d      	ldr	r3, [pc, #308]	; (4714 <_svfprintf_r+0x43c>)
    45e0:	0028      	movs	r0, r5
    45e2:	4641      	mov	r1, r8
    45e4:	f003 fff4 	bl	85d0 <__aeabi_dcmpun>
    45e8:	2800      	cmp	r0, #0
    45ea:	d001      	beq.n	45f0 <_svfprintf_r+0x318>
    45ec:	f000 fdfd 	bl	51ea <_svfprintf_r+0xf12>
    45f0:	2201      	movs	r2, #1
    45f2:	4b48      	ldr	r3, [pc, #288]	; (4714 <_svfprintf_r+0x43c>)
    45f4:	4252      	negs	r2, r2
    45f6:	0028      	movs	r0, r5
    45f8:	4641      	mov	r1, r8
    45fa:	f003 fdeb 	bl	81d4 <__aeabi_dcmple>
    45fe:	2800      	cmp	r0, #0
    4600:	d001      	beq.n	4606 <_svfprintf_r+0x32e>
    4602:	f000 fdf2 	bl	51ea <_svfprintf_r+0xf12>
    4606:	2200      	movs	r2, #0
    4608:	2300      	movs	r3, #0
    460a:	9816      	ldr	r0, [sp, #88]	; 0x58
    460c:	9915      	ldr	r1, [sp, #84]	; 0x54
    460e:	f003 fdd7 	bl	81c0 <__aeabi_dcmplt>
    4612:	2800      	cmp	r0, #0
    4614:	d001      	beq.n	461a <_svfprintf_r+0x342>
    4616:	f001 f822 	bl	565e <_svfprintf_r+0x1386>
    461a:	ab16      	add	r3, sp, #88	; 0x58
    461c:	7fdb      	ldrb	r3, [r3, #31]
    461e:	4698      	mov	r8, r3
    4620:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4622:	2b47      	cmp	r3, #71	; 0x47
    4624:	dd01      	ble.n	462a <_svfprintf_r+0x352>
    4626:	f000 fec7 	bl	53b8 <_svfprintf_r+0x10e0>
    462a:	4b3b      	ldr	r3, [pc, #236]	; (4718 <_svfprintf_r+0x440>)
    462c:	9311      	str	r3, [sp, #68]	; 0x44
    462e:	2380      	movs	r3, #128	; 0x80
    4630:	439c      	bics	r4, r3
    4632:	3b7d      	subs	r3, #125	; 0x7d
    4634:	9307      	str	r3, [sp, #28]
    4636:	930e      	str	r3, [sp, #56]	; 0x38
    4638:	2300      	movs	r3, #0
    463a:	9408      	str	r4, [sp, #32]
    463c:	469a      	mov	sl, r3
    463e:	9313      	str	r3, [sp, #76]	; 0x4c
    4640:	e762      	b.n	4508 <_svfprintf_r+0x230>
    4642:	2200      	movs	r2, #0
    4644:	3b30      	subs	r3, #48	; 0x30
    4646:	0015      	movs	r5, r2
    4648:	001a      	movs	r2, r3
    464a:	0003      	movs	r3, r0
    464c:	9407      	str	r4, [sp, #28]
    464e:	0008      	movs	r0, r1
    4650:	002c      	movs	r4, r5
    4652:	469b      	mov	fp, r3
    4654:	00a3      	lsls	r3, r4, #2
    4656:	191c      	adds	r4, r3, r4
    4658:	7803      	ldrb	r3, [r0, #0]
    465a:	0064      	lsls	r4, r4, #1
    465c:	1914      	adds	r4, r2, r4
    465e:	001a      	movs	r2, r3
    4660:	3101      	adds	r1, #1
    4662:	3a30      	subs	r2, #48	; 0x30
    4664:	0008      	movs	r0, r1
    4666:	2a09      	cmp	r2, #9
    4668:	d9f4      	bls.n	4654 <_svfprintf_r+0x37c>
    466a:	940b      	str	r4, [sp, #44]	; 0x2c
    466c:	4658      	mov	r0, fp
    466e:	9c07      	ldr	r4, [sp, #28]
    4670:	e697      	b.n	43a2 <_svfprintf_r+0xca>
    4672:	2308      	movs	r3, #8
    4674:	431c      	orrs	r4, r3
    4676:	780b      	ldrb	r3, [r1, #0]
    4678:	e692      	b.n	43a0 <_svfprintf_r+0xc8>
    467a:	9312      	str	r3, [sp, #72]	; 0x48
    467c:	2310      	movs	r3, #16
    467e:	431c      	orrs	r4, r3
    4680:	468b      	mov	fp, r1
    4682:	06a3      	lsls	r3, r4, #26
    4684:	d500      	bpl.n	4688 <_svfprintf_r+0x3b0>
    4686:	e17b      	b.n	4980 <_svfprintf_r+0x6a8>
    4688:	06e3      	lsls	r3, r4, #27
    468a:	d501      	bpl.n	4690 <_svfprintf_r+0x3b8>
    468c:	f000 fc7e 	bl	4f8c <_svfprintf_r+0xcb4>
    4690:	0663      	lsls	r3, r4, #25
    4692:	d401      	bmi.n	4698 <_svfprintf_r+0x3c0>
    4694:	f000 fc7a 	bl	4f8c <_svfprintf_r+0xcb4>
    4698:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    469a:	881a      	ldrh	r2, [r3, #0]
    469c:	920c      	str	r2, [sp, #48]	; 0x30
    469e:	2200      	movs	r2, #0
    46a0:	3304      	adds	r3, #4
    46a2:	930f      	str	r3, [sp, #60]	; 0x3c
    46a4:	2300      	movs	r3, #0
    46a6:	920d      	str	r2, [sp, #52]	; 0x34
    46a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    46aa:	2100      	movs	r1, #0
    46ac:	a816      	add	r0, sp, #88	; 0x58
    46ae:	77c1      	strb	r1, [r0, #31]
    46b0:	4688      	mov	r8, r1
    46b2:	4651      	mov	r1, sl
    46b4:	3101      	adds	r1, #1
    46b6:	d000      	beq.n	46ba <_svfprintf_r+0x3e2>
    46b8:	e6ff      	b.n	44ba <_svfprintf_r+0x1e2>
    46ba:	2a00      	cmp	r2, #0
    46bc:	d100      	bne.n	46c0 <_svfprintf_r+0x3e8>
    46be:	e335      	b.n	4d2c <_svfprintf_r+0xa54>
    46c0:	9408      	str	r4, [sp, #32]
    46c2:	2b01      	cmp	r3, #1
    46c4:	d100      	bne.n	46c8 <_svfprintf_r+0x3f0>
    46c6:	e3e5      	b.n	4e94 <_svfprintf_r+0xbbc>
    46c8:	2b02      	cmp	r3, #2
    46ca:	d000      	beq.n	46ce <_svfprintf_r+0x3f6>
    46cc:	e362      	b.n	4d94 <_svfprintf_r+0xabc>
    46ce:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    46d0:	200f      	movs	r0, #15
    46d2:	46a1      	mov	r9, r4
    46d4:	46b4      	mov	ip, r6
    46d6:	ab32      	add	r3, sp, #200	; 0xc8
    46d8:	0019      	movs	r1, r3
    46da:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    46dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    46de:	0004      	movs	r4, r0
    46e0:	464d      	mov	r5, r9
    46e2:	4014      	ands	r4, r2
    46e4:	5d2c      	ldrb	r4, [r5, r4]
    46e6:	071e      	lsls	r6, r3, #28
    46e8:	0915      	lsrs	r5, r2, #4
    46ea:	3901      	subs	r1, #1
    46ec:	432e      	orrs	r6, r5
    46ee:	700c      	strb	r4, [r1, #0]
    46f0:	091c      	lsrs	r4, r3, #4
    46f2:	0023      	movs	r3, r4
    46f4:	0034      	movs	r4, r6
    46f6:	0032      	movs	r2, r6
    46f8:	431c      	orrs	r4, r3
    46fa:	d1f0      	bne.n	46de <_svfprintf_r+0x406>
    46fc:	920c      	str	r2, [sp, #48]	; 0x30
    46fe:	930d      	str	r3, [sp, #52]	; 0x34
    4700:	ab32      	add	r3, sp, #200	; 0xc8
    4702:	1a5b      	subs	r3, r3, r1
    4704:	9111      	str	r1, [sp, #68]	; 0x44
    4706:	4666      	mov	r6, ip
    4708:	930e      	str	r3, [sp, #56]	; 0x38
    470a:	e6f5      	b.n	44f8 <_svfprintf_r+0x220>
    470c:	0000893c 	.word	0x0000893c
    4710:	00008ae4 	.word	0x00008ae4
    4714:	7fefffff 	.word	0x7fefffff
    4718:	00008aa0 	.word	0x00008aa0
    471c:	9312      	str	r3, [sp, #72]	; 0x48
    471e:	2310      	movs	r3, #16
    4720:	431c      	orrs	r4, r3
    4722:	468b      	mov	fp, r1
    4724:	06a3      	lsls	r3, r4, #26
    4726:	d500      	bpl.n	472a <_svfprintf_r+0x452>
    4728:	e111      	b.n	494e <_svfprintf_r+0x676>
    472a:	06e3      	lsls	r3, r4, #27
    472c:	d501      	bpl.n	4732 <_svfprintf_r+0x45a>
    472e:	f000 fc31 	bl	4f94 <_svfprintf_r+0xcbc>
    4732:	0663      	lsls	r3, r4, #25
    4734:	d401      	bmi.n	473a <_svfprintf_r+0x462>
    4736:	f000 fc2d 	bl	4f94 <_svfprintf_r+0xcbc>
    473a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    473c:	881a      	ldrh	r2, [r3, #0]
    473e:	920c      	str	r2, [sp, #48]	; 0x30
    4740:	2200      	movs	r2, #0
    4742:	3304      	adds	r3, #4
    4744:	920d      	str	r2, [sp, #52]	; 0x34
    4746:	930f      	str	r3, [sp, #60]	; 0x3c
    4748:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    474a:	2301      	movs	r3, #1
    474c:	e7ad      	b.n	46aa <_svfprintf_r+0x3d2>
    474e:	468b      	mov	fp, r1
    4750:	4641      	mov	r1, r8
    4752:	9312      	str	r3, [sp, #72]	; 0x48
    4754:	2900      	cmp	r1, #0
    4756:	d001      	beq.n	475c <_svfprintf_r+0x484>
    4758:	f001 f890 	bl	587c <_svfprintf_r+0x15a4>
    475c:	4bb8      	ldr	r3, [pc, #736]	; (4a40 <_svfprintf_r+0x768>)
    475e:	9317      	str	r3, [sp, #92]	; 0x5c
    4760:	06a3      	lsls	r3, r4, #26
    4762:	d500      	bpl.n	4766 <_svfprintf_r+0x48e>
    4764:	e0ab      	b.n	48be <_svfprintf_r+0x5e6>
    4766:	06e3      	lsls	r3, r4, #27
    4768:	d501      	bpl.n	476e <_svfprintf_r+0x496>
    476a:	f000 fc07 	bl	4f7c <_svfprintf_r+0xca4>
    476e:	0663      	lsls	r3, r4, #25
    4770:	d401      	bmi.n	4776 <_svfprintf_r+0x49e>
    4772:	f000 fc03 	bl	4f7c <_svfprintf_r+0xca4>
    4776:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4778:	881a      	ldrh	r2, [r3, #0]
    477a:	920c      	str	r2, [sp, #48]	; 0x30
    477c:	2200      	movs	r2, #0
    477e:	3304      	adds	r3, #4
    4780:	920d      	str	r2, [sp, #52]	; 0x34
    4782:	930f      	str	r3, [sp, #60]	; 0x3c
    4784:	07e3      	lsls	r3, r4, #31
    4786:	d400      	bmi.n	478a <_svfprintf_r+0x4b2>
    4788:	e0a9      	b.n	48de <_svfprintf_r+0x606>
    478a:	990c      	ldr	r1, [sp, #48]	; 0x30
    478c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    478e:	000b      	movs	r3, r1
    4790:	4313      	orrs	r3, r2
    4792:	001a      	movs	r2, r3
    4794:	2302      	movs	r3, #2
    4796:	2a00      	cmp	r2, #0
    4798:	d100      	bne.n	479c <_svfprintf_r+0x4c4>
    479a:	e786      	b.n	46aa <_svfprintf_r+0x3d2>
    479c:	2030      	movs	r0, #48	; 0x30
    479e:	a91e      	add	r1, sp, #120	; 0x78
    47a0:	7008      	strb	r0, [r1, #0]
    47a2:	2548      	movs	r5, #72	; 0x48
    47a4:	4668      	mov	r0, sp
    47a6:	1940      	adds	r0, r0, r5
    47a8:	7800      	ldrb	r0, [r0, #0]
    47aa:	431c      	orrs	r4, r3
    47ac:	7048      	strb	r0, [r1, #1]
    47ae:	e77c      	b.n	46aa <_svfprintf_r+0x3d2>
    47b0:	468b      	mov	fp, r1
    47b2:	4641      	mov	r1, r8
    47b4:	2900      	cmp	r1, #0
    47b6:	d001      	beq.n	47bc <_svfprintf_r+0x4e4>
    47b8:	f001 f883 	bl	58c2 <_svfprintf_r+0x15ea>
    47bc:	06a3      	lsls	r3, r4, #26
    47be:	d501      	bpl.n	47c4 <_svfprintf_r+0x4ec>
    47c0:	f000 fde9 	bl	5396 <_svfprintf_r+0x10be>
    47c4:	06e3      	lsls	r3, r4, #27
    47c6:	d501      	bpl.n	47cc <_svfprintf_r+0x4f4>
    47c8:	f000 fd9b 	bl	5302 <_svfprintf_r+0x102a>
    47cc:	0663      	lsls	r3, r4, #25
    47ce:	d401      	bmi.n	47d4 <_svfprintf_r+0x4fc>
    47d0:	f000 fd97 	bl	5302 <_svfprintf_r+0x102a>
    47d4:	4669      	mov	r1, sp
    47d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    47d8:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    47da:	681a      	ldr	r2, [r3, #0]
    47dc:	3304      	adds	r3, #4
    47de:	9207      	str	r2, [sp, #28]
    47e0:	8011      	strh	r1, [r2, #0]
    47e2:	930f      	str	r3, [sp, #60]	; 0x3c
    47e4:	e5a3      	b.n	432e <_svfprintf_r+0x56>
    47e6:	464b      	mov	r3, r9
    47e8:	431c      	orrs	r4, r3
    47ea:	780b      	ldrb	r3, [r1, #0]
    47ec:	e5d8      	b.n	43a0 <_svfprintf_r+0xc8>
    47ee:	9312      	str	r3, [sp, #72]	; 0x48
    47f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    47f2:	468b      	mov	fp, r1
    47f4:	1d1d      	adds	r5, r3, #4
    47f6:	681b      	ldr	r3, [r3, #0]
    47f8:	a916      	add	r1, sp, #88	; 0x58
    47fa:	001a      	movs	r2, r3
    47fc:	9311      	str	r3, [sp, #68]	; 0x44
    47fe:	2300      	movs	r3, #0
    4800:	77cb      	strb	r3, [r1, #31]
    4802:	2a00      	cmp	r2, #0
    4804:	d101      	bne.n	480a <_svfprintf_r+0x532>
    4806:	f000 fefb 	bl	5600 <_svfprintf_r+0x1328>
    480a:	4653      	mov	r3, sl
    480c:	3301      	adds	r3, #1
    480e:	d101      	bne.n	4814 <_svfprintf_r+0x53c>
    4810:	f000 fe38 	bl	5484 <_svfprintf_r+0x11ac>
    4814:	4652      	mov	r2, sl
    4816:	2100      	movs	r1, #0
    4818:	9811      	ldr	r0, [sp, #68]	; 0x44
    481a:	f002 fc0b 	bl	7034 <memchr>
    481e:	2800      	cmp	r0, #0
    4820:	d101      	bne.n	4826 <_svfprintf_r+0x54e>
    4822:	f000 ff54 	bl	56ce <_svfprintf_r+0x13f6>
    4826:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4828:	1ac3      	subs	r3, r0, r3
    482a:	001a      	movs	r2, r3
    482c:	930e      	str	r3, [sp, #56]	; 0x38
    482e:	43db      	mvns	r3, r3
    4830:	17db      	asrs	r3, r3, #31
    4832:	401a      	ands	r2, r3
    4834:	ab16      	add	r3, sp, #88	; 0x58
    4836:	7fdb      	ldrb	r3, [r3, #31]
    4838:	9207      	str	r2, [sp, #28]
    483a:	4698      	mov	r8, r3
    483c:	2300      	movs	r3, #0
    483e:	950f      	str	r5, [sp, #60]	; 0x3c
    4840:	9408      	str	r4, [sp, #32]
    4842:	469a      	mov	sl, r3
    4844:	9313      	str	r3, [sp, #76]	; 0x4c
    4846:	e65f      	b.n	4508 <_svfprintf_r+0x230>
    4848:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    484a:	9312      	str	r3, [sp, #72]	; 0x48
    484c:	6813      	ldr	r3, [r2, #0]
    484e:	ad28      	add	r5, sp, #160	; 0xa0
    4850:	9307      	str	r3, [sp, #28]
    4852:	466b      	mov	r3, sp
    4854:	7f1b      	ldrb	r3, [r3, #28]
    4856:	468b      	mov	fp, r1
    4858:	702b      	strb	r3, [r5, #0]
    485a:	2300      	movs	r3, #0
    485c:	a916      	add	r1, sp, #88	; 0x58
    485e:	77cb      	strb	r3, [r1, #31]
    4860:	0013      	movs	r3, r2
    4862:	3304      	adds	r3, #4
    4864:	930f      	str	r3, [sp, #60]	; 0x3c
    4866:	2300      	movs	r3, #0
    4868:	9408      	str	r4, [sp, #32]
    486a:	4698      	mov	r8, r3
    486c:	3301      	adds	r3, #1
    486e:	9307      	str	r3, [sp, #28]
    4870:	930e      	str	r3, [sp, #56]	; 0x38
    4872:	2300      	movs	r3, #0
    4874:	9511      	str	r5, [sp, #68]	; 0x44
    4876:	469a      	mov	sl, r3
    4878:	9313      	str	r3, [sp, #76]	; 0x4c
    487a:	e64b      	b.n	4514 <_svfprintf_r+0x23c>
    487c:	468b      	mov	fp, r1
    487e:	4641      	mov	r1, r8
    4880:	9312      	str	r3, [sp, #72]	; 0x48
    4882:	2900      	cmp	r1, #0
    4884:	d100      	bne.n	4888 <_svfprintf_r+0x5b0>
    4886:	e5f4      	b.n	4472 <_svfprintf_r+0x19a>
    4888:	ab16      	add	r3, sp, #88	; 0x58
    488a:	77d8      	strb	r0, [r3, #31]
    488c:	e5f1      	b.n	4472 <_svfprintf_r+0x19a>
    488e:	4663      	mov	r3, ip
    4890:	431c      	orrs	r4, r3
    4892:	780b      	ldrb	r3, [r1, #0]
    4894:	e584      	b.n	43a0 <_svfprintf_r+0xc8>
    4896:	780b      	ldrb	r3, [r1, #0]
    4898:	2b6c      	cmp	r3, #108	; 0x6c
    489a:	d101      	bne.n	48a0 <_svfprintf_r+0x5c8>
    489c:	f000 fd86 	bl	53ac <_svfprintf_r+0x10d4>
    48a0:	2210      	movs	r2, #16
    48a2:	4314      	orrs	r4, r2
    48a4:	e57c      	b.n	43a0 <_svfprintf_r+0xc8>
    48a6:	468b      	mov	fp, r1
    48a8:	4641      	mov	r1, r8
    48aa:	9312      	str	r3, [sp, #72]	; 0x48
    48ac:	2900      	cmp	r1, #0
    48ae:	d001      	beq.n	48b4 <_svfprintf_r+0x5dc>
    48b0:	f000 ffe8 	bl	5884 <_svfprintf_r+0x15ac>
    48b4:	4b63      	ldr	r3, [pc, #396]	; (4a44 <_svfprintf_r+0x76c>)
    48b6:	9317      	str	r3, [sp, #92]	; 0x5c
    48b8:	06a3      	lsls	r3, r4, #26
    48ba:	d400      	bmi.n	48be <_svfprintf_r+0x5e6>
    48bc:	e753      	b.n	4766 <_svfprintf_r+0x48e>
    48be:	2207      	movs	r2, #7
    48c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    48c2:	3307      	adds	r3, #7
    48c4:	4393      	bics	r3, r2
    48c6:	3201      	adds	r2, #1
    48c8:	4694      	mov	ip, r2
    48ca:	449c      	add	ip, r3
    48cc:	4662      	mov	r2, ip
    48ce:	920f      	str	r2, [sp, #60]	; 0x3c
    48d0:	681a      	ldr	r2, [r3, #0]
    48d2:	685b      	ldr	r3, [r3, #4]
    48d4:	920c      	str	r2, [sp, #48]	; 0x30
    48d6:	930d      	str	r3, [sp, #52]	; 0x34
    48d8:	07e3      	lsls	r3, r4, #31
    48da:	d500      	bpl.n	48de <_svfprintf_r+0x606>
    48dc:	e755      	b.n	478a <_svfprintf_r+0x4b2>
    48de:	990c      	ldr	r1, [sp, #48]	; 0x30
    48e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    48e2:	0008      	movs	r0, r1
    48e4:	4310      	orrs	r0, r2
    48e6:	2302      	movs	r3, #2
    48e8:	0002      	movs	r2, r0
    48ea:	e6de      	b.n	46aa <_svfprintf_r+0x3d2>
    48ec:	468b      	mov	fp, r1
    48ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
    48f0:	2230      	movs	r2, #48	; 0x30
    48f2:	680b      	ldr	r3, [r1, #0]
    48f4:	930c      	str	r3, [sp, #48]	; 0x30
    48f6:	2300      	movs	r3, #0
    48f8:	930d      	str	r3, [sp, #52]	; 0x34
    48fa:	3302      	adds	r3, #2
    48fc:	431c      	orrs	r4, r3
    48fe:	ab1e      	add	r3, sp, #120	; 0x78
    4900:	701a      	strb	r2, [r3, #0]
    4902:	3248      	adds	r2, #72	; 0x48
    4904:	705a      	strb	r2, [r3, #1]
    4906:	000b      	movs	r3, r1
    4908:	3304      	adds	r3, #4
    490a:	930f      	str	r3, [sp, #60]	; 0x3c
    490c:	4b4d      	ldr	r3, [pc, #308]	; (4a44 <_svfprintf_r+0x76c>)
    490e:	9212      	str	r2, [sp, #72]	; 0x48
    4910:	9317      	str	r3, [sp, #92]	; 0x5c
    4912:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    4914:	2302      	movs	r3, #2
    4916:	e6c8      	b.n	46aa <_svfprintf_r+0x3d2>
    4918:	2301      	movs	r3, #1
    491a:	431c      	orrs	r4, r3
    491c:	780b      	ldrb	r3, [r1, #0]
    491e:	e53f      	b.n	43a0 <_svfprintf_r+0xc8>
    4920:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4922:	1d1a      	adds	r2, r3, #4
    4924:	681b      	ldr	r3, [r3, #0]
    4926:	930b      	str	r3, [sp, #44]	; 0x2c
    4928:	2b00      	cmp	r3, #0
    492a:	da00      	bge.n	492e <_svfprintf_r+0x656>
    492c:	e542      	b.n	43b4 <_svfprintf_r+0xdc>
    492e:	780b      	ldrb	r3, [r1, #0]
    4930:	920f      	str	r2, [sp, #60]	; 0x3c
    4932:	e535      	b.n	43a0 <_svfprintf_r+0xc8>
    4934:	780b      	ldrb	r3, [r1, #0]
    4936:	2800      	cmp	r0, #0
    4938:	d000      	beq.n	493c <_svfprintf_r+0x664>
    493a:	e531      	b.n	43a0 <_svfprintf_r+0xc8>
    493c:	2201      	movs	r2, #1
    493e:	3020      	adds	r0, #32
    4940:	4690      	mov	r8, r2
    4942:	e52d      	b.n	43a0 <_svfprintf_r+0xc8>
    4944:	468b      	mov	fp, r1
    4946:	9312      	str	r3, [sp, #72]	; 0x48
    4948:	06a3      	lsls	r3, r4, #26
    494a:	d400      	bmi.n	494e <_svfprintf_r+0x676>
    494c:	e6ed      	b.n	472a <_svfprintf_r+0x452>
    494e:	2207      	movs	r2, #7
    4950:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4952:	3307      	adds	r3, #7
    4954:	4393      	bics	r3, r2
    4956:	3201      	adds	r2, #1
    4958:	4694      	mov	ip, r2
    495a:	449c      	add	ip, r3
    495c:	4662      	mov	r2, ip
    495e:	920f      	str	r2, [sp, #60]	; 0x3c
    4960:	681a      	ldr	r2, [r3, #0]
    4962:	685b      	ldr	r3, [r3, #4]
    4964:	0011      	movs	r1, r2
    4966:	001a      	movs	r2, r3
    4968:	0008      	movs	r0, r1
    496a:	4310      	orrs	r0, r2
    496c:	910c      	str	r1, [sp, #48]	; 0x30
    496e:	920d      	str	r2, [sp, #52]	; 0x34
    4970:	2301      	movs	r3, #1
    4972:	0002      	movs	r2, r0
    4974:	e699      	b.n	46aa <_svfprintf_r+0x3d2>
    4976:	468b      	mov	fp, r1
    4978:	9312      	str	r3, [sp, #72]	; 0x48
    497a:	06a3      	lsls	r3, r4, #26
    497c:	d400      	bmi.n	4980 <_svfprintf_r+0x6a8>
    497e:	e683      	b.n	4688 <_svfprintf_r+0x3b0>
    4980:	2207      	movs	r2, #7
    4982:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4984:	3307      	adds	r3, #7
    4986:	4393      	bics	r3, r2
    4988:	3201      	adds	r2, #1
    498a:	4694      	mov	ip, r2
    498c:	449c      	add	ip, r3
    498e:	4662      	mov	r2, ip
    4990:	920f      	str	r2, [sp, #60]	; 0x3c
    4992:	681a      	ldr	r2, [r3, #0]
    4994:	685b      	ldr	r3, [r3, #4]
    4996:	0011      	movs	r1, r2
    4998:	001a      	movs	r2, r3
    499a:	0008      	movs	r0, r1
    499c:	4310      	orrs	r0, r2
    499e:	910c      	str	r1, [sp, #48]	; 0x30
    49a0:	920d      	str	r2, [sp, #52]	; 0x34
    49a2:	2300      	movs	r3, #0
    49a4:	0002      	movs	r2, r0
    49a6:	e680      	b.n	46aa <_svfprintf_r+0x3d2>
    49a8:	468b      	mov	fp, r1
    49aa:	4641      	mov	r1, r8
    49ac:	9312      	str	r3, [sp, #72]	; 0x48
    49ae:	2900      	cmp	r1, #0
    49b0:	d001      	beq.n	49b6 <_svfprintf_r+0x6de>
    49b2:	f000 ff7f 	bl	58b4 <_svfprintf_r+0x15dc>
    49b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    49b8:	2b00      	cmp	r3, #0
    49ba:	d100      	bne.n	49be <_svfprintf_r+0x6e6>
    49bc:	e50b      	b.n	43d6 <_svfprintf_r+0xfe>
    49be:	ad28      	add	r5, sp, #160	; 0xa0
    49c0:	702b      	strb	r3, [r5, #0]
    49c2:	2300      	movs	r3, #0
    49c4:	aa16      	add	r2, sp, #88	; 0x58
    49c6:	77d3      	strb	r3, [r2, #31]
    49c8:	9408      	str	r4, [sp, #32]
    49ca:	e74e      	b.n	486a <_svfprintf_r+0x592>
    49cc:	68bc      	ldr	r4, [r7, #8]
    49ce:	4643      	mov	r3, r8
    49d0:	2b00      	cmp	r3, #0
    49d2:	d00f      	beq.n	49f4 <_svfprintf_r+0x71c>
    49d4:	aa16      	add	r2, sp, #88	; 0x58
    49d6:	231f      	movs	r3, #31
    49d8:	4694      	mov	ip, r2
    49da:	4463      	add	r3, ip
    49dc:	6033      	str	r3, [r6, #0]
    49de:	2301      	movs	r3, #1
    49e0:	6073      	str	r3, [r6, #4]
    49e2:	687b      	ldr	r3, [r7, #4]
    49e4:	3401      	adds	r4, #1
    49e6:	3301      	adds	r3, #1
    49e8:	60bc      	str	r4, [r7, #8]
    49ea:	607b      	str	r3, [r7, #4]
    49ec:	2b07      	cmp	r3, #7
    49ee:	dd00      	ble.n	49f2 <_svfprintf_r+0x71a>
    49f0:	e1b3      	b.n	4d5a <_svfprintf_r+0xa82>
    49f2:	3608      	adds	r6, #8
    49f4:	464b      	mov	r3, r9
    49f6:	2b00      	cmp	r3, #0
    49f8:	d00c      	beq.n	4a14 <_svfprintf_r+0x73c>
    49fa:	ab1e      	add	r3, sp, #120	; 0x78
    49fc:	6033      	str	r3, [r6, #0]
    49fe:	2302      	movs	r3, #2
    4a00:	6073      	str	r3, [r6, #4]
    4a02:	687b      	ldr	r3, [r7, #4]
    4a04:	3402      	adds	r4, #2
    4a06:	3301      	adds	r3, #1
    4a08:	60bc      	str	r4, [r7, #8]
    4a0a:	607b      	str	r3, [r7, #4]
    4a0c:	2b07      	cmp	r3, #7
    4a0e:	dd00      	ble.n	4a12 <_svfprintf_r+0x73a>
    4a10:	e1af      	b.n	4d72 <_svfprintf_r+0xa9a>
    4a12:	3608      	adds	r6, #8
    4a14:	9b10      	ldr	r3, [sp, #64]	; 0x40
    4a16:	2b80      	cmp	r3, #128	; 0x80
    4a18:	d100      	bne.n	4a1c <_svfprintf_r+0x744>
    4a1a:	e120      	b.n	4c5e <_svfprintf_r+0x986>
    4a1c:	4653      	mov	r3, sl
    4a1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4a20:	1a9d      	subs	r5, r3, r2
    4a22:	2d00      	cmp	r5, #0
    4a24:	dd3c      	ble.n	4aa0 <_svfprintf_r+0x7c8>
    4a26:	4a08      	ldr	r2, [pc, #32]	; (4a48 <_svfprintf_r+0x770>)
    4a28:	687b      	ldr	r3, [r7, #4]
    4a2a:	4691      	mov	r9, r2
    4a2c:	2d10      	cmp	r5, #16
    4a2e:	dd2c      	ble.n	4a8a <_svfprintf_r+0x7b2>
    4a30:	2210      	movs	r2, #16
    4a32:	0021      	movs	r1, r4
    4a34:	4692      	mov	sl, r2
    4a36:	9c09      	ldr	r4, [sp, #36]	; 0x24
    4a38:	0032      	movs	r2, r6
    4a3a:	002e      	movs	r6, r5
    4a3c:	464d      	mov	r5, r9
    4a3e:	e009      	b.n	4a54 <_svfprintf_r+0x77c>
    4a40:	00008ab0 	.word	0x00008ab0
    4a44:	00008ac4 	.word	0x00008ac4
    4a48:	00008af4 	.word	0x00008af4
    4a4c:	3e10      	subs	r6, #16
    4a4e:	3208      	adds	r2, #8
    4a50:	2e10      	cmp	r6, #16
    4a52:	dd16      	ble.n	4a82 <_svfprintf_r+0x7aa>
    4a54:	4650      	mov	r0, sl
    4a56:	3110      	adds	r1, #16
    4a58:	3301      	adds	r3, #1
    4a5a:	6015      	str	r5, [r2, #0]
    4a5c:	6050      	str	r0, [r2, #4]
    4a5e:	60b9      	str	r1, [r7, #8]
    4a60:	607b      	str	r3, [r7, #4]
    4a62:	2b07      	cmp	r3, #7
    4a64:	ddf2      	ble.n	4a4c <_svfprintf_r+0x774>
    4a66:	003a      	movs	r2, r7
    4a68:	9906      	ldr	r1, [sp, #24]
    4a6a:	0020      	movs	r0, r4
    4a6c:	f002 fe8c 	bl	7788 <__ssprint_r>
    4a70:	2800      	cmp	r0, #0
    4a72:	d000      	beq.n	4a76 <_svfprintf_r+0x79e>
    4a74:	e4b7      	b.n	43e6 <_svfprintf_r+0x10e>
    4a76:	3e10      	subs	r6, #16
    4a78:	68b9      	ldr	r1, [r7, #8]
    4a7a:	687b      	ldr	r3, [r7, #4]
    4a7c:	aa32      	add	r2, sp, #200	; 0xc8
    4a7e:	2e10      	cmp	r6, #16
    4a80:	dce8      	bgt.n	4a54 <_svfprintf_r+0x77c>
    4a82:	46a9      	mov	r9, r5
    4a84:	000c      	movs	r4, r1
    4a86:	0035      	movs	r5, r6
    4a88:	0016      	movs	r6, r2
    4a8a:	464a      	mov	r2, r9
    4a8c:	1964      	adds	r4, r4, r5
    4a8e:	3301      	adds	r3, #1
    4a90:	6032      	str	r2, [r6, #0]
    4a92:	6075      	str	r5, [r6, #4]
    4a94:	60bc      	str	r4, [r7, #8]
    4a96:	607b      	str	r3, [r7, #4]
    4a98:	2b07      	cmp	r3, #7
    4a9a:	dd00      	ble.n	4a9e <_svfprintf_r+0x7c6>
    4a9c:	e151      	b.n	4d42 <_svfprintf_r+0xa6a>
    4a9e:	3608      	adds	r6, #8
    4aa0:	9b08      	ldr	r3, [sp, #32]
    4aa2:	05db      	lsls	r3, r3, #23
    4aa4:	d500      	bpl.n	4aa8 <_svfprintf_r+0x7d0>
    4aa6:	e0b6      	b.n	4c16 <_svfprintf_r+0x93e>
    4aa8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4aaa:	6033      	str	r3, [r6, #0]
    4aac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4aae:	469c      	mov	ip, r3
    4ab0:	6073      	str	r3, [r6, #4]
    4ab2:	687b      	ldr	r3, [r7, #4]
    4ab4:	4464      	add	r4, ip
    4ab6:	3301      	adds	r3, #1
    4ab8:	60bc      	str	r4, [r7, #8]
    4aba:	607b      	str	r3, [r7, #4]
    4abc:	2b07      	cmp	r3, #7
    4abe:	dd00      	ble.n	4ac2 <_svfprintf_r+0x7ea>
    4ac0:	e09d      	b.n	4bfe <_svfprintf_r+0x926>
    4ac2:	3608      	adds	r6, #8
    4ac4:	9b08      	ldr	r3, [sp, #32]
    4ac6:	075b      	lsls	r3, r3, #29
    4ac8:	d541      	bpl.n	4b4e <_svfprintf_r+0x876>
    4aca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4acc:	9a07      	ldr	r2, [sp, #28]
    4ace:	1a9d      	subs	r5, r3, r2
    4ad0:	2d00      	cmp	r5, #0
    4ad2:	dd3c      	ble.n	4b4e <_svfprintf_r+0x876>
    4ad4:	4ac4      	ldr	r2, [pc, #784]	; (4de8 <_svfprintf_r+0xb10>)
    4ad6:	687b      	ldr	r3, [r7, #4]
    4ad8:	4690      	mov	r8, r2
    4ada:	2d10      	cmp	r5, #16
    4adc:	dd26      	ble.n	4b2c <_svfprintf_r+0x854>
    4ade:	2210      	movs	r2, #16
    4ae0:	0021      	movs	r1, r4
    4ae2:	4691      	mov	r9, r2
    4ae4:	9c09      	ldr	r4, [sp, #36]	; 0x24
    4ae6:	0032      	movs	r2, r6
    4ae8:	002e      	movs	r6, r5
    4aea:	9d06      	ldr	r5, [sp, #24]
    4aec:	e003      	b.n	4af6 <_svfprintf_r+0x81e>
    4aee:	3e10      	subs	r6, #16
    4af0:	3208      	adds	r2, #8
    4af2:	2e10      	cmp	r6, #16
    4af4:	dd17      	ble.n	4b26 <_svfprintf_r+0x84e>
    4af6:	48bc      	ldr	r0, [pc, #752]	; (4de8 <_svfprintf_r+0xb10>)
    4af8:	3110      	adds	r1, #16
    4afa:	6010      	str	r0, [r2, #0]
    4afc:	4648      	mov	r0, r9
    4afe:	3301      	adds	r3, #1
    4b00:	6050      	str	r0, [r2, #4]
    4b02:	60b9      	str	r1, [r7, #8]
    4b04:	607b      	str	r3, [r7, #4]
    4b06:	2b07      	cmp	r3, #7
    4b08:	ddf1      	ble.n	4aee <_svfprintf_r+0x816>
    4b0a:	003a      	movs	r2, r7
    4b0c:	0029      	movs	r1, r5
    4b0e:	0020      	movs	r0, r4
    4b10:	f002 fe3a 	bl	7788 <__ssprint_r>
    4b14:	2800      	cmp	r0, #0
    4b16:	d000      	beq.n	4b1a <_svfprintf_r+0x842>
    4b18:	e465      	b.n	43e6 <_svfprintf_r+0x10e>
    4b1a:	3e10      	subs	r6, #16
    4b1c:	68b9      	ldr	r1, [r7, #8]
    4b1e:	687b      	ldr	r3, [r7, #4]
    4b20:	aa32      	add	r2, sp, #200	; 0xc8
    4b22:	2e10      	cmp	r6, #16
    4b24:	dce7      	bgt.n	4af6 <_svfprintf_r+0x81e>
    4b26:	0035      	movs	r5, r6
    4b28:	000c      	movs	r4, r1
    4b2a:	0016      	movs	r6, r2
    4b2c:	4642      	mov	r2, r8
    4b2e:	1964      	adds	r4, r4, r5
    4b30:	3301      	adds	r3, #1
    4b32:	c624      	stmia	r6!, {r2, r5}
    4b34:	60bc      	str	r4, [r7, #8]
    4b36:	607b      	str	r3, [r7, #4]
    4b38:	2b07      	cmp	r3, #7
    4b3a:	dd08      	ble.n	4b4e <_svfprintf_r+0x876>
    4b3c:	003a      	movs	r2, r7
    4b3e:	9906      	ldr	r1, [sp, #24]
    4b40:	9809      	ldr	r0, [sp, #36]	; 0x24
    4b42:	f002 fe21 	bl	7788 <__ssprint_r>
    4b46:	2800      	cmp	r0, #0
    4b48:	d000      	beq.n	4b4c <_svfprintf_r+0x874>
    4b4a:	e44c      	b.n	43e6 <_svfprintf_r+0x10e>
    4b4c:	68bc      	ldr	r4, [r7, #8]
    4b4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4b50:	9907      	ldr	r1, [sp, #28]
    4b52:	428b      	cmp	r3, r1
    4b54:	da00      	bge.n	4b58 <_svfprintf_r+0x880>
    4b56:	000b      	movs	r3, r1
    4b58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4b5a:	4694      	mov	ip, r2
    4b5c:	449c      	add	ip, r3
    4b5e:	4663      	mov	r3, ip
    4b60:	930a      	str	r3, [sp, #40]	; 0x28
    4b62:	2c00      	cmp	r4, #0
    4b64:	d000      	beq.n	4b68 <_svfprintf_r+0x890>
    4b66:	e0d6      	b.n	4d16 <_svfprintf_r+0xa3e>
    4b68:	2300      	movs	r3, #0
    4b6a:	ae32      	add	r6, sp, #200	; 0xc8
    4b6c:	607b      	str	r3, [r7, #4]
    4b6e:	f7ff fbde 	bl	432e <_svfprintf_r+0x56>
    4b72:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4b74:	2b01      	cmp	r3, #1
    4b76:	dc00      	bgt.n	4b7a <_svfprintf_r+0x8a2>
    4b78:	e0ae      	b.n	4cd8 <_svfprintf_r+0xa00>
    4b7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4b7c:	3401      	adds	r4, #1
    4b7e:	6033      	str	r3, [r6, #0]
    4b80:	2301      	movs	r3, #1
    4b82:	6073      	str	r3, [r6, #4]
    4b84:	687b      	ldr	r3, [r7, #4]
    4b86:	60bc      	str	r4, [r7, #8]
    4b88:	3301      	adds	r3, #1
    4b8a:	607b      	str	r3, [r7, #4]
    4b8c:	2b07      	cmp	r3, #7
    4b8e:	dd00      	ble.n	4b92 <_svfprintf_r+0x8ba>
    4b90:	e2df      	b.n	5152 <_svfprintf_r+0xe7a>
    4b92:	3608      	adds	r6, #8
    4b94:	9a19      	ldr	r2, [sp, #100]	; 0x64
    4b96:	3301      	adds	r3, #1
    4b98:	6032      	str	r2, [r6, #0]
    4b9a:	9a18      	ldr	r2, [sp, #96]	; 0x60
    4b9c:	4698      	mov	r8, r3
    4b9e:	4694      	mov	ip, r2
    4ba0:	4464      	add	r4, ip
    4ba2:	6072      	str	r2, [r6, #4]
    4ba4:	60bc      	str	r4, [r7, #8]
    4ba6:	607b      	str	r3, [r7, #4]
    4ba8:	2b07      	cmp	r3, #7
    4baa:	dd00      	ble.n	4bae <_svfprintf_r+0x8d6>
    4bac:	e2de      	b.n	516c <_svfprintf_r+0xe94>
    4bae:	3608      	adds	r6, #8
    4bb0:	2200      	movs	r2, #0
    4bb2:	2300      	movs	r3, #0
    4bb4:	9816      	ldr	r0, [sp, #88]	; 0x58
    4bb6:	9915      	ldr	r1, [sp, #84]	; 0x54
    4bb8:	f003 fafc 	bl	81b4 <__aeabi_dcmpeq>
    4bbc:	2800      	cmp	r0, #0
    4bbe:	d000      	beq.n	4bc2 <_svfprintf_r+0x8ea>
    4bc0:	e1a4      	b.n	4f0c <_svfprintf_r+0xc34>
    4bc2:	9d11      	ldr	r5, [sp, #68]	; 0x44
    4bc4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4bc6:	3501      	adds	r5, #1
    4bc8:	3b01      	subs	r3, #1
    4bca:	6035      	str	r5, [r6, #0]
    4bcc:	6073      	str	r3, [r6, #4]
    4bce:	18e4      	adds	r4, r4, r3
    4bd0:	2301      	movs	r3, #1
    4bd2:	469c      	mov	ip, r3
    4bd4:	44e0      	add	r8, ip
    4bd6:	4643      	mov	r3, r8
    4bd8:	60bc      	str	r4, [r7, #8]
    4bda:	607b      	str	r3, [r7, #4]
    4bdc:	2b07      	cmp	r3, #7
    4bde:	dd00      	ble.n	4be2 <_svfprintf_r+0x90a>
    4be0:	e08b      	b.n	4cfa <_svfprintf_r+0xa22>
    4be2:	3608      	adds	r6, #8
    4be4:	ab21      	add	r3, sp, #132	; 0x84
    4be6:	6033      	str	r3, [r6, #0]
    4be8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    4bea:	469c      	mov	ip, r3
    4bec:	6073      	str	r3, [r6, #4]
    4bee:	4643      	mov	r3, r8
    4bf0:	4464      	add	r4, ip
    4bf2:	3301      	adds	r3, #1
    4bf4:	60bc      	str	r4, [r7, #8]
    4bf6:	607b      	str	r3, [r7, #4]
    4bf8:	2b07      	cmp	r3, #7
    4bfa:	dc00      	bgt.n	4bfe <_svfprintf_r+0x926>
    4bfc:	e761      	b.n	4ac2 <_svfprintf_r+0x7ea>
    4bfe:	003a      	movs	r2, r7
    4c00:	9906      	ldr	r1, [sp, #24]
    4c02:	9809      	ldr	r0, [sp, #36]	; 0x24
    4c04:	f002 fdc0 	bl	7788 <__ssprint_r>
    4c08:	2800      	cmp	r0, #0
    4c0a:	d001      	beq.n	4c10 <_svfprintf_r+0x938>
    4c0c:	f7ff fbeb 	bl	43e6 <_svfprintf_r+0x10e>
    4c10:	68bc      	ldr	r4, [r7, #8]
    4c12:	ae32      	add	r6, sp, #200	; 0xc8
    4c14:	e756      	b.n	4ac4 <_svfprintf_r+0x7ec>
    4c16:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4c18:	2b65      	cmp	r3, #101	; 0x65
    4c1a:	ddaa      	ble.n	4b72 <_svfprintf_r+0x89a>
    4c1c:	2200      	movs	r2, #0
    4c1e:	2300      	movs	r3, #0
    4c20:	9816      	ldr	r0, [sp, #88]	; 0x58
    4c22:	9915      	ldr	r1, [sp, #84]	; 0x54
    4c24:	f003 fac6 	bl	81b4 <__aeabi_dcmpeq>
    4c28:	2800      	cmp	r0, #0
    4c2a:	d100      	bne.n	4c2e <_svfprintf_r+0x956>
    4c2c:	e0e2      	b.n	4df4 <_svfprintf_r+0xb1c>
    4c2e:	4b6f      	ldr	r3, [pc, #444]	; (4dec <_svfprintf_r+0xb14>)
    4c30:	3401      	adds	r4, #1
    4c32:	6033      	str	r3, [r6, #0]
    4c34:	2301      	movs	r3, #1
    4c36:	6073      	str	r3, [r6, #4]
    4c38:	687b      	ldr	r3, [r7, #4]
    4c3a:	60bc      	str	r4, [r7, #8]
    4c3c:	3301      	adds	r3, #1
    4c3e:	607b      	str	r3, [r7, #4]
    4c40:	2b07      	cmp	r3, #7
    4c42:	dd00      	ble.n	4c46 <_svfprintf_r+0x96e>
    4c44:	e366      	b.n	5314 <_svfprintf_r+0x103c>
    4c46:	3608      	adds	r6, #8
    4c48:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    4c4a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    4c4c:	4293      	cmp	r3, r2
    4c4e:	da00      	bge.n	4c52 <_svfprintf_r+0x97a>
    4c50:	e1a4      	b.n	4f9c <_svfprintf_r+0xcc4>
    4c52:	9b08      	ldr	r3, [sp, #32]
    4c54:	07db      	lsls	r3, r3, #31
    4c56:	d500      	bpl.n	4c5a <_svfprintf_r+0x982>
    4c58:	e1a0      	b.n	4f9c <_svfprintf_r+0xcc4>
    4c5a:	68bc      	ldr	r4, [r7, #8]
    4c5c:	e732      	b.n	4ac4 <_svfprintf_r+0x7ec>
    4c5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4c60:	9a07      	ldr	r2, [sp, #28]
    4c62:	1a9d      	subs	r5, r3, r2
    4c64:	2d00      	cmp	r5, #0
    4c66:	dc00      	bgt.n	4c6a <_svfprintf_r+0x992>
    4c68:	e6d8      	b.n	4a1c <_svfprintf_r+0x744>
    4c6a:	4a61      	ldr	r2, [pc, #388]	; (4df0 <_svfprintf_r+0xb18>)
    4c6c:	687b      	ldr	r3, [r7, #4]
    4c6e:	4691      	mov	r9, r2
    4c70:	2d10      	cmp	r5, #16
    4c72:	dd25      	ble.n	4cc0 <_svfprintf_r+0x9e8>
    4c74:	2210      	movs	r2, #16
    4c76:	0021      	movs	r1, r4
    4c78:	4690      	mov	r8, r2
    4c7a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    4c7c:	0032      	movs	r2, r6
    4c7e:	464e      	mov	r6, r9
    4c80:	e003      	b.n	4c8a <_svfprintf_r+0x9b2>
    4c82:	3d10      	subs	r5, #16
    4c84:	3208      	adds	r2, #8
    4c86:	2d10      	cmp	r5, #16
    4c88:	dd17      	ble.n	4cba <_svfprintf_r+0x9e2>
    4c8a:	4640      	mov	r0, r8
    4c8c:	3110      	adds	r1, #16
    4c8e:	3301      	adds	r3, #1
    4c90:	6016      	str	r6, [r2, #0]
    4c92:	6050      	str	r0, [r2, #4]
    4c94:	60b9      	str	r1, [r7, #8]
    4c96:	607b      	str	r3, [r7, #4]
    4c98:	2b07      	cmp	r3, #7
    4c9a:	ddf2      	ble.n	4c82 <_svfprintf_r+0x9aa>
    4c9c:	003a      	movs	r2, r7
    4c9e:	9906      	ldr	r1, [sp, #24]
    4ca0:	0020      	movs	r0, r4
    4ca2:	f002 fd71 	bl	7788 <__ssprint_r>
    4ca6:	2800      	cmp	r0, #0
    4ca8:	d001      	beq.n	4cae <_svfprintf_r+0x9d6>
    4caa:	f7ff fb9c 	bl	43e6 <_svfprintf_r+0x10e>
    4cae:	3d10      	subs	r5, #16
    4cb0:	68b9      	ldr	r1, [r7, #8]
    4cb2:	687b      	ldr	r3, [r7, #4]
    4cb4:	aa32      	add	r2, sp, #200	; 0xc8
    4cb6:	2d10      	cmp	r5, #16
    4cb8:	dce7      	bgt.n	4c8a <_svfprintf_r+0x9b2>
    4cba:	46b1      	mov	r9, r6
    4cbc:	000c      	movs	r4, r1
    4cbe:	0016      	movs	r6, r2
    4cc0:	464a      	mov	r2, r9
    4cc2:	1964      	adds	r4, r4, r5
    4cc4:	3301      	adds	r3, #1
    4cc6:	6032      	str	r2, [r6, #0]
    4cc8:	6075      	str	r5, [r6, #4]
    4cca:	60bc      	str	r4, [r7, #8]
    4ccc:	607b      	str	r3, [r7, #4]
    4cce:	2b07      	cmp	r3, #7
    4cd0:	dd00      	ble.n	4cd4 <_svfprintf_r+0x9fc>
    4cd2:	e27e      	b.n	51d2 <_svfprintf_r+0xefa>
    4cd4:	3608      	adds	r6, #8
    4cd6:	e6a1      	b.n	4a1c <_svfprintf_r+0x744>
    4cd8:	2301      	movs	r3, #1
    4cda:	9a08      	ldr	r2, [sp, #32]
    4cdc:	4213      	tst	r3, r2
    4cde:	d000      	beq.n	4ce2 <_svfprintf_r+0xa0a>
    4ce0:	e74b      	b.n	4b7a <_svfprintf_r+0x8a2>
    4ce2:	6073      	str	r3, [r6, #4]
    4ce4:	687b      	ldr	r3, [r7, #4]
    4ce6:	9a11      	ldr	r2, [sp, #68]	; 0x44
    4ce8:	3301      	adds	r3, #1
    4cea:	3401      	adds	r4, #1
    4cec:	6032      	str	r2, [r6, #0]
    4cee:	60bc      	str	r4, [r7, #8]
    4cf0:	4698      	mov	r8, r3
    4cf2:	607b      	str	r3, [r7, #4]
    4cf4:	2b07      	cmp	r3, #7
    4cf6:	dc00      	bgt.n	4cfa <_svfprintf_r+0xa22>
    4cf8:	e773      	b.n	4be2 <_svfprintf_r+0x90a>
    4cfa:	003a      	movs	r2, r7
    4cfc:	9906      	ldr	r1, [sp, #24]
    4cfe:	9809      	ldr	r0, [sp, #36]	; 0x24
    4d00:	f002 fd42 	bl	7788 <__ssprint_r>
    4d04:	2800      	cmp	r0, #0
    4d06:	d001      	beq.n	4d0c <_svfprintf_r+0xa34>
    4d08:	f7ff fb6d 	bl	43e6 <_svfprintf_r+0x10e>
    4d0c:	687b      	ldr	r3, [r7, #4]
    4d0e:	68bc      	ldr	r4, [r7, #8]
    4d10:	4698      	mov	r8, r3
    4d12:	ae32      	add	r6, sp, #200	; 0xc8
    4d14:	e766      	b.n	4be4 <_svfprintf_r+0x90c>
    4d16:	003a      	movs	r2, r7
    4d18:	9906      	ldr	r1, [sp, #24]
    4d1a:	9809      	ldr	r0, [sp, #36]	; 0x24
    4d1c:	f002 fd34 	bl	7788 <__ssprint_r>
    4d20:	2800      	cmp	r0, #0
    4d22:	d100      	bne.n	4d26 <_svfprintf_r+0xa4e>
    4d24:	e720      	b.n	4b68 <_svfprintf_r+0x890>
    4d26:	f7ff fb5e 	bl	43e6 <_svfprintf_r+0x10e>
    4d2a:	9c08      	ldr	r4, [sp, #32]
    4d2c:	2b01      	cmp	r3, #1
    4d2e:	d100      	bne.n	4d32 <_svfprintf_r+0xa5a>
    4d30:	e184      	b.n	503c <_svfprintf_r+0xd64>
    4d32:	2b02      	cmp	r3, #2
    4d34:	d129      	bne.n	4d8a <_svfprintf_r+0xab2>
    4d36:	9408      	str	r4, [sp, #32]
    4d38:	2300      	movs	r3, #0
    4d3a:	2400      	movs	r4, #0
    4d3c:	930c      	str	r3, [sp, #48]	; 0x30
    4d3e:	940d      	str	r4, [sp, #52]	; 0x34
    4d40:	e4c5      	b.n	46ce <_svfprintf_r+0x3f6>
    4d42:	003a      	movs	r2, r7
    4d44:	9906      	ldr	r1, [sp, #24]
    4d46:	9809      	ldr	r0, [sp, #36]	; 0x24
    4d48:	f002 fd1e 	bl	7788 <__ssprint_r>
    4d4c:	2800      	cmp	r0, #0
    4d4e:	d001      	beq.n	4d54 <_svfprintf_r+0xa7c>
    4d50:	f7ff fb49 	bl	43e6 <_svfprintf_r+0x10e>
    4d54:	68bc      	ldr	r4, [r7, #8]
    4d56:	ae32      	add	r6, sp, #200	; 0xc8
    4d58:	e6a2      	b.n	4aa0 <_svfprintf_r+0x7c8>
    4d5a:	003a      	movs	r2, r7
    4d5c:	9906      	ldr	r1, [sp, #24]
    4d5e:	9809      	ldr	r0, [sp, #36]	; 0x24
    4d60:	f002 fd12 	bl	7788 <__ssprint_r>
    4d64:	2800      	cmp	r0, #0
    4d66:	d001      	beq.n	4d6c <_svfprintf_r+0xa94>
    4d68:	f7ff fb3d 	bl	43e6 <_svfprintf_r+0x10e>
    4d6c:	68bc      	ldr	r4, [r7, #8]
    4d6e:	ae32      	add	r6, sp, #200	; 0xc8
    4d70:	e640      	b.n	49f4 <_svfprintf_r+0x71c>
    4d72:	003a      	movs	r2, r7
    4d74:	9906      	ldr	r1, [sp, #24]
    4d76:	9809      	ldr	r0, [sp, #36]	; 0x24
    4d78:	f002 fd06 	bl	7788 <__ssprint_r>
    4d7c:	2800      	cmp	r0, #0
    4d7e:	d001      	beq.n	4d84 <_svfprintf_r+0xaac>
    4d80:	f7ff fb31 	bl	43e6 <_svfprintf_r+0x10e>
    4d84:	68bc      	ldr	r4, [r7, #8]
    4d86:	ae32      	add	r6, sp, #200	; 0xc8
    4d88:	e644      	b.n	4a14 <_svfprintf_r+0x73c>
    4d8a:	9408      	str	r4, [sp, #32]
    4d8c:	2300      	movs	r3, #0
    4d8e:	2400      	movs	r4, #0
    4d90:	930c      	str	r3, [sp, #48]	; 0x30
    4d92:	940d      	str	r4, [sp, #52]	; 0x34
    4d94:	980c      	ldr	r0, [sp, #48]	; 0x30
    4d96:	990d      	ldr	r1, [sp, #52]	; 0x34
    4d98:	465b      	mov	r3, fp
    4d9a:	aa32      	add	r2, sp, #200	; 0xc8
    4d9c:	9307      	str	r3, [sp, #28]
    4d9e:	4691      	mov	r9, r2
    4da0:	46b3      	mov	fp, r6
    4da2:	e000      	b.n	4da6 <_svfprintf_r+0xace>
    4da4:	46a1      	mov	r9, r4
    4da6:	074a      	lsls	r2, r1, #29
    4da8:	4694      	mov	ip, r2
    4daa:	464b      	mov	r3, r9
    4dac:	4665      	mov	r5, ip
    4dae:	1e5c      	subs	r4, r3, #1
    4db0:	08c6      	lsrs	r6, r0, #3
    4db2:	2307      	movs	r3, #7
    4db4:	08ca      	lsrs	r2, r1, #3
    4db6:	4335      	orrs	r5, r6
    4db8:	0011      	movs	r1, r2
    4dba:	002a      	movs	r2, r5
    4dbc:	4003      	ands	r3, r0
    4dbe:	3330      	adds	r3, #48	; 0x30
    4dc0:	7023      	strb	r3, [r4, #0]
    4dc2:	0028      	movs	r0, r5
    4dc4:	430a      	orrs	r2, r1
    4dc6:	d1ed      	bne.n	4da4 <_svfprintf_r+0xacc>
    4dc8:	900c      	str	r0, [sp, #48]	; 0x30
    4dca:	910d      	str	r1, [sp, #52]	; 0x34
    4dcc:	9907      	ldr	r1, [sp, #28]
    4dce:	465e      	mov	r6, fp
    4dd0:	468b      	mov	fp, r1
    4dd2:	9908      	ldr	r1, [sp, #32]
    4dd4:	464a      	mov	r2, r9
    4dd6:	9411      	str	r4, [sp, #68]	; 0x44
    4dd8:	07c9      	lsls	r1, r1, #31
    4dda:	d500      	bpl.n	4dde <_svfprintf_r+0xb06>
    4ddc:	e13d      	b.n	505a <_svfprintf_r+0xd82>
    4dde:	ab32      	add	r3, sp, #200	; 0xc8
    4de0:	1b1b      	subs	r3, r3, r4
    4de2:	930e      	str	r3, [sp, #56]	; 0x38
    4de4:	f7ff fb88 	bl	44f8 <_svfprintf_r+0x220>
    4de8:	00008ae4 	.word	0x00008ae4
    4dec:	00008ae0 	.word	0x00008ae0
    4df0:	00008af4 	.word	0x00008af4
    4df4:	981f      	ldr	r0, [sp, #124]	; 0x7c
    4df6:	2800      	cmp	r0, #0
    4df8:	dc00      	bgt.n	4dfc <_svfprintf_r+0xb24>
    4dfa:	e296      	b.n	532a <_svfprintf_r+0x1052>
    4dfc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    4dfe:	9914      	ldr	r1, [sp, #80]	; 0x50
    4e00:	0013      	movs	r3, r2
    4e02:	4690      	mov	r8, r2
    4e04:	428b      	cmp	r3, r1
    4e06:	dd00      	ble.n	4e0a <_svfprintf_r+0xb32>
    4e08:	4688      	mov	r8, r1
    4e0a:	4643      	mov	r3, r8
    4e0c:	2b00      	cmp	r3, #0
    4e0e:	dd0c      	ble.n	4e2a <_svfprintf_r+0xb52>
    4e10:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4e12:	4444      	add	r4, r8
    4e14:	6033      	str	r3, [r6, #0]
    4e16:	4643      	mov	r3, r8
    4e18:	6073      	str	r3, [r6, #4]
    4e1a:	687b      	ldr	r3, [r7, #4]
    4e1c:	60bc      	str	r4, [r7, #8]
    4e1e:	3301      	adds	r3, #1
    4e20:	607b      	str	r3, [r7, #4]
    4e22:	2b07      	cmp	r3, #7
    4e24:	dd00      	ble.n	4e28 <_svfprintf_r+0xb50>
    4e26:	e3b7      	b.n	5598 <_svfprintf_r+0x12c0>
    4e28:	3608      	adds	r6, #8
    4e2a:	4643      	mov	r3, r8
    4e2c:	43db      	mvns	r3, r3
    4e2e:	4642      	mov	r2, r8
    4e30:	17db      	asrs	r3, r3, #31
    4e32:	4013      	ands	r3, r2
    4e34:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    4e36:	1ad3      	subs	r3, r2, r3
    4e38:	4698      	mov	r8, r3
    4e3a:	2b00      	cmp	r3, #0
    4e3c:	dc00      	bgt.n	4e40 <_svfprintf_r+0xb68>
    4e3e:	e128      	b.n	5092 <_svfprintf_r+0xdba>
    4e40:	2b10      	cmp	r3, #16
    4e42:	dc01      	bgt.n	4e48 <_svfprintf_r+0xb70>
    4e44:	f000 fce7 	bl	5816 <_svfprintf_r+0x153e>
    4e48:	4acf      	ldr	r2, [pc, #828]	; (5188 <_svfprintf_r+0xeb0>)
    4e4a:	0021      	movs	r1, r4
    4e4c:	4691      	mov	r9, r2
    4e4e:	2210      	movs	r2, #16
    4e50:	687b      	ldr	r3, [r7, #4]
    4e52:	4692      	mov	sl, r2
    4e54:	9d09      	ldr	r5, [sp, #36]	; 0x24
    4e56:	0032      	movs	r2, r6
    4e58:	464c      	mov	r4, r9
    4e5a:	4646      	mov	r6, r8
    4e5c:	e004      	b.n	4e68 <_svfprintf_r+0xb90>
    4e5e:	3208      	adds	r2, #8
    4e60:	3e10      	subs	r6, #16
    4e62:	2e10      	cmp	r6, #16
    4e64:	dc00      	bgt.n	4e68 <_svfprintf_r+0xb90>
    4e66:	e104      	b.n	5072 <_svfprintf_r+0xd9a>
    4e68:	4650      	mov	r0, sl
    4e6a:	3110      	adds	r1, #16
    4e6c:	3301      	adds	r3, #1
    4e6e:	6014      	str	r4, [r2, #0]
    4e70:	6050      	str	r0, [r2, #4]
    4e72:	60b9      	str	r1, [r7, #8]
    4e74:	607b      	str	r3, [r7, #4]
    4e76:	2b07      	cmp	r3, #7
    4e78:	ddf1      	ble.n	4e5e <_svfprintf_r+0xb86>
    4e7a:	003a      	movs	r2, r7
    4e7c:	9906      	ldr	r1, [sp, #24]
    4e7e:	0028      	movs	r0, r5
    4e80:	f002 fc82 	bl	7788 <__ssprint_r>
    4e84:	2800      	cmp	r0, #0
    4e86:	d001      	beq.n	4e8c <_svfprintf_r+0xbb4>
    4e88:	f7ff faad 	bl	43e6 <_svfprintf_r+0x10e>
    4e8c:	68b9      	ldr	r1, [r7, #8]
    4e8e:	687b      	ldr	r3, [r7, #4]
    4e90:	aa32      	add	r2, sp, #200	; 0xc8
    4e92:	e7e5      	b.n	4e60 <_svfprintf_r+0xb88>
    4e94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4e96:	2b00      	cmp	r3, #0
    4e98:	d100      	bne.n	4e9c <_svfprintf_r+0xbc4>
    4e9a:	e0ca      	b.n	5032 <_svfprintf_r+0xd5a>
    4e9c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    4e9e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    4ea0:	ab32      	add	r3, sp, #200	; 0xc8
    4ea2:	46b1      	mov	r9, r6
    4ea4:	001e      	movs	r6, r3
    4ea6:	0020      	movs	r0, r4
    4ea8:	0029      	movs	r1, r5
    4eaa:	220a      	movs	r2, #10
    4eac:	2300      	movs	r3, #0
    4eae:	f003 f9af 	bl	8210 <__aeabi_uldivmod>
    4eb2:	3e01      	subs	r6, #1
    4eb4:	3230      	adds	r2, #48	; 0x30
    4eb6:	7032      	strb	r2, [r6, #0]
    4eb8:	2300      	movs	r3, #0
    4eba:	0020      	movs	r0, r4
    4ebc:	0029      	movs	r1, r5
    4ebe:	220a      	movs	r2, #10
    4ec0:	f003 f9a6 	bl	8210 <__aeabi_uldivmod>
    4ec4:	0003      	movs	r3, r0
    4ec6:	0004      	movs	r4, r0
    4ec8:	000d      	movs	r5, r1
    4eca:	430b      	orrs	r3, r1
    4ecc:	d1eb      	bne.n	4ea6 <_svfprintf_r+0xbce>
    4ece:	0032      	movs	r2, r6
    4ed0:	ab32      	add	r3, sp, #200	; 0xc8
    4ed2:	1a9b      	subs	r3, r3, r2
    4ed4:	9611      	str	r6, [sp, #68]	; 0x44
    4ed6:	940c      	str	r4, [sp, #48]	; 0x30
    4ed8:	950d      	str	r5, [sp, #52]	; 0x34
    4eda:	464e      	mov	r6, r9
    4edc:	930e      	str	r3, [sp, #56]	; 0x38
    4ede:	f7ff fb0b 	bl	44f8 <_svfprintf_r+0x220>
    4ee2:	2300      	movs	r3, #0
    4ee4:	930e      	str	r3, [sp, #56]	; 0x38
    4ee6:	ab32      	add	r3, sp, #200	; 0xc8
    4ee8:	9311      	str	r3, [sp, #68]	; 0x44
    4eea:	f7ff fb05 	bl	44f8 <_svfprintf_r+0x220>
    4eee:	003a      	movs	r2, r7
    4ef0:	9906      	ldr	r1, [sp, #24]
    4ef2:	9809      	ldr	r0, [sp, #36]	; 0x24
    4ef4:	f002 fc48 	bl	7788 <__ssprint_r>
    4ef8:	2800      	cmp	r0, #0
    4efa:	d001      	beq.n	4f00 <_svfprintf_r+0xc28>
    4efc:	f7ff fa73 	bl	43e6 <_svfprintf_r+0x10e>
    4f00:	ab16      	add	r3, sp, #88	; 0x58
    4f02:	7fdb      	ldrb	r3, [r3, #31]
    4f04:	68bc      	ldr	r4, [r7, #8]
    4f06:	4698      	mov	r8, r3
    4f08:	ae32      	add	r6, sp, #200	; 0xc8
    4f0a:	e560      	b.n	49ce <_svfprintf_r+0x6f6>
    4f0c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4f0e:	1e5d      	subs	r5, r3, #1
    4f10:	2d00      	cmp	r5, #0
    4f12:	dc00      	bgt.n	4f16 <_svfprintf_r+0xc3e>
    4f14:	e666      	b.n	4be4 <_svfprintf_r+0x90c>
    4f16:	4b9c      	ldr	r3, [pc, #624]	; (5188 <_svfprintf_r+0xeb0>)
    4f18:	4699      	mov	r9, r3
    4f1a:	2d10      	cmp	r5, #16
    4f1c:	dd29      	ble.n	4f72 <_svfprintf_r+0xc9a>
    4f1e:	2310      	movs	r3, #16
    4f20:	0032      	movs	r2, r6
    4f22:	469a      	mov	sl, r3
    4f24:	002e      	movs	r6, r5
    4f26:	0021      	movs	r1, r4
    4f28:	4643      	mov	r3, r8
    4f2a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    4f2c:	464d      	mov	r5, r9
    4f2e:	e003      	b.n	4f38 <_svfprintf_r+0xc60>
    4f30:	3e10      	subs	r6, #16
    4f32:	3208      	adds	r2, #8
    4f34:	2e10      	cmp	r6, #16
    4f36:	dd17      	ble.n	4f68 <_svfprintf_r+0xc90>
    4f38:	4650      	mov	r0, sl
    4f3a:	3110      	adds	r1, #16
    4f3c:	3301      	adds	r3, #1
    4f3e:	6015      	str	r5, [r2, #0]
    4f40:	6050      	str	r0, [r2, #4]
    4f42:	60b9      	str	r1, [r7, #8]
    4f44:	607b      	str	r3, [r7, #4]
    4f46:	2b07      	cmp	r3, #7
    4f48:	ddf2      	ble.n	4f30 <_svfprintf_r+0xc58>
    4f4a:	003a      	movs	r2, r7
    4f4c:	9906      	ldr	r1, [sp, #24]
    4f4e:	0020      	movs	r0, r4
    4f50:	f002 fc1a 	bl	7788 <__ssprint_r>
    4f54:	2800      	cmp	r0, #0
    4f56:	d001      	beq.n	4f5c <_svfprintf_r+0xc84>
    4f58:	f7ff fa45 	bl	43e6 <_svfprintf_r+0x10e>
    4f5c:	3e10      	subs	r6, #16
    4f5e:	68b9      	ldr	r1, [r7, #8]
    4f60:	687b      	ldr	r3, [r7, #4]
    4f62:	aa32      	add	r2, sp, #200	; 0xc8
    4f64:	2e10      	cmp	r6, #16
    4f66:	dce7      	bgt.n	4f38 <_svfprintf_r+0xc60>
    4f68:	46a9      	mov	r9, r5
    4f6a:	000c      	movs	r4, r1
    4f6c:	0035      	movs	r5, r6
    4f6e:	4698      	mov	r8, r3
    4f70:	0016      	movs	r6, r2
    4f72:	464b      	mov	r3, r9
    4f74:	6075      	str	r5, [r6, #4]
    4f76:	6033      	str	r3, [r6, #0]
    4f78:	1964      	adds	r4, r4, r5
    4f7a:	e629      	b.n	4bd0 <_svfprintf_r+0x8f8>
    4f7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4f7e:	681a      	ldr	r2, [r3, #0]
    4f80:	f7ff fbfb 	bl	477a <_svfprintf_r+0x4a2>
    4f84:	6813      	ldr	r3, [r2, #0]
    4f86:	9307      	str	r3, [sp, #28]
    4f88:	f7ff fa82 	bl	4490 <_svfprintf_r+0x1b8>
    4f8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4f8e:	681a      	ldr	r2, [r3, #0]
    4f90:	f7ff fb84 	bl	469c <_svfprintf_r+0x3c4>
    4f94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4f96:	681a      	ldr	r2, [r3, #0]
    4f98:	f7ff fbd1 	bl	473e <_svfprintf_r+0x466>
    4f9c:	9b19      	ldr	r3, [sp, #100]	; 0x64
    4f9e:	68ba      	ldr	r2, [r7, #8]
    4fa0:	6033      	str	r3, [r6, #0]
    4fa2:	9b18      	ldr	r3, [sp, #96]	; 0x60
    4fa4:	469c      	mov	ip, r3
    4fa6:	6073      	str	r3, [r6, #4]
    4fa8:	687b      	ldr	r3, [r7, #4]
    4faa:	4462      	add	r2, ip
    4fac:	3301      	adds	r3, #1
    4fae:	0014      	movs	r4, r2
    4fb0:	60ba      	str	r2, [r7, #8]
    4fb2:	607b      	str	r3, [r7, #4]
    4fb4:	2b07      	cmp	r3, #7
    4fb6:	dd00      	ble.n	4fba <_svfprintf_r+0xce2>
    4fb8:	e202      	b.n	53c0 <_svfprintf_r+0x10e8>
    4fba:	3608      	adds	r6, #8
    4fbc:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4fbe:	1e5d      	subs	r5, r3, #1
    4fc0:	2d00      	cmp	r5, #0
    4fc2:	dc00      	bgt.n	4fc6 <_svfprintf_r+0xcee>
    4fc4:	e57e      	b.n	4ac4 <_svfprintf_r+0x7ec>
    4fc6:	4a70      	ldr	r2, [pc, #448]	; (5188 <_svfprintf_r+0xeb0>)
    4fc8:	687b      	ldr	r3, [r7, #4]
    4fca:	4691      	mov	r9, r2
    4fcc:	2d10      	cmp	r5, #16
    4fce:	dd25      	ble.n	501c <_svfprintf_r+0xd44>
    4fd0:	2210      	movs	r2, #16
    4fd2:	0021      	movs	r1, r4
    4fd4:	4690      	mov	r8, r2
    4fd6:	9c09      	ldr	r4, [sp, #36]	; 0x24
    4fd8:	0032      	movs	r2, r6
    4fda:	002e      	movs	r6, r5
    4fdc:	464d      	mov	r5, r9
    4fde:	e003      	b.n	4fe8 <_svfprintf_r+0xd10>
    4fe0:	3208      	adds	r2, #8
    4fe2:	3e10      	subs	r6, #16
    4fe4:	2e10      	cmp	r6, #16
    4fe6:	dd15      	ble.n	5014 <_svfprintf_r+0xd3c>
    4fe8:	4640      	mov	r0, r8
    4fea:	3110      	adds	r1, #16
    4fec:	3301      	adds	r3, #1
    4fee:	6015      	str	r5, [r2, #0]
    4ff0:	6050      	str	r0, [r2, #4]
    4ff2:	60b9      	str	r1, [r7, #8]
    4ff4:	607b      	str	r3, [r7, #4]
    4ff6:	2b07      	cmp	r3, #7
    4ff8:	ddf2      	ble.n	4fe0 <_svfprintf_r+0xd08>
    4ffa:	003a      	movs	r2, r7
    4ffc:	9906      	ldr	r1, [sp, #24]
    4ffe:	0020      	movs	r0, r4
    5000:	f002 fbc2 	bl	7788 <__ssprint_r>
    5004:	2800      	cmp	r0, #0
    5006:	d001      	beq.n	500c <_svfprintf_r+0xd34>
    5008:	f7ff f9ed 	bl	43e6 <_svfprintf_r+0x10e>
    500c:	68b9      	ldr	r1, [r7, #8]
    500e:	687b      	ldr	r3, [r7, #4]
    5010:	aa32      	add	r2, sp, #200	; 0xc8
    5012:	e7e6      	b.n	4fe2 <_svfprintf_r+0xd0a>
    5014:	46a9      	mov	r9, r5
    5016:	000c      	movs	r4, r1
    5018:	0035      	movs	r5, r6
    501a:	0016      	movs	r6, r2
    501c:	464a      	mov	r2, r9
    501e:	1964      	adds	r4, r4, r5
    5020:	3301      	adds	r3, #1
    5022:	6032      	str	r2, [r6, #0]
    5024:	6075      	str	r5, [r6, #4]
    5026:	60bc      	str	r4, [r7, #8]
    5028:	607b      	str	r3, [r7, #4]
    502a:	2b07      	cmp	r3, #7
    502c:	dc00      	bgt.n	5030 <_svfprintf_r+0xd58>
    502e:	e548      	b.n	4ac2 <_svfprintf_r+0x7ea>
    5030:	e5e5      	b.n	4bfe <_svfprintf_r+0x926>
    5032:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5034:	2b09      	cmp	r3, #9
    5036:	d900      	bls.n	503a <_svfprintf_r+0xd62>
    5038:	e730      	b.n	4e9c <_svfprintf_r+0xbc4>
    503a:	9c08      	ldr	r4, [sp, #32]
    503c:	2227      	movs	r2, #39	; 0x27
    503e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5040:	a928      	add	r1, sp, #160	; 0xa0
    5042:	3330      	adds	r3, #48	; 0x30
    5044:	548b      	strb	r3, [r1, r2]
    5046:	2301      	movs	r3, #1
    5048:	aa16      	add	r2, sp, #88	; 0x58
    504a:	4694      	mov	ip, r2
    504c:	930e      	str	r3, [sp, #56]	; 0x38
    504e:	336e      	adds	r3, #110	; 0x6e
    5050:	4463      	add	r3, ip
    5052:	9408      	str	r4, [sp, #32]
    5054:	9311      	str	r3, [sp, #68]	; 0x44
    5056:	f7ff fa4f 	bl	44f8 <_svfprintf_r+0x220>
    505a:	2b30      	cmp	r3, #48	; 0x30
    505c:	d100      	bne.n	5060 <_svfprintf_r+0xd88>
    505e:	e20b      	b.n	5478 <_svfprintf_r+0x11a0>
    5060:	2330      	movs	r3, #48	; 0x30
    5062:	3a02      	subs	r2, #2
    5064:	7013      	strb	r3, [r2, #0]
    5066:	ab32      	add	r3, sp, #200	; 0xc8
    5068:	1a9b      	subs	r3, r3, r2
    506a:	930e      	str	r3, [sp, #56]	; 0x38
    506c:	9211      	str	r2, [sp, #68]	; 0x44
    506e:	f7ff fa43 	bl	44f8 <_svfprintf_r+0x220>
    5072:	46b0      	mov	r8, r6
    5074:	46a1      	mov	r9, r4
    5076:	0016      	movs	r6, r2
    5078:	000c      	movs	r4, r1
    507a:	464a      	mov	r2, r9
    507c:	6032      	str	r2, [r6, #0]
    507e:	4642      	mov	r2, r8
    5080:	4444      	add	r4, r8
    5082:	3301      	adds	r3, #1
    5084:	6072      	str	r2, [r6, #4]
    5086:	60bc      	str	r4, [r7, #8]
    5088:	607b      	str	r3, [r7, #4]
    508a:	2b07      	cmp	r3, #7
    508c:	dd00      	ble.n	5090 <_svfprintf_r+0xdb8>
    508e:	e29c      	b.n	55ca <_svfprintf_r+0x12f2>
    5090:	3608      	adds	r6, #8
    5092:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5094:	9a14      	ldr	r2, [sp, #80]	; 0x50
    5096:	4293      	cmp	r3, r2
    5098:	db4c      	blt.n	5134 <_svfprintf_r+0xe5c>
    509a:	9a08      	ldr	r2, [sp, #32]
    509c:	07d2      	lsls	r2, r2, #31
    509e:	d449      	bmi.n	5134 <_svfprintf_r+0xe5c>
    50a0:	9a14      	ldr	r2, [sp, #80]	; 0x50
    50a2:	9913      	ldr	r1, [sp, #76]	; 0x4c
    50a4:	1ad3      	subs	r3, r2, r3
    50a6:	1a52      	subs	r2, r2, r1
    50a8:	4690      	mov	r8, r2
    50aa:	429a      	cmp	r2, r3
    50ac:	dd00      	ble.n	50b0 <_svfprintf_r+0xdd8>
    50ae:	4698      	mov	r8, r3
    50b0:	4642      	mov	r2, r8
    50b2:	2a00      	cmp	r2, #0
    50b4:	dd0f      	ble.n	50d6 <_svfprintf_r+0xdfe>
    50b6:	9913      	ldr	r1, [sp, #76]	; 0x4c
    50b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
    50ba:	468c      	mov	ip, r1
    50bc:	4462      	add	r2, ip
    50be:	6032      	str	r2, [r6, #0]
    50c0:	4642      	mov	r2, r8
    50c2:	6072      	str	r2, [r6, #4]
    50c4:	687a      	ldr	r2, [r7, #4]
    50c6:	4444      	add	r4, r8
    50c8:	3201      	adds	r2, #1
    50ca:	60bc      	str	r4, [r7, #8]
    50cc:	607a      	str	r2, [r7, #4]
    50ce:	2a07      	cmp	r2, #7
    50d0:	dd00      	ble.n	50d4 <_svfprintf_r+0xdfc>
    50d2:	e286      	b.n	55e2 <_svfprintf_r+0x130a>
    50d4:	3608      	adds	r6, #8
    50d6:	4642      	mov	r2, r8
    50d8:	43d5      	mvns	r5, r2
    50da:	17ed      	asrs	r5, r5, #31
    50dc:	4015      	ands	r5, r2
    50de:	1b5d      	subs	r5, r3, r5
    50e0:	2d00      	cmp	r5, #0
    50e2:	dc00      	bgt.n	50e6 <_svfprintf_r+0xe0e>
    50e4:	e4ee      	b.n	4ac4 <_svfprintf_r+0x7ec>
    50e6:	4a28      	ldr	r2, [pc, #160]	; (5188 <_svfprintf_r+0xeb0>)
    50e8:	687b      	ldr	r3, [r7, #4]
    50ea:	4691      	mov	r9, r2
    50ec:	2d10      	cmp	r5, #16
    50ee:	dd95      	ble.n	501c <_svfprintf_r+0xd44>
    50f0:	2210      	movs	r2, #16
    50f2:	0021      	movs	r1, r4
    50f4:	4690      	mov	r8, r2
    50f6:	9c09      	ldr	r4, [sp, #36]	; 0x24
    50f8:	0032      	movs	r2, r6
    50fa:	002e      	movs	r6, r5
    50fc:	464d      	mov	r5, r9
    50fe:	e003      	b.n	5108 <_svfprintf_r+0xe30>
    5100:	3208      	adds	r2, #8
    5102:	3e10      	subs	r6, #16
    5104:	2e10      	cmp	r6, #16
    5106:	dd85      	ble.n	5014 <_svfprintf_r+0xd3c>
    5108:	4640      	mov	r0, r8
    510a:	3110      	adds	r1, #16
    510c:	3301      	adds	r3, #1
    510e:	6015      	str	r5, [r2, #0]
    5110:	6050      	str	r0, [r2, #4]
    5112:	60b9      	str	r1, [r7, #8]
    5114:	607b      	str	r3, [r7, #4]
    5116:	2b07      	cmp	r3, #7
    5118:	ddf2      	ble.n	5100 <_svfprintf_r+0xe28>
    511a:	003a      	movs	r2, r7
    511c:	9906      	ldr	r1, [sp, #24]
    511e:	0020      	movs	r0, r4
    5120:	f002 fb32 	bl	7788 <__ssprint_r>
    5124:	2800      	cmp	r0, #0
    5126:	d001      	beq.n	512c <_svfprintf_r+0xe54>
    5128:	f7ff f95d 	bl	43e6 <_svfprintf_r+0x10e>
    512c:	68b9      	ldr	r1, [r7, #8]
    512e:	687b      	ldr	r3, [r7, #4]
    5130:	aa32      	add	r2, sp, #200	; 0xc8
    5132:	e7e6      	b.n	5102 <_svfprintf_r+0xe2a>
    5134:	9a19      	ldr	r2, [sp, #100]	; 0x64
    5136:	6032      	str	r2, [r6, #0]
    5138:	9a18      	ldr	r2, [sp, #96]	; 0x60
    513a:	4694      	mov	ip, r2
    513c:	6072      	str	r2, [r6, #4]
    513e:	687a      	ldr	r2, [r7, #4]
    5140:	4464      	add	r4, ip
    5142:	3201      	adds	r2, #1
    5144:	60bc      	str	r4, [r7, #8]
    5146:	607a      	str	r2, [r7, #4]
    5148:	2a07      	cmp	r2, #7
    514a:	dd00      	ble.n	514e <_svfprintf_r+0xe76>
    514c:	e230      	b.n	55b0 <_svfprintf_r+0x12d8>
    514e:	3608      	adds	r6, #8
    5150:	e7a6      	b.n	50a0 <_svfprintf_r+0xdc8>
    5152:	003a      	movs	r2, r7
    5154:	9906      	ldr	r1, [sp, #24]
    5156:	9809      	ldr	r0, [sp, #36]	; 0x24
    5158:	f002 fb16 	bl	7788 <__ssprint_r>
    515c:	2800      	cmp	r0, #0
    515e:	d001      	beq.n	5164 <_svfprintf_r+0xe8c>
    5160:	f7ff f941 	bl	43e6 <_svfprintf_r+0x10e>
    5164:	68bc      	ldr	r4, [r7, #8]
    5166:	687b      	ldr	r3, [r7, #4]
    5168:	ae32      	add	r6, sp, #200	; 0xc8
    516a:	e513      	b.n	4b94 <_svfprintf_r+0x8bc>
    516c:	003a      	movs	r2, r7
    516e:	9906      	ldr	r1, [sp, #24]
    5170:	9809      	ldr	r0, [sp, #36]	; 0x24
    5172:	f002 fb09 	bl	7788 <__ssprint_r>
    5176:	2800      	cmp	r0, #0
    5178:	d001      	beq.n	517e <_svfprintf_r+0xea6>
    517a:	f7ff f934 	bl	43e6 <_svfprintf_r+0x10e>
    517e:	687b      	ldr	r3, [r7, #4]
    5180:	68bc      	ldr	r4, [r7, #8]
    5182:	4698      	mov	r8, r3
    5184:	ae32      	add	r6, sp, #200	; 0xc8
    5186:	e513      	b.n	4bb0 <_svfprintf_r+0x8d8>
    5188:	00008af4 	.word	0x00008af4
    518c:	2307      	movs	r3, #7
    518e:	3207      	adds	r2, #7
    5190:	439a      	bics	r2, r3
    5192:	3301      	adds	r3, #1
    5194:	469c      	mov	ip, r3
    5196:	4494      	add	ip, r2
    5198:	4663      	mov	r3, ip
    519a:	930f      	str	r3, [sp, #60]	; 0x3c
    519c:	6853      	ldr	r3, [r2, #4]
    519e:	6812      	ldr	r2, [r2, #0]
    51a0:	930d      	str	r3, [sp, #52]	; 0x34
    51a2:	920c      	str	r2, [sp, #48]	; 0x30
    51a4:	2b00      	cmp	r3, #0
    51a6:	db01      	blt.n	51ac <_svfprintf_r+0xed4>
    51a8:	f7ff f97a 	bl	44a0 <_svfprintf_r+0x1c8>
    51ac:	980c      	ldr	r0, [sp, #48]	; 0x30
    51ae:	990d      	ldr	r1, [sp, #52]	; 0x34
    51b0:	2300      	movs	r3, #0
    51b2:	4242      	negs	r2, r0
    51b4:	418b      	sbcs	r3, r1
    51b6:	0011      	movs	r1, r2
    51b8:	001a      	movs	r2, r3
    51ba:	232d      	movs	r3, #45	; 0x2d
    51bc:	a816      	add	r0, sp, #88	; 0x58
    51be:	77c3      	strb	r3, [r0, #31]
    51c0:	0008      	movs	r0, r1
    51c2:	4310      	orrs	r0, r2
    51c4:	910c      	str	r1, [sp, #48]	; 0x30
    51c6:	920d      	str	r2, [sp, #52]	; 0x34
    51c8:	4698      	mov	r8, r3
    51ca:	0002      	movs	r2, r0
    51cc:	3b2c      	subs	r3, #44	; 0x2c
    51ce:	f7ff f970 	bl	44b2 <_svfprintf_r+0x1da>
    51d2:	003a      	movs	r2, r7
    51d4:	9906      	ldr	r1, [sp, #24]
    51d6:	9809      	ldr	r0, [sp, #36]	; 0x24
    51d8:	f002 fad6 	bl	7788 <__ssprint_r>
    51dc:	2800      	cmp	r0, #0
    51de:	d001      	beq.n	51e4 <_svfprintf_r+0xf0c>
    51e0:	f7ff f901 	bl	43e6 <_svfprintf_r+0x10e>
    51e4:	68bc      	ldr	r4, [r7, #8]
    51e6:	ae32      	add	r6, sp, #200	; 0xc8
    51e8:	e418      	b.n	4a1c <_svfprintf_r+0x744>
    51ea:	9916      	ldr	r1, [sp, #88]	; 0x58
    51ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
    51ee:	000a      	movs	r2, r1
    51f0:	0008      	movs	r0, r1
    51f2:	002b      	movs	r3, r5
    51f4:	0029      	movs	r1, r5
    51f6:	f003 f9eb 	bl	85d0 <__aeabi_dcmpun>
    51fa:	2800      	cmp	r0, #0
    51fc:	d000      	beq.n	5200 <_svfprintf_r+0xf28>
    51fe:	e2e6      	b.n	57ce <_svfprintf_r+0x14f6>
    5200:	4653      	mov	r3, sl
    5202:	3301      	adds	r3, #1
    5204:	d100      	bne.n	5208 <_svfprintf_r+0xf30>
    5206:	e20d      	b.n	5624 <_svfprintf_r+0x134c>
    5208:	2320      	movs	r3, #32
    520a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    520c:	439a      	bics	r2, r3
    520e:	920e      	str	r2, [sp, #56]	; 0x38
    5210:	2a47      	cmp	r2, #71	; 0x47
    5212:	d100      	bne.n	5216 <_svfprintf_r+0xf3e>
    5214:	e11c      	b.n	5450 <_svfprintf_r+0x1178>
    5216:	2380      	movs	r3, #128	; 0x80
    5218:	005b      	lsls	r3, r3, #1
    521a:	4323      	orrs	r3, r4
    521c:	9308      	str	r3, [sp, #32]
    521e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5220:	2b00      	cmp	r3, #0
    5222:	da00      	bge.n	5226 <_svfprintf_r+0xf4e>
    5224:	e221      	b.n	566a <_svfprintf_r+0x1392>
    5226:	9a16      	ldr	r2, [sp, #88]	; 0x58
    5228:	9307      	str	r3, [sp, #28]
    522a:	2300      	movs	r3, #0
    522c:	4691      	mov	r9, r2
    522e:	9310      	str	r3, [sp, #64]	; 0x40
    5230:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5232:	2b66      	cmp	r3, #102	; 0x66
    5234:	d100      	bne.n	5238 <_svfprintf_r+0xf60>
    5236:	e1fc      	b.n	5632 <_svfprintf_r+0x135a>
    5238:	2b46      	cmp	r3, #70	; 0x46
    523a:	d100      	bne.n	523e <_svfprintf_r+0xf66>
    523c:	e0db      	b.n	53f6 <_svfprintf_r+0x111e>
    523e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5240:	9809      	ldr	r0, [sp, #36]	; 0x24
    5242:	3a45      	subs	r2, #69	; 0x45
    5244:	0013      	movs	r3, r2
    5246:	4259      	negs	r1, r3
    5248:	4159      	adcs	r1, r3
    524a:	ab20      	add	r3, sp, #128	; 0x80
    524c:	000d      	movs	r5, r1
    524e:	9303      	str	r3, [sp, #12]
    5250:	ab1f      	add	r3, sp, #124	; 0x7c
    5252:	9302      	str	r3, [sp, #8]
    5254:	2302      	movs	r3, #2
    5256:	aa23      	add	r2, sp, #140	; 0x8c
    5258:	4455      	add	r5, sl
    525a:	921b      	str	r2, [sp, #108]	; 0x6c
    525c:	9204      	str	r2, [sp, #16]
    525e:	9300      	str	r3, [sp, #0]
    5260:	9501      	str	r5, [sp, #4]
    5262:	9b07      	ldr	r3, [sp, #28]
    5264:	464a      	mov	r2, r9
    5266:	f000 fc5f 	bl	5b28 <_dtoa_r>
    526a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    526c:	9011      	str	r0, [sp, #68]	; 0x44
    526e:	2b67      	cmp	r3, #103	; 0x67
    5270:	d000      	beq.n	5274 <_svfprintf_r+0xf9c>
    5272:	e239      	b.n	56e8 <_svfprintf_r+0x1410>
    5274:	9b11      	ldr	r3, [sp, #68]	; 0x44
    5276:	4698      	mov	r8, r3
    5278:	44a8      	add	r8, r5
    527a:	07e3      	lsls	r3, r4, #31
    527c:	d400      	bmi.n	5280 <_svfprintf_r+0xfa8>
    527e:	e28b      	b.n	5798 <_svfprintf_r+0x14c0>
    5280:	2300      	movs	r3, #0
    5282:	2200      	movs	r2, #0
    5284:	4648      	mov	r0, r9
    5286:	9907      	ldr	r1, [sp, #28]
    5288:	f002 ff94 	bl	81b4 <__aeabi_dcmpeq>
    528c:	4643      	mov	r3, r8
    528e:	2800      	cmp	r0, #0
    5290:	d10a      	bne.n	52a8 <_svfprintf_r+0xfd0>
    5292:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    5294:	4543      	cmp	r3, r8
    5296:	d207      	bcs.n	52a8 <_svfprintf_r+0xfd0>
    5298:	2130      	movs	r1, #48	; 0x30
    529a:	4640      	mov	r0, r8
    529c:	1c5a      	adds	r2, r3, #1
    529e:	9223      	str	r2, [sp, #140]	; 0x8c
    52a0:	7019      	strb	r1, [r3, #0]
    52a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    52a4:	4298      	cmp	r0, r3
    52a6:	d8f9      	bhi.n	529c <_svfprintf_r+0xfc4>
    52a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
    52aa:	1a9b      	subs	r3, r3, r2
    52ac:	9314      	str	r3, [sp, #80]	; 0x50
    52ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    52b0:	2b47      	cmp	r3, #71	; 0x47
    52b2:	d100      	bne.n	52b6 <_svfprintf_r+0xfde>
    52b4:	e0f6      	b.n	54a4 <_svfprintf_r+0x11cc>
    52b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    52b8:	2b65      	cmp	r3, #101	; 0x65
    52ba:	dc00      	bgt.n	52be <_svfprintf_r+0xfe6>
    52bc:	e226      	b.n	570c <_svfprintf_r+0x1434>
    52be:	9b12      	ldr	r3, [sp, #72]	; 0x48
    52c0:	2b66      	cmp	r3, #102	; 0x66
    52c2:	d100      	bne.n	52c6 <_svfprintf_r+0xfee>
    52c4:	e1f4      	b.n	56b0 <_svfprintf_r+0x13d8>
    52c6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    52c8:	9313      	str	r3, [sp, #76]	; 0x4c
    52ca:	9b14      	ldr	r3, [sp, #80]	; 0x50
    52cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    52ce:	0019      	movs	r1, r3
    52d0:	4291      	cmp	r1, r2
    52d2:	dd00      	ble.n	52d6 <_svfprintf_r+0xffe>
    52d4:	e1d4      	b.n	5680 <_svfprintf_r+0x13a8>
    52d6:	07e3      	lsls	r3, r4, #31
    52d8:	d500      	bpl.n	52dc <_svfprintf_r+0x1004>
    52da:	e249      	b.n	5770 <_svfprintf_r+0x1498>
    52dc:	43d3      	mvns	r3, r2
    52de:	17db      	asrs	r3, r3, #31
    52e0:	0011      	movs	r1, r2
    52e2:	401a      	ands	r2, r3
    52e4:	2367      	movs	r3, #103	; 0x67
    52e6:	9207      	str	r2, [sp, #28]
    52e8:	910e      	str	r1, [sp, #56]	; 0x38
    52ea:	9312      	str	r3, [sp, #72]	; 0x48
    52ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
    52ee:	2b00      	cmp	r3, #0
    52f0:	d000      	beq.n	52f4 <_svfprintf_r+0x101c>
    52f2:	e0cf      	b.n	5494 <_svfprintf_r+0x11bc>
    52f4:	ab16      	add	r3, sp, #88	; 0x58
    52f6:	7fdb      	ldrb	r3, [r3, #31]
    52f8:	4698      	mov	r8, r3
    52fa:	2300      	movs	r3, #0
    52fc:	469a      	mov	sl, r3
    52fe:	f7ff f903 	bl	4508 <_svfprintf_r+0x230>
    5302:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    5304:	990a      	ldr	r1, [sp, #40]	; 0x28
    5306:	6813      	ldr	r3, [r2, #0]
    5308:	6019      	str	r1, [r3, #0]
    530a:	0013      	movs	r3, r2
    530c:	3304      	adds	r3, #4
    530e:	930f      	str	r3, [sp, #60]	; 0x3c
    5310:	f7ff f80d 	bl	432e <_svfprintf_r+0x56>
    5314:	003a      	movs	r2, r7
    5316:	9906      	ldr	r1, [sp, #24]
    5318:	9809      	ldr	r0, [sp, #36]	; 0x24
    531a:	f002 fa35 	bl	7788 <__ssprint_r>
    531e:	2800      	cmp	r0, #0
    5320:	d001      	beq.n	5326 <_svfprintf_r+0x104e>
    5322:	f7ff f860 	bl	43e6 <_svfprintf_r+0x10e>
    5326:	ae32      	add	r6, sp, #200	; 0xc8
    5328:	e48e      	b.n	4c48 <_svfprintf_r+0x970>
    532a:	4bde      	ldr	r3, [pc, #888]	; (56a4 <_svfprintf_r+0x13cc>)
    532c:	3401      	adds	r4, #1
    532e:	6033      	str	r3, [r6, #0]
    5330:	2301      	movs	r3, #1
    5332:	6073      	str	r3, [r6, #4]
    5334:	687b      	ldr	r3, [r7, #4]
    5336:	60bc      	str	r4, [r7, #8]
    5338:	3301      	adds	r3, #1
    533a:	607b      	str	r3, [r7, #4]
    533c:	2b07      	cmp	r3, #7
    533e:	dc7a      	bgt.n	5436 <_svfprintf_r+0x115e>
    5340:	3608      	adds	r6, #8
    5342:	2800      	cmp	r0, #0
    5344:	d107      	bne.n	5356 <_svfprintf_r+0x107e>
    5346:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5348:	2b00      	cmp	r3, #0
    534a:	d104      	bne.n	5356 <_svfprintf_r+0x107e>
    534c:	9b08      	ldr	r3, [sp, #32]
    534e:	07db      	lsls	r3, r3, #31
    5350:	d401      	bmi.n	5356 <_svfprintf_r+0x107e>
    5352:	f7ff fbb7 	bl	4ac4 <_svfprintf_r+0x7ec>
    5356:	9b19      	ldr	r3, [sp, #100]	; 0x64
    5358:	6033      	str	r3, [r6, #0]
    535a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    535c:	1919      	adds	r1, r3, r4
    535e:	6073      	str	r3, [r6, #4]
    5360:	687b      	ldr	r3, [r7, #4]
    5362:	60b9      	str	r1, [r7, #8]
    5364:	3301      	adds	r3, #1
    5366:	607b      	str	r3, [r7, #4]
    5368:	2b07      	cmp	r3, #7
    536a:	dd00      	ble.n	536e <_svfprintf_r+0x1096>
    536c:	e1f2      	b.n	5754 <_svfprintf_r+0x147c>
    536e:	0032      	movs	r2, r6
    5370:	3208      	adds	r2, #8
    5372:	2800      	cmp	r0, #0
    5374:	da00      	bge.n	5378 <_svfprintf_r+0x10a0>
    5376:	e1cc      	b.n	5712 <_svfprintf_r+0x143a>
    5378:	9811      	ldr	r0, [sp, #68]	; 0x44
    537a:	3301      	adds	r3, #1
    537c:	6010      	str	r0, [r2, #0]
    537e:	9814      	ldr	r0, [sp, #80]	; 0x50
    5380:	607b      	str	r3, [r7, #4]
    5382:	1844      	adds	r4, r0, r1
    5384:	6050      	str	r0, [r2, #4]
    5386:	60bc      	str	r4, [r7, #8]
    5388:	2b07      	cmp	r3, #7
    538a:	dd00      	ble.n	538e <_svfprintf_r+0x10b6>
    538c:	e437      	b.n	4bfe <_svfprintf_r+0x926>
    538e:	3208      	adds	r2, #8
    5390:	0016      	movs	r6, r2
    5392:	f7ff fb97 	bl	4ac4 <_svfprintf_r+0x7ec>
    5396:	990f      	ldr	r1, [sp, #60]	; 0x3c
    5398:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    539a:	680b      	ldr	r3, [r1, #0]
    539c:	601a      	str	r2, [r3, #0]
    539e:	17d2      	asrs	r2, r2, #31
    53a0:	605a      	str	r2, [r3, #4]
    53a2:	000b      	movs	r3, r1
    53a4:	3304      	adds	r3, #4
    53a6:	930f      	str	r3, [sp, #60]	; 0x3c
    53a8:	f7fe ffc1 	bl	432e <_svfprintf_r+0x56>
    53ac:	464b      	mov	r3, r9
    53ae:	3101      	adds	r1, #1
    53b0:	431c      	orrs	r4, r3
    53b2:	780b      	ldrb	r3, [r1, #0]
    53b4:	f7fe fff4 	bl	43a0 <_svfprintf_r+0xc8>
    53b8:	4bbb      	ldr	r3, [pc, #748]	; (56a8 <_svfprintf_r+0x13d0>)
    53ba:	9311      	str	r3, [sp, #68]	; 0x44
    53bc:	f7ff f937 	bl	462e <_svfprintf_r+0x356>
    53c0:	003a      	movs	r2, r7
    53c2:	9906      	ldr	r1, [sp, #24]
    53c4:	9809      	ldr	r0, [sp, #36]	; 0x24
    53c6:	f002 f9df 	bl	7788 <__ssprint_r>
    53ca:	2800      	cmp	r0, #0
    53cc:	d001      	beq.n	53d2 <_svfprintf_r+0x10fa>
    53ce:	f7ff f80a 	bl	43e6 <_svfprintf_r+0x10e>
    53d2:	68bc      	ldr	r4, [r7, #8]
    53d4:	ae32      	add	r6, sp, #200	; 0xc8
    53d6:	e5f1      	b.n	4fbc <_svfprintf_r+0xce4>
    53d8:	2140      	movs	r1, #64	; 0x40
    53da:	9809      	ldr	r0, [sp, #36]	; 0x24
    53dc:	f001 fb76 	bl	6acc <_malloc_r>
    53e0:	9b06      	ldr	r3, [sp, #24]
    53e2:	6018      	str	r0, [r3, #0]
    53e4:	6118      	str	r0, [r3, #16]
    53e6:	2800      	cmp	r0, #0
    53e8:	d100      	bne.n	53ec <_svfprintf_r+0x1114>
    53ea:	e24f      	b.n	588c <_svfprintf_r+0x15b4>
    53ec:	2340      	movs	r3, #64	; 0x40
    53ee:	9a06      	ldr	r2, [sp, #24]
    53f0:	6153      	str	r3, [r2, #20]
    53f2:	f7fe ff8e 	bl	4312 <_svfprintf_r+0x3a>
    53f6:	ab23      	add	r3, sp, #140	; 0x8c
    53f8:	931b      	str	r3, [sp, #108]	; 0x6c
    53fa:	9304      	str	r3, [sp, #16]
    53fc:	ab20      	add	r3, sp, #128	; 0x80
    53fe:	9303      	str	r3, [sp, #12]
    5400:	ab1f      	add	r3, sp, #124	; 0x7c
    5402:	9302      	str	r3, [sp, #8]
    5404:	4653      	mov	r3, sl
    5406:	9301      	str	r3, [sp, #4]
    5408:	2303      	movs	r3, #3
    540a:	464a      	mov	r2, r9
    540c:	9300      	str	r3, [sp, #0]
    540e:	9809      	ldr	r0, [sp, #36]	; 0x24
    5410:	9b07      	ldr	r3, [sp, #28]
    5412:	f000 fb89 	bl	5b28 <_dtoa_r>
    5416:	4655      	mov	r5, sl
    5418:	9011      	str	r0, [sp, #68]	; 0x44
    541a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    541c:	4698      	mov	r8, r3
    541e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5420:	44a8      	add	r8, r5
    5422:	2b46      	cmp	r3, #70	; 0x46
    5424:	d000      	beq.n	5428 <_svfprintf_r+0x1150>
    5426:	e72b      	b.n	5280 <_svfprintf_r+0xfa8>
    5428:	9b11      	ldr	r3, [sp, #68]	; 0x44
    542a:	781b      	ldrb	r3, [r3, #0]
    542c:	2b30      	cmp	r3, #48	; 0x30
    542e:	d016      	beq.n	545e <_svfprintf_r+0x1186>
    5430:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5432:	4498      	add	r8, r3
    5434:	e724      	b.n	5280 <_svfprintf_r+0xfa8>
    5436:	003a      	movs	r2, r7
    5438:	9906      	ldr	r1, [sp, #24]
    543a:	9809      	ldr	r0, [sp, #36]	; 0x24
    543c:	f002 f9a4 	bl	7788 <__ssprint_r>
    5440:	2800      	cmp	r0, #0
    5442:	d001      	beq.n	5448 <_svfprintf_r+0x1170>
    5444:	f7fe ffcf 	bl	43e6 <_svfprintf_r+0x10e>
    5448:	981f      	ldr	r0, [sp, #124]	; 0x7c
    544a:	68bc      	ldr	r4, [r7, #8]
    544c:	ae32      	add	r6, sp, #200	; 0xc8
    544e:	e778      	b.n	5342 <_svfprintf_r+0x106a>
    5450:	4653      	mov	r3, sl
    5452:	2b00      	cmp	r3, #0
    5454:	d000      	beq.n	5458 <_svfprintf_r+0x1180>
    5456:	e6de      	b.n	5216 <_svfprintf_r+0xf3e>
    5458:	3301      	adds	r3, #1
    545a:	469a      	mov	sl, r3
    545c:	e6db      	b.n	5216 <_svfprintf_r+0xf3e>
    545e:	2200      	movs	r2, #0
    5460:	2300      	movs	r3, #0
    5462:	4648      	mov	r0, r9
    5464:	9907      	ldr	r1, [sp, #28]
    5466:	f002 fea5 	bl	81b4 <__aeabi_dcmpeq>
    546a:	2800      	cmp	r0, #0
    546c:	d1e0      	bne.n	5430 <_svfprintf_r+0x1158>
    546e:	2301      	movs	r3, #1
    5470:	1b5b      	subs	r3, r3, r5
    5472:	931f      	str	r3, [sp, #124]	; 0x7c
    5474:	4498      	add	r8, r3
    5476:	e703      	b.n	5280 <_svfprintf_r+0xfa8>
    5478:	9a11      	ldr	r2, [sp, #68]	; 0x44
    547a:	ab32      	add	r3, sp, #200	; 0xc8
    547c:	1a9b      	subs	r3, r3, r2
    547e:	930e      	str	r3, [sp, #56]	; 0x38
    5480:	f7ff f83a 	bl	44f8 <_svfprintf_r+0x220>
    5484:	9811      	ldr	r0, [sp, #68]	; 0x44
    5486:	f7fe fe9f 	bl	41c8 <strlen>
    548a:	0002      	movs	r2, r0
    548c:	900e      	str	r0, [sp, #56]	; 0x38
    548e:	0003      	movs	r3, r0
    5490:	f7ff f9cd 	bl	482e <_svfprintf_r+0x556>
    5494:	232d      	movs	r3, #45	; 0x2d
    5496:	aa16      	add	r2, sp, #88	; 0x58
    5498:	77d3      	strb	r3, [r2, #31]
    549a:	4698      	mov	r8, r3
    549c:	2300      	movs	r3, #0
    549e:	469a      	mov	sl, r3
    54a0:	f7ff f835 	bl	450e <_svfprintf_r+0x236>
    54a4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    54a6:	9313      	str	r3, [sp, #76]	; 0x4c
    54a8:	1cda      	adds	r2, r3, #3
    54aa:	db02      	blt.n	54b2 <_svfprintf_r+0x11da>
    54ac:	459a      	cmp	sl, r3
    54ae:	db00      	blt.n	54b2 <_svfprintf_r+0x11da>
    54b0:	e70b      	b.n	52ca <_svfprintf_r+0xff2>
    54b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    54b4:	3b02      	subs	r3, #2
    54b6:	9312      	str	r3, [sp, #72]	; 0x48
    54b8:	222c      	movs	r2, #44	; 0x2c
    54ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    54bc:	2148      	movs	r1, #72	; 0x48
    54be:	1e5d      	subs	r5, r3, #1
    54c0:	ab16      	add	r3, sp, #88	; 0x58
    54c2:	189b      	adds	r3, r3, r2
    54c4:	466a      	mov	r2, sp
    54c6:	1852      	adds	r2, r2, r1
    54c8:	7812      	ldrb	r2, [r2, #0]
    54ca:	951f      	str	r5, [sp, #124]	; 0x7c
    54cc:	701a      	strb	r2, [r3, #0]
    54ce:	2d00      	cmp	r5, #0
    54d0:	da00      	bge.n	54d4 <_svfprintf_r+0x11fc>
    54d2:	e1a4      	b.n	581e <_svfprintf_r+0x1546>
    54d4:	212d      	movs	r1, #45	; 0x2d
    54d6:	232b      	movs	r3, #43	; 0x2b
    54d8:	aa16      	add	r2, sp, #88	; 0x58
    54da:	1852      	adds	r2, r2, r1
    54dc:	7013      	strb	r3, [r2, #0]
    54de:	2d09      	cmp	r5, #9
    54e0:	dc00      	bgt.n	54e4 <_svfprintf_r+0x120c>
    54e2:	e14c      	b.n	577e <_svfprintf_r+0x14a6>
    54e4:	aa16      	add	r2, sp, #88	; 0x58
    54e6:	233b      	movs	r3, #59	; 0x3b
    54e8:	4694      	mov	ip, r2
    54ea:	4463      	add	r3, ip
    54ec:	469a      	mov	sl, r3
    54ee:	46b1      	mov	r9, r6
    54f0:	46a0      	mov	r8, r4
    54f2:	4656      	mov	r6, sl
    54f4:	e000      	b.n	54f8 <_svfprintf_r+0x1220>
    54f6:	0026      	movs	r6, r4
    54f8:	0028      	movs	r0, r5
    54fa:	210a      	movs	r1, #10
    54fc:	f002 fe46 	bl	818c <__aeabi_idivmod>
    5500:	1e74      	subs	r4, r6, #1
    5502:	3130      	adds	r1, #48	; 0x30
    5504:	7021      	strb	r1, [r4, #0]
    5506:	0028      	movs	r0, r5
    5508:	210a      	movs	r1, #10
    550a:	f002 fd59 	bl	7fc0 <__divsi3>
    550e:	0005      	movs	r5, r0
    5510:	2809      	cmp	r0, #9
    5512:	dcf0      	bgt.n	54f6 <_svfprintf_r+0x121e>
    5514:	0023      	movs	r3, r4
    5516:	4644      	mov	r4, r8
    5518:	46b0      	mov	r8, r6
    551a:	464e      	mov	r6, r9
    551c:	4699      	mov	r9, r3
    551e:	0003      	movs	r3, r0
    5520:	3330      	adds	r3, #48	; 0x30
    5522:	b2d8      	uxtb	r0, r3
    5524:	4643      	mov	r3, r8
    5526:	3b02      	subs	r3, #2
    5528:	7018      	strb	r0, [r3, #0]
    552a:	459a      	cmp	sl, r3
    552c:	d800      	bhi.n	5530 <_svfprintf_r+0x1258>
    552e:	e1b4      	b.n	589a <_svfprintf_r+0x15c2>
    5530:	4642      	mov	r2, r8
    5532:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5534:	4645      	mov	r5, r8
    5536:	1a99      	subs	r1, r3, r2
    5538:	2301      	movs	r3, #1
    553a:	3107      	adds	r1, #7
    553c:	425b      	negs	r3, r3
    553e:	e001      	b.n	5544 <_svfprintf_r+0x126c>
    5540:	5ce8      	ldrb	r0, [r5, r3]
    5542:	3301      	adds	r3, #1
    5544:	aa21      	add	r2, sp, #132	; 0x84
    5546:	18d2      	adds	r2, r2, r3
    5548:	70d0      	strb	r0, [r2, #3]
    554a:	428b      	cmp	r3, r1
    554c:	d1f8      	bne.n	5540 <_svfprintf_r+0x1268>
    554e:	a916      	add	r1, sp, #88	; 0x58
    5550:	468c      	mov	ip, r1
    5552:	222e      	movs	r2, #46	; 0x2e
    5554:	464b      	mov	r3, r9
    5556:	4462      	add	r2, ip
    5558:	4694      	mov	ip, r2
    555a:	1afb      	subs	r3, r7, r3
    555c:	4463      	add	r3, ip
    555e:	aa21      	add	r2, sp, #132	; 0x84
    5560:	9914      	ldr	r1, [sp, #80]	; 0x50
    5562:	1a9b      	subs	r3, r3, r2
    5564:	469c      	mov	ip, r3
    5566:	000a      	movs	r2, r1
    5568:	4462      	add	r2, ip
    556a:	931a      	str	r3, [sp, #104]	; 0x68
    556c:	920e      	str	r2, [sp, #56]	; 0x38
    556e:	2901      	cmp	r1, #1
    5570:	dc00      	bgt.n	5574 <_svfprintf_r+0x129c>
    5572:	e145      	b.n	5800 <_svfprintf_r+0x1528>
    5574:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5576:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5578:	4694      	mov	ip, r2
    557a:	4463      	add	r3, ip
    557c:	001a      	movs	r2, r3
    557e:	930e      	str	r3, [sp, #56]	; 0x38
    5580:	43db      	mvns	r3, r3
    5582:	17db      	asrs	r3, r3, #31
    5584:	401a      	ands	r2, r3
    5586:	2300      	movs	r3, #0
    5588:	9207      	str	r2, [sp, #28]
    558a:	9313      	str	r3, [sp, #76]	; 0x4c
    558c:	e6ae      	b.n	52ec <_svfprintf_r+0x1014>
    558e:	2301      	movs	r3, #1
    5590:	425b      	negs	r3, r3
    5592:	930a      	str	r3, [sp, #40]	; 0x28
    5594:	f7fe ff2d 	bl	43f2 <_svfprintf_r+0x11a>
    5598:	003a      	movs	r2, r7
    559a:	9906      	ldr	r1, [sp, #24]
    559c:	9809      	ldr	r0, [sp, #36]	; 0x24
    559e:	f002 f8f3 	bl	7788 <__ssprint_r>
    55a2:	2800      	cmp	r0, #0
    55a4:	d001      	beq.n	55aa <_svfprintf_r+0x12d2>
    55a6:	f7fe ff1e 	bl	43e6 <_svfprintf_r+0x10e>
    55aa:	68bc      	ldr	r4, [r7, #8]
    55ac:	ae32      	add	r6, sp, #200	; 0xc8
    55ae:	e43c      	b.n	4e2a <_svfprintf_r+0xb52>
    55b0:	003a      	movs	r2, r7
    55b2:	9906      	ldr	r1, [sp, #24]
    55b4:	9809      	ldr	r0, [sp, #36]	; 0x24
    55b6:	f002 f8e7 	bl	7788 <__ssprint_r>
    55ba:	2800      	cmp	r0, #0
    55bc:	d001      	beq.n	55c2 <_svfprintf_r+0x12ea>
    55be:	f7fe ff12 	bl	43e6 <_svfprintf_r+0x10e>
    55c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    55c4:	68bc      	ldr	r4, [r7, #8]
    55c6:	ae32      	add	r6, sp, #200	; 0xc8
    55c8:	e56a      	b.n	50a0 <_svfprintf_r+0xdc8>
    55ca:	003a      	movs	r2, r7
    55cc:	9906      	ldr	r1, [sp, #24]
    55ce:	9809      	ldr	r0, [sp, #36]	; 0x24
    55d0:	f002 f8da 	bl	7788 <__ssprint_r>
    55d4:	2800      	cmp	r0, #0
    55d6:	d001      	beq.n	55dc <_svfprintf_r+0x1304>
    55d8:	f7fe ff05 	bl	43e6 <_svfprintf_r+0x10e>
    55dc:	68bc      	ldr	r4, [r7, #8]
    55de:	ae32      	add	r6, sp, #200	; 0xc8
    55e0:	e557      	b.n	5092 <_svfprintf_r+0xdba>
    55e2:	003a      	movs	r2, r7
    55e4:	9906      	ldr	r1, [sp, #24]
    55e6:	9809      	ldr	r0, [sp, #36]	; 0x24
    55e8:	f002 f8ce 	bl	7788 <__ssprint_r>
    55ec:	2800      	cmp	r0, #0
    55ee:	d001      	beq.n	55f4 <_svfprintf_r+0x131c>
    55f0:	f7fe fef9 	bl	43e6 <_svfprintf_r+0x10e>
    55f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    55f6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    55f8:	68bc      	ldr	r4, [r7, #8]
    55fa:	1a9b      	subs	r3, r3, r2
    55fc:	ae32      	add	r6, sp, #200	; 0xc8
    55fe:	e56a      	b.n	50d6 <_svfprintf_r+0xdfe>
    5600:	4653      	mov	r3, sl
    5602:	9307      	str	r3, [sp, #28]
    5604:	2b06      	cmp	r3, #6
    5606:	d901      	bls.n	560c <_svfprintf_r+0x1334>
    5608:	2306      	movs	r3, #6
    560a:	9307      	str	r3, [sp, #28]
    560c:	9b07      	ldr	r3, [sp, #28]
    560e:	950f      	str	r5, [sp, #60]	; 0x3c
    5610:	930e      	str	r3, [sp, #56]	; 0x38
    5612:	2300      	movs	r3, #0
    5614:	4698      	mov	r8, r3
    5616:	469a      	mov	sl, r3
    5618:	9313      	str	r3, [sp, #76]	; 0x4c
    561a:	4b24      	ldr	r3, [pc, #144]	; (56ac <_svfprintf_r+0x13d4>)
    561c:	9408      	str	r4, [sp, #32]
    561e:	9311      	str	r3, [sp, #68]	; 0x44
    5620:	f7fe ff78 	bl	4514 <_svfprintf_r+0x23c>
    5624:	2320      	movs	r3, #32
    5626:	9a12      	ldr	r2, [sp, #72]	; 0x48
    5628:	439a      	bics	r2, r3
    562a:	3b1a      	subs	r3, #26
    562c:	920e      	str	r2, [sp, #56]	; 0x38
    562e:	469a      	mov	sl, r3
    5630:	e5f1      	b.n	5216 <_svfprintf_r+0xf3e>
    5632:	ab23      	add	r3, sp, #140	; 0x8c
    5634:	931b      	str	r3, [sp, #108]	; 0x6c
    5636:	9304      	str	r3, [sp, #16]
    5638:	ab20      	add	r3, sp, #128	; 0x80
    563a:	9303      	str	r3, [sp, #12]
    563c:	ab1f      	add	r3, sp, #124	; 0x7c
    563e:	9302      	str	r3, [sp, #8]
    5640:	4653      	mov	r3, sl
    5642:	9301      	str	r3, [sp, #4]
    5644:	2303      	movs	r3, #3
    5646:	464a      	mov	r2, r9
    5648:	9300      	str	r3, [sp, #0]
    564a:	9809      	ldr	r0, [sp, #36]	; 0x24
    564c:	9b07      	ldr	r3, [sp, #28]
    564e:	f000 fa6b 	bl	5b28 <_dtoa_r>
    5652:	0003      	movs	r3, r0
    5654:	4453      	add	r3, sl
    5656:	9011      	str	r0, [sp, #68]	; 0x44
    5658:	4698      	mov	r8, r3
    565a:	4655      	mov	r5, sl
    565c:	e6e4      	b.n	5428 <_svfprintf_r+0x1150>
    565e:	232d      	movs	r3, #45	; 0x2d
    5660:	aa16      	add	r2, sp, #88	; 0x58
    5662:	77d3      	strb	r3, [r2, #31]
    5664:	4698      	mov	r8, r3
    5666:	f7fe ffdb 	bl	4620 <_svfprintf_r+0x348>
    566a:	2280      	movs	r2, #128	; 0x80
    566c:	0612      	lsls	r2, r2, #24
    566e:	4694      	mov	ip, r2
    5670:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5672:	4699      	mov	r9, r3
    5674:	9b15      	ldr	r3, [sp, #84]	; 0x54
    5676:	4463      	add	r3, ip
    5678:	9307      	str	r3, [sp, #28]
    567a:	232d      	movs	r3, #45	; 0x2d
    567c:	9310      	str	r3, [sp, #64]	; 0x40
    567e:	e5d7      	b.n	5230 <_svfprintf_r+0xf58>
    5680:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5682:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5684:	4694      	mov	ip, r2
    5686:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5688:	4463      	add	r3, ip
    568a:	930e      	str	r3, [sp, #56]	; 0x38
    568c:	2a00      	cmp	r2, #0
    568e:	dc00      	bgt.n	5692 <_svfprintf_r+0x13ba>
    5690:	e0ce      	b.n	5830 <_svfprintf_r+0x1558>
    5692:	001a      	movs	r2, r3
    5694:	43db      	mvns	r3, r3
    5696:	17db      	asrs	r3, r3, #31
    5698:	401a      	ands	r2, r3
    569a:	2367      	movs	r3, #103	; 0x67
    569c:	9207      	str	r2, [sp, #28]
    569e:	9312      	str	r3, [sp, #72]	; 0x48
    56a0:	e624      	b.n	52ec <_svfprintf_r+0x1014>
    56a2:	46c0      	nop			; (mov r8, r8)
    56a4:	00008ae0 	.word	0x00008ae0
    56a8:	00008aa4 	.word	0x00008aa4
    56ac:	00008ad8 	.word	0x00008ad8
    56b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    56b2:	9313      	str	r3, [sp, #76]	; 0x4c
    56b4:	2b00      	cmp	r3, #0
    56b6:	dc00      	bgt.n	56ba <_svfprintf_r+0x13e2>
    56b8:	e0d5      	b.n	5866 <_svfprintf_r+0x158e>
    56ba:	4652      	mov	r2, sl
    56bc:	2a00      	cmp	r2, #0
    56be:	d000      	beq.n	56c2 <_svfprintf_r+0x13ea>
    56c0:	e092      	b.n	57e8 <_svfprintf_r+0x1510>
    56c2:	07e2      	lsls	r2, r4, #31
    56c4:	d500      	bpl.n	56c8 <_svfprintf_r+0x13f0>
    56c6:	e08f      	b.n	57e8 <_svfprintf_r+0x1510>
    56c8:	9307      	str	r3, [sp, #28]
    56ca:	930e      	str	r3, [sp, #56]	; 0x38
    56cc:	e60e      	b.n	52ec <_svfprintf_r+0x1014>
    56ce:	ab16      	add	r3, sp, #88	; 0x58
    56d0:	7fdb      	ldrb	r3, [r3, #31]
    56d2:	950f      	str	r5, [sp, #60]	; 0x3c
    56d4:	4698      	mov	r8, r3
    56d6:	4653      	mov	r3, sl
    56d8:	9307      	str	r3, [sp, #28]
    56da:	930e      	str	r3, [sp, #56]	; 0x38
    56dc:	2300      	movs	r3, #0
    56de:	9408      	str	r4, [sp, #32]
    56e0:	469a      	mov	sl, r3
    56e2:	9313      	str	r3, [sp, #76]	; 0x4c
    56e4:	f7fe ff10 	bl	4508 <_svfprintf_r+0x230>
    56e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    56ea:	4698      	mov	r8, r3
    56ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
    56ee:	44a8      	add	r8, r5
    56f0:	2b47      	cmp	r3, #71	; 0x47
    56f2:	d000      	beq.n	56f6 <_svfprintf_r+0x141e>
    56f4:	e5c4      	b.n	5280 <_svfprintf_r+0xfa8>
    56f6:	07e3      	lsls	r3, r4, #31
    56f8:	d500      	bpl.n	56fc <_svfprintf_r+0x1424>
    56fa:	e68e      	b.n	541a <_svfprintf_r+0x1142>
    56fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    56fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
    5700:	1a9b      	subs	r3, r3, r2
    5702:	9314      	str	r3, [sp, #80]	; 0x50
    5704:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5706:	2b47      	cmp	r3, #71	; 0x47
    5708:	d100      	bne.n	570c <_svfprintf_r+0x1434>
    570a:	e6cb      	b.n	54a4 <_svfprintf_r+0x11cc>
    570c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    570e:	9313      	str	r3, [sp, #76]	; 0x4c
    5710:	e6d2      	b.n	54b8 <_svfprintf_r+0x11e0>
    5712:	4244      	negs	r4, r0
    5714:	3010      	adds	r0, #16
    5716:	db00      	blt.n	571a <_svfprintf_r+0x1442>
    5718:	e0d0      	b.n	58bc <_svfprintf_r+0x15e4>
    571a:	486e      	ldr	r0, [pc, #440]	; (58d4 <_svfprintf_r+0x15fc>)
    571c:	2610      	movs	r6, #16
    571e:	0005      	movs	r5, r0
    5720:	e003      	b.n	572a <_svfprintf_r+0x1452>
    5722:	3208      	adds	r2, #8
    5724:	3c10      	subs	r4, #16
    5726:	2c10      	cmp	r4, #16
    5728:	dd38      	ble.n	579c <_svfprintf_r+0x14c4>
    572a:	3110      	adds	r1, #16
    572c:	3301      	adds	r3, #1
    572e:	6015      	str	r5, [r2, #0]
    5730:	6056      	str	r6, [r2, #4]
    5732:	60b9      	str	r1, [r7, #8]
    5734:	607b      	str	r3, [r7, #4]
    5736:	2b07      	cmp	r3, #7
    5738:	ddf3      	ble.n	5722 <_svfprintf_r+0x144a>
    573a:	003a      	movs	r2, r7
    573c:	9906      	ldr	r1, [sp, #24]
    573e:	9809      	ldr	r0, [sp, #36]	; 0x24
    5740:	f002 f822 	bl	7788 <__ssprint_r>
    5744:	2800      	cmp	r0, #0
    5746:	d001      	beq.n	574c <_svfprintf_r+0x1474>
    5748:	f7fe fe4d 	bl	43e6 <_svfprintf_r+0x10e>
    574c:	68b9      	ldr	r1, [r7, #8]
    574e:	687b      	ldr	r3, [r7, #4]
    5750:	aa32      	add	r2, sp, #200	; 0xc8
    5752:	e7e7      	b.n	5724 <_svfprintf_r+0x144c>
    5754:	003a      	movs	r2, r7
    5756:	9906      	ldr	r1, [sp, #24]
    5758:	9809      	ldr	r0, [sp, #36]	; 0x24
    575a:	f002 f815 	bl	7788 <__ssprint_r>
    575e:	2800      	cmp	r0, #0
    5760:	d001      	beq.n	5766 <_svfprintf_r+0x148e>
    5762:	f7fe fe40 	bl	43e6 <_svfprintf_r+0x10e>
    5766:	981f      	ldr	r0, [sp, #124]	; 0x7c
    5768:	68b9      	ldr	r1, [r7, #8]
    576a:	687b      	ldr	r3, [r7, #4]
    576c:	aa32      	add	r2, sp, #200	; 0xc8
    576e:	e600      	b.n	5372 <_svfprintf_r+0x109a>
    5770:	9a18      	ldr	r2, [sp, #96]	; 0x60
    5772:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5774:	4694      	mov	ip, r2
    5776:	4463      	add	r3, ip
    5778:	001a      	movs	r2, r3
    577a:	930e      	str	r3, [sp, #56]	; 0x38
    577c:	e78a      	b.n	5694 <_svfprintf_r+0x13bc>
    577e:	212e      	movs	r1, #46	; 0x2e
    5780:	2330      	movs	r3, #48	; 0x30
    5782:	aa16      	add	r2, sp, #88	; 0x58
    5784:	1852      	adds	r2, r2, r1
    5786:	7013      	strb	r3, [r2, #0]
    5788:	002b      	movs	r3, r5
    578a:	aa16      	add	r2, sp, #88	; 0x58
    578c:	3101      	adds	r1, #1
    578e:	3330      	adds	r3, #48	; 0x30
    5790:	1852      	adds	r2, r2, r1
    5792:	7013      	strb	r3, [r2, #0]
    5794:	ab22      	add	r3, sp, #136	; 0x88
    5796:	e6e2      	b.n	555e <_svfprintf_r+0x1286>
    5798:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    579a:	e585      	b.n	52a8 <_svfprintf_r+0xfd0>
    579c:	46a9      	mov	r9, r5
    579e:	4648      	mov	r0, r9
    57a0:	1909      	adds	r1, r1, r4
    57a2:	3301      	adds	r3, #1
    57a4:	6010      	str	r0, [r2, #0]
    57a6:	6054      	str	r4, [r2, #4]
    57a8:	60b9      	str	r1, [r7, #8]
    57aa:	3208      	adds	r2, #8
    57ac:	607b      	str	r3, [r7, #4]
    57ae:	2b07      	cmp	r3, #7
    57b0:	dc00      	bgt.n	57b4 <_svfprintf_r+0x14dc>
    57b2:	e5e1      	b.n	5378 <_svfprintf_r+0x10a0>
    57b4:	003a      	movs	r2, r7
    57b6:	9906      	ldr	r1, [sp, #24]
    57b8:	9809      	ldr	r0, [sp, #36]	; 0x24
    57ba:	f001 ffe5 	bl	7788 <__ssprint_r>
    57be:	2800      	cmp	r0, #0
    57c0:	d001      	beq.n	57c6 <_svfprintf_r+0x14ee>
    57c2:	f7fe fe10 	bl	43e6 <_svfprintf_r+0x10e>
    57c6:	68b9      	ldr	r1, [r7, #8]
    57c8:	687b      	ldr	r3, [r7, #4]
    57ca:	aa32      	add	r2, sp, #200	; 0xc8
    57cc:	e5d4      	b.n	5378 <_svfprintf_r+0x10a0>
    57ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
    57d0:	2b00      	cmp	r3, #0
    57d2:	db38      	blt.n	5846 <_svfprintf_r+0x156e>
    57d4:	ab16      	add	r3, sp, #88	; 0x58
    57d6:	7fdb      	ldrb	r3, [r3, #31]
    57d8:	4698      	mov	r8, r3
    57da:	9b12      	ldr	r3, [sp, #72]	; 0x48
    57dc:	2b47      	cmp	r3, #71	; 0x47
    57de:	dc2e      	bgt.n	583e <_svfprintf_r+0x1566>
    57e0:	4b3d      	ldr	r3, [pc, #244]	; (58d8 <_svfprintf_r+0x1600>)
    57e2:	9311      	str	r3, [sp, #68]	; 0x44
    57e4:	f7fe ff23 	bl	462e <_svfprintf_r+0x356>
    57e8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    57ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    57ec:	4694      	mov	ip, r2
    57ee:	4463      	add	r3, ip
    57f0:	4453      	add	r3, sl
    57f2:	001a      	movs	r2, r3
    57f4:	930e      	str	r3, [sp, #56]	; 0x38
    57f6:	43db      	mvns	r3, r3
    57f8:	17db      	asrs	r3, r3, #31
    57fa:	401a      	ands	r2, r3
    57fc:	9207      	str	r2, [sp, #28]
    57fe:	e575      	b.n	52ec <_svfprintf_r+0x1014>
    5800:	2301      	movs	r3, #1
    5802:	4023      	ands	r3, r4
    5804:	9313      	str	r3, [sp, #76]	; 0x4c
    5806:	d000      	beq.n	580a <_svfprintf_r+0x1532>
    5808:	e6b4      	b.n	5574 <_svfprintf_r+0x129c>
    580a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    580c:	43d3      	mvns	r3, r2
    580e:	17db      	asrs	r3, r3, #31
    5810:	401a      	ands	r2, r3
    5812:	9207      	str	r2, [sp, #28]
    5814:	e56a      	b.n	52ec <_svfprintf_r+0x1014>
    5816:	4a2f      	ldr	r2, [pc, #188]	; (58d4 <_svfprintf_r+0x15fc>)
    5818:	687b      	ldr	r3, [r7, #4]
    581a:	4691      	mov	r9, r2
    581c:	e42d      	b.n	507a <_svfprintf_r+0xda2>
    581e:	2301      	movs	r3, #1
    5820:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5822:	391b      	subs	r1, #27
    5824:	1a9d      	subs	r5, r3, r2
    5826:	aa16      	add	r2, sp, #88	; 0x58
    5828:	332c      	adds	r3, #44	; 0x2c
    582a:	1852      	adds	r2, r2, r1
    582c:	7013      	strb	r3, [r2, #0]
    582e:	e656      	b.n	54de <_svfprintf_r+0x1206>
    5830:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5832:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    5834:	1a98      	subs	r0, r3, r2
    5836:	1c43      	adds	r3, r0, #1
    5838:	001a      	movs	r2, r3
    583a:	930e      	str	r3, [sp, #56]	; 0x38
    583c:	e72a      	b.n	5694 <_svfprintf_r+0x13bc>
    583e:	4b27      	ldr	r3, [pc, #156]	; (58dc <_svfprintf_r+0x1604>)
    5840:	9311      	str	r3, [sp, #68]	; 0x44
    5842:	f7fe fef4 	bl	462e <_svfprintf_r+0x356>
    5846:	232d      	movs	r3, #45	; 0x2d
    5848:	aa16      	add	r2, sp, #88	; 0x58
    584a:	77d3      	strb	r3, [r2, #31]
    584c:	4698      	mov	r8, r3
    584e:	e7c4      	b.n	57da <_svfprintf_r+0x1502>
    5850:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    5852:	1d1a      	adds	r2, r3, #4
    5854:	681b      	ldr	r3, [r3, #0]
    5856:	469a      	mov	sl, r3
    5858:	2b00      	cmp	r3, #0
    585a:	db36      	blt.n	58ca <_svfprintf_r+0x15f2>
    585c:	784b      	ldrb	r3, [r1, #1]
    585e:	920f      	str	r2, [sp, #60]	; 0x3c
    5860:	4659      	mov	r1, fp
    5862:	f7fe fd9d 	bl	43a0 <_svfprintf_r+0xc8>
    5866:	4653      	mov	r3, sl
    5868:	2b00      	cmp	r3, #0
    586a:	d101      	bne.n	5870 <_svfprintf_r+0x1598>
    586c:	07e3      	lsls	r3, r4, #31
    586e:	d503      	bpl.n	5878 <_svfprintf_r+0x15a0>
    5870:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5872:	1c58      	adds	r0, r3, #1
    5874:	0003      	movs	r3, r0
    5876:	e7bb      	b.n	57f0 <_svfprintf_r+0x1518>
    5878:	2301      	movs	r3, #1
    587a:	e725      	b.n	56c8 <_svfprintf_r+0x13f0>
    587c:	ab16      	add	r3, sp, #88	; 0x58
    587e:	77d8      	strb	r0, [r3, #31]
    5880:	f7fe ff6c 	bl	475c <_svfprintf_r+0x484>
    5884:	ab16      	add	r3, sp, #88	; 0x58
    5886:	77d8      	strb	r0, [r3, #31]
    5888:	f7ff f814 	bl	48b4 <_svfprintf_r+0x5dc>
    588c:	230c      	movs	r3, #12
    588e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    5890:	6013      	str	r3, [r2, #0]
    5892:	3b0d      	subs	r3, #13
    5894:	930a      	str	r3, [sp, #40]	; 0x28
    5896:	f7fe fdac 	bl	43f2 <_svfprintf_r+0x11a>
    589a:	aa16      	add	r2, sp, #88	; 0x58
    589c:	232e      	movs	r3, #46	; 0x2e
    589e:	4694      	mov	ip, r2
    58a0:	4463      	add	r3, ip
    58a2:	e65c      	b.n	555e <_svfprintf_r+0x1286>
    58a4:	ab16      	add	r3, sp, #88	; 0x58
    58a6:	77d8      	strb	r0, [r3, #31]
    58a8:	f7fe fe85 	bl	45b6 <_svfprintf_r+0x2de>
    58ac:	ab16      	add	r3, sp, #88	; 0x58
    58ae:	77d8      	strb	r0, [r3, #31]
    58b0:	f7fe fddd 	bl	446e <_svfprintf_r+0x196>
    58b4:	ab16      	add	r3, sp, #88	; 0x58
    58b6:	77d8      	strb	r0, [r3, #31]
    58b8:	f7ff f87d 	bl	49b6 <_svfprintf_r+0x6de>
    58bc:	4805      	ldr	r0, [pc, #20]	; (58d4 <_svfprintf_r+0x15fc>)
    58be:	4681      	mov	r9, r0
    58c0:	e76d      	b.n	579e <_svfprintf_r+0x14c6>
    58c2:	ab16      	add	r3, sp, #88	; 0x58
    58c4:	77d8      	strb	r0, [r3, #31]
    58c6:	f7fe ff79 	bl	47bc <_svfprintf_r+0x4e4>
    58ca:	2301      	movs	r3, #1
    58cc:	425b      	negs	r3, r3
    58ce:	469a      	mov	sl, r3
    58d0:	e7c4      	b.n	585c <_svfprintf_r+0x1584>
    58d2:	46c0      	nop			; (mov r8, r8)
    58d4:	00008af4 	.word	0x00008af4
    58d8:	00008aa8 	.word	0x00008aa8
    58dc:	00008aac 	.word	0x00008aac

000058e0 <__register_exitproc>:
    58e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    58e2:	464e      	mov	r6, r9
    58e4:	4645      	mov	r5, r8
    58e6:	46de      	mov	lr, fp
    58e8:	4657      	mov	r7, sl
    58ea:	b5e0      	push	{r5, r6, r7, lr}
    58ec:	4d36      	ldr	r5, [pc, #216]	; (59c8 <__register_exitproc+0xe8>)
    58ee:	b083      	sub	sp, #12
    58f0:	0006      	movs	r6, r0
    58f2:	6828      	ldr	r0, [r5, #0]
    58f4:	4698      	mov	r8, r3
    58f6:	000f      	movs	r7, r1
    58f8:	4691      	mov	r9, r2
    58fa:	f7fe fce9 	bl	42d0 <__retarget_lock_acquire_recursive>
    58fe:	4b33      	ldr	r3, [pc, #204]	; (59cc <__register_exitproc+0xec>)
    5900:	681c      	ldr	r4, [r3, #0]
    5902:	23a4      	movs	r3, #164	; 0xa4
    5904:	005b      	lsls	r3, r3, #1
    5906:	58e0      	ldr	r0, [r4, r3]
    5908:	2800      	cmp	r0, #0
    590a:	d052      	beq.n	59b2 <__register_exitproc+0xd2>
    590c:	6843      	ldr	r3, [r0, #4]
    590e:	2b1f      	cmp	r3, #31
    5910:	dc13      	bgt.n	593a <__register_exitproc+0x5a>
    5912:	1c5a      	adds	r2, r3, #1
    5914:	9201      	str	r2, [sp, #4]
    5916:	2e00      	cmp	r6, #0
    5918:	d128      	bne.n	596c <__register_exitproc+0x8c>
    591a:	9a01      	ldr	r2, [sp, #4]
    591c:	3302      	adds	r3, #2
    591e:	009b      	lsls	r3, r3, #2
    5920:	6042      	str	r2, [r0, #4]
    5922:	501f      	str	r7, [r3, r0]
    5924:	6828      	ldr	r0, [r5, #0]
    5926:	f7fe fcd5 	bl	42d4 <__retarget_lock_release_recursive>
    592a:	2000      	movs	r0, #0
    592c:	b003      	add	sp, #12
    592e:	bc3c      	pop	{r2, r3, r4, r5}
    5930:	4690      	mov	r8, r2
    5932:	4699      	mov	r9, r3
    5934:	46a2      	mov	sl, r4
    5936:	46ab      	mov	fp, r5
    5938:	bdf0      	pop	{r4, r5, r6, r7, pc}
    593a:	4b25      	ldr	r3, [pc, #148]	; (59d0 <__register_exitproc+0xf0>)
    593c:	2b00      	cmp	r3, #0
    593e:	d03d      	beq.n	59bc <__register_exitproc+0xdc>
    5940:	20c8      	movs	r0, #200	; 0xc8
    5942:	0040      	lsls	r0, r0, #1
    5944:	e000      	b.n	5948 <__register_exitproc+0x68>
    5946:	bf00      	nop
    5948:	2800      	cmp	r0, #0
    594a:	d037      	beq.n	59bc <__register_exitproc+0xdc>
    594c:	22a4      	movs	r2, #164	; 0xa4
    594e:	2300      	movs	r3, #0
    5950:	0052      	lsls	r2, r2, #1
    5952:	58a1      	ldr	r1, [r4, r2]
    5954:	6043      	str	r3, [r0, #4]
    5956:	6001      	str	r1, [r0, #0]
    5958:	50a0      	str	r0, [r4, r2]
    595a:	3240      	adds	r2, #64	; 0x40
    595c:	5083      	str	r3, [r0, r2]
    595e:	3204      	adds	r2, #4
    5960:	5083      	str	r3, [r0, r2]
    5962:	3301      	adds	r3, #1
    5964:	9301      	str	r3, [sp, #4]
    5966:	2300      	movs	r3, #0
    5968:	2e00      	cmp	r6, #0
    596a:	d0d6      	beq.n	591a <__register_exitproc+0x3a>
    596c:	009a      	lsls	r2, r3, #2
    596e:	4692      	mov	sl, r2
    5970:	4482      	add	sl, r0
    5972:	464a      	mov	r2, r9
    5974:	2188      	movs	r1, #136	; 0x88
    5976:	4654      	mov	r4, sl
    5978:	5062      	str	r2, [r4, r1]
    597a:	22c4      	movs	r2, #196	; 0xc4
    597c:	0052      	lsls	r2, r2, #1
    597e:	4691      	mov	r9, r2
    5980:	4481      	add	r9, r0
    5982:	464a      	mov	r2, r9
    5984:	3987      	subs	r1, #135	; 0x87
    5986:	4099      	lsls	r1, r3
    5988:	6812      	ldr	r2, [r2, #0]
    598a:	468b      	mov	fp, r1
    598c:	430a      	orrs	r2, r1
    598e:	4694      	mov	ip, r2
    5990:	464a      	mov	r2, r9
    5992:	4661      	mov	r1, ip
    5994:	6011      	str	r1, [r2, #0]
    5996:	2284      	movs	r2, #132	; 0x84
    5998:	4641      	mov	r1, r8
    599a:	0052      	lsls	r2, r2, #1
    599c:	50a1      	str	r1, [r4, r2]
    599e:	2e02      	cmp	r6, #2
    59a0:	d1bb      	bne.n	591a <__register_exitproc+0x3a>
    59a2:	0002      	movs	r2, r0
    59a4:	465c      	mov	r4, fp
    59a6:	328d      	adds	r2, #141	; 0x8d
    59a8:	32ff      	adds	r2, #255	; 0xff
    59aa:	6811      	ldr	r1, [r2, #0]
    59ac:	430c      	orrs	r4, r1
    59ae:	6014      	str	r4, [r2, #0]
    59b0:	e7b3      	b.n	591a <__register_exitproc+0x3a>
    59b2:	0020      	movs	r0, r4
    59b4:	304d      	adds	r0, #77	; 0x4d
    59b6:	30ff      	adds	r0, #255	; 0xff
    59b8:	50e0      	str	r0, [r4, r3]
    59ba:	e7a7      	b.n	590c <__register_exitproc+0x2c>
    59bc:	6828      	ldr	r0, [r5, #0]
    59be:	f7fe fc89 	bl	42d4 <__retarget_lock_release_recursive>
    59c2:	2001      	movs	r0, #1
    59c4:	4240      	negs	r0, r0
    59c6:	e7b1      	b.n	592c <__register_exitproc+0x4c>
    59c8:	20000440 	.word	0x20000440
    59cc:	00008938 	.word	0x00008938
    59d0:	00000000 	.word	0x00000000

000059d4 <quorem>:
    59d4:	b5f0      	push	{r4, r5, r6, r7, lr}
    59d6:	4645      	mov	r5, r8
    59d8:	4680      	mov	r8, r0
    59da:	46de      	mov	lr, fp
    59dc:	4657      	mov	r7, sl
    59de:	464e      	mov	r6, r9
    59e0:	4642      	mov	r2, r8
    59e2:	b5e0      	push	{r5, r6, r7, lr}
    59e4:	690c      	ldr	r4, [r1, #16]
    59e6:	6912      	ldr	r2, [r2, #16]
    59e8:	b085      	sub	sp, #20
    59ea:	000b      	movs	r3, r1
    59ec:	9102      	str	r1, [sp, #8]
    59ee:	2000      	movs	r0, #0
    59f0:	4294      	cmp	r4, r2
    59f2:	dd00      	ble.n	59f6 <quorem+0x22>
    59f4:	e090      	b.n	5b18 <quorem+0x144>
    59f6:	2214      	movs	r2, #20
    59f8:	4694      	mov	ip, r2
    59fa:	4463      	add	r3, ip
    59fc:	4699      	mov	r9, r3
    59fe:	464a      	mov	r2, r9
    5a00:	3c01      	subs	r4, #1
    5a02:	00a3      	lsls	r3, r4, #2
    5a04:	18d6      	adds	r6, r2, r3
    5a06:	2214      	movs	r2, #20
    5a08:	4442      	add	r2, r8
    5a0a:	4693      	mov	fp, r2
    5a0c:	449b      	add	fp, r3
    5a0e:	6833      	ldr	r3, [r6, #0]
    5a10:	0015      	movs	r5, r2
    5a12:	1c59      	adds	r1, r3, #1
    5a14:	465b      	mov	r3, fp
    5a16:	6818      	ldr	r0, [r3, #0]
    5a18:	9201      	str	r2, [sp, #4]
    5a1a:	f7fc fe0b 	bl	2634 <__udivsi3>
    5a1e:	1e03      	subs	r3, r0, #0
    5a20:	9000      	str	r0, [sp, #0]
    5a22:	d042      	beq.n	5aaa <quorem+0xd6>
    5a24:	0029      	movs	r1, r5
    5a26:	2700      	movs	r7, #0
    5a28:	464d      	mov	r5, r9
    5a2a:	2000      	movs	r0, #0
    5a2c:	46b1      	mov	r9, r6
    5a2e:	46a2      	mov	sl, r4
    5a30:	003e      	movs	r6, r7
    5a32:	0004      	movs	r4, r0
    5a34:	469c      	mov	ip, r3
    5a36:	002f      	movs	r7, r5
    5a38:	0008      	movs	r0, r1
    5a3a:	9503      	str	r5, [sp, #12]
    5a3c:	4663      	mov	r3, ip
    5a3e:	cf04      	ldmia	r7!, {r2}
    5a40:	0415      	lsls	r5, r2, #16
    5a42:	0c2d      	lsrs	r5, r5, #16
    5a44:	435d      	muls	r5, r3
    5a46:	0c12      	lsrs	r2, r2, #16
    5a48:	435a      	muls	r2, r3
    5a4a:	19ad      	adds	r5, r5, r6
    5a4c:	0c2b      	lsrs	r3, r5, #16
    5a4e:	18d2      	adds	r2, r2, r3
    5a50:	6803      	ldr	r3, [r0, #0]
    5a52:	042d      	lsls	r5, r5, #16
    5a54:	0419      	lsls	r1, r3, #16
    5a56:	0c09      	lsrs	r1, r1, #16
    5a58:	1909      	adds	r1, r1, r4
    5a5a:	0c16      	lsrs	r6, r2, #16
    5a5c:	0c2d      	lsrs	r5, r5, #16
    5a5e:	0412      	lsls	r2, r2, #16
    5a60:	1b49      	subs	r1, r1, r5
    5a62:	0c12      	lsrs	r2, r2, #16
    5a64:	0c1b      	lsrs	r3, r3, #16
    5a66:	1a9b      	subs	r3, r3, r2
    5a68:	140a      	asrs	r2, r1, #16
    5a6a:	189b      	adds	r3, r3, r2
    5a6c:	0409      	lsls	r1, r1, #16
    5a6e:	141c      	asrs	r4, r3, #16
    5a70:	0c09      	lsrs	r1, r1, #16
    5a72:	041b      	lsls	r3, r3, #16
    5a74:	4319      	orrs	r1, r3
    5a76:	c002      	stmia	r0!, {r1}
    5a78:	45b9      	cmp	r9, r7
    5a7a:	d2df      	bcs.n	5a3c <quorem+0x68>
    5a7c:	9b03      	ldr	r3, [sp, #12]
    5a7e:	464e      	mov	r6, r9
    5a80:	4699      	mov	r9, r3
    5a82:	465b      	mov	r3, fp
    5a84:	681b      	ldr	r3, [r3, #0]
    5a86:	4654      	mov	r4, sl
    5a88:	2b00      	cmp	r3, #0
    5a8a:	d10e      	bne.n	5aaa <quorem+0xd6>
    5a8c:	465b      	mov	r3, fp
    5a8e:	9a01      	ldr	r2, [sp, #4]
    5a90:	3b04      	subs	r3, #4
    5a92:	429a      	cmp	r2, r3
    5a94:	d304      	bcc.n	5aa0 <quorem+0xcc>
    5a96:	e006      	b.n	5aa6 <quorem+0xd2>
    5a98:	3b04      	subs	r3, #4
    5a9a:	3c01      	subs	r4, #1
    5a9c:	429a      	cmp	r2, r3
    5a9e:	d202      	bcs.n	5aa6 <quorem+0xd2>
    5aa0:	6819      	ldr	r1, [r3, #0]
    5aa2:	2900      	cmp	r1, #0
    5aa4:	d0f8      	beq.n	5a98 <quorem+0xc4>
    5aa6:	4643      	mov	r3, r8
    5aa8:	611c      	str	r4, [r3, #16]
    5aaa:	9902      	ldr	r1, [sp, #8]
    5aac:	4640      	mov	r0, r8
    5aae:	f001 fd45 	bl	753c <__mcmp>
    5ab2:	2800      	cmp	r0, #0
    5ab4:	db2f      	blt.n	5b16 <quorem+0x142>
    5ab6:	464f      	mov	r7, r9
    5ab8:	2000      	movs	r0, #0
    5aba:	9b00      	ldr	r3, [sp, #0]
    5abc:	9d01      	ldr	r5, [sp, #4]
    5abe:	3301      	adds	r3, #1
    5ac0:	9300      	str	r3, [sp, #0]
    5ac2:	682b      	ldr	r3, [r5, #0]
    5ac4:	cf02      	ldmia	r7!, {r1}
    5ac6:	041a      	lsls	r2, r3, #16
    5ac8:	0c12      	lsrs	r2, r2, #16
    5aca:	1810      	adds	r0, r2, r0
    5acc:	040a      	lsls	r2, r1, #16
    5ace:	0c12      	lsrs	r2, r2, #16
    5ad0:	1a82      	subs	r2, r0, r2
    5ad2:	0c09      	lsrs	r1, r1, #16
    5ad4:	0c1b      	lsrs	r3, r3, #16
    5ad6:	1a5b      	subs	r3, r3, r1
    5ad8:	1411      	asrs	r1, r2, #16
    5ada:	185b      	adds	r3, r3, r1
    5adc:	0412      	lsls	r2, r2, #16
    5ade:	1418      	asrs	r0, r3, #16
    5ae0:	0c12      	lsrs	r2, r2, #16
    5ae2:	041b      	lsls	r3, r3, #16
    5ae4:	4313      	orrs	r3, r2
    5ae6:	c508      	stmia	r5!, {r3}
    5ae8:	42be      	cmp	r6, r7
    5aea:	d2ea      	bcs.n	5ac2 <quorem+0xee>
    5aec:	9901      	ldr	r1, [sp, #4]
    5aee:	00a3      	lsls	r3, r4, #2
    5af0:	468c      	mov	ip, r1
    5af2:	4463      	add	r3, ip
    5af4:	681a      	ldr	r2, [r3, #0]
    5af6:	2a00      	cmp	r2, #0
    5af8:	d10d      	bne.n	5b16 <quorem+0x142>
    5afa:	3b04      	subs	r3, #4
    5afc:	000a      	movs	r2, r1
    5afe:	4299      	cmp	r1, r3
    5b00:	d304      	bcc.n	5b0c <quorem+0x138>
    5b02:	e006      	b.n	5b12 <quorem+0x13e>
    5b04:	3b04      	subs	r3, #4
    5b06:	3c01      	subs	r4, #1
    5b08:	429a      	cmp	r2, r3
    5b0a:	d202      	bcs.n	5b12 <quorem+0x13e>
    5b0c:	6819      	ldr	r1, [r3, #0]
    5b0e:	2900      	cmp	r1, #0
    5b10:	d0f8      	beq.n	5b04 <quorem+0x130>
    5b12:	4643      	mov	r3, r8
    5b14:	611c      	str	r4, [r3, #16]
    5b16:	9800      	ldr	r0, [sp, #0]
    5b18:	b005      	add	sp, #20
    5b1a:	bc3c      	pop	{r2, r3, r4, r5}
    5b1c:	4690      	mov	r8, r2
    5b1e:	4699      	mov	r9, r3
    5b20:	46a2      	mov	sl, r4
    5b22:	46ab      	mov	fp, r5
    5b24:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5b26:	46c0      	nop			; (mov r8, r8)

00005b28 <_dtoa_r>:
    5b28:	b5f0      	push	{r4, r5, r6, r7, lr}
    5b2a:	4657      	mov	r7, sl
    5b2c:	464e      	mov	r6, r9
    5b2e:	4645      	mov	r5, r8
    5b30:	46de      	mov	lr, fp
    5b32:	b5e0      	push	{r5, r6, r7, lr}
    5b34:	6c01      	ldr	r1, [r0, #64]	; 0x40
    5b36:	b099      	sub	sp, #100	; 0x64
    5b38:	4682      	mov	sl, r0
    5b3a:	001d      	movs	r5, r3
    5b3c:	0016      	movs	r6, r2
    5b3e:	001f      	movs	r7, r3
    5b40:	2900      	cmp	r1, #0
    5b42:	d009      	beq.n	5b58 <_dtoa_r+0x30>
    5b44:	2301      	movs	r3, #1
    5b46:	6c42      	ldr	r2, [r0, #68]	; 0x44
    5b48:	4093      	lsls	r3, r2
    5b4a:	604a      	str	r2, [r1, #4]
    5b4c:	608b      	str	r3, [r1, #8]
    5b4e:	f001 fae9 	bl	7124 <_Bfree>
    5b52:	2300      	movs	r3, #0
    5b54:	4652      	mov	r2, sl
    5b56:	6413      	str	r3, [r2, #64]	; 0x40
    5b58:	46b8      	mov	r8, r7
    5b5a:	2f00      	cmp	r7, #0
    5b5c:	db37      	blt.n	5bce <_dtoa_r+0xa6>
    5b5e:	2300      	movs	r3, #0
    5b60:	9a25      	ldr	r2, [sp, #148]	; 0x94
    5b62:	6013      	str	r3, [r2, #0]
    5b64:	4642      	mov	r2, r8
    5b66:	4bd6      	ldr	r3, [pc, #856]	; (5ec0 <_dtoa_r+0x398>)
    5b68:	401a      	ands	r2, r3
    5b6a:	429a      	cmp	r2, r3
    5b6c:	d018      	beq.n	5ba0 <_dtoa_r+0x78>
    5b6e:	2200      	movs	r2, #0
    5b70:	2300      	movs	r3, #0
    5b72:	0030      	movs	r0, r6
    5b74:	0039      	movs	r1, r7
    5b76:	f002 fb1d 	bl	81b4 <__aeabi_dcmpeq>
    5b7a:	2800      	cmp	r0, #0
    5b7c:	d02f      	beq.n	5bde <_dtoa_r+0xb6>
    5b7e:	2301      	movs	r3, #1
    5b80:	9a24      	ldr	r2, [sp, #144]	; 0x90
    5b82:	6013      	str	r3, [r2, #0]
    5b84:	9b26      	ldr	r3, [sp, #152]	; 0x98
    5b86:	2b00      	cmp	r3, #0
    5b88:	d100      	bne.n	5b8c <_dtoa_r+0x64>
    5b8a:	e22a      	b.n	5fe2 <_dtoa_r+0x4ba>
    5b8c:	48cd      	ldr	r0, [pc, #820]	; (5ec4 <_dtoa_r+0x39c>)
    5b8e:	6018      	str	r0, [r3, #0]
    5b90:	3801      	subs	r0, #1
    5b92:	b019      	add	sp, #100	; 0x64
    5b94:	bc3c      	pop	{r2, r3, r4, r5}
    5b96:	4690      	mov	r8, r2
    5b98:	4699      	mov	r9, r3
    5b9a:	46a2      	mov	sl, r4
    5b9c:	46ab      	mov	fp, r5
    5b9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5ba0:	4bc9      	ldr	r3, [pc, #804]	; (5ec8 <_dtoa_r+0x3a0>)
    5ba2:	9a24      	ldr	r2, [sp, #144]	; 0x90
    5ba4:	6013      	str	r3, [r2, #0]
    5ba6:	2e00      	cmp	r6, #0
    5ba8:	d10b      	bne.n	5bc2 <_dtoa_r+0x9a>
    5baa:	4643      	mov	r3, r8
    5bac:	0318      	lsls	r0, r3, #12
    5bae:	d108      	bne.n	5bc2 <_dtoa_r+0x9a>
    5bb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
    5bb2:	48c6      	ldr	r0, [pc, #792]	; (5ecc <_dtoa_r+0x3a4>)
    5bb4:	2b00      	cmp	r3, #0
    5bb6:	d0ec      	beq.n	5b92 <_dtoa_r+0x6a>
    5bb8:	0003      	movs	r3, r0
    5bba:	3308      	adds	r3, #8
    5bbc:	9a26      	ldr	r2, [sp, #152]	; 0x98
    5bbe:	6013      	str	r3, [r2, #0]
    5bc0:	e7e7      	b.n	5b92 <_dtoa_r+0x6a>
    5bc2:	9b26      	ldr	r3, [sp, #152]	; 0x98
    5bc4:	48c2      	ldr	r0, [pc, #776]	; (5ed0 <_dtoa_r+0x3a8>)
    5bc6:	2b00      	cmp	r3, #0
    5bc8:	d0e3      	beq.n	5b92 <_dtoa_r+0x6a>
    5bca:	1cc3      	adds	r3, r0, #3
    5bcc:	e7f6      	b.n	5bbc <_dtoa_r+0x94>
    5bce:	2301      	movs	r3, #1
    5bd0:	9a25      	ldr	r2, [sp, #148]	; 0x94
    5bd2:	0068      	lsls	r0, r5, #1
    5bd4:	6013      	str	r3, [r2, #0]
    5bd6:	0843      	lsrs	r3, r0, #1
    5bd8:	4698      	mov	r8, r3
    5bda:	001f      	movs	r7, r3
    5bdc:	e7c2      	b.n	5b64 <_dtoa_r+0x3c>
    5bde:	ab16      	add	r3, sp, #88	; 0x58
    5be0:	9301      	str	r3, [sp, #4]
    5be2:	ab17      	add	r3, sp, #92	; 0x5c
    5be4:	9300      	str	r3, [sp, #0]
    5be6:	0032      	movs	r2, r6
    5be8:	003b      	movs	r3, r7
    5bea:	4650      	mov	r0, sl
    5bec:	f001 fd5c 	bl	76a8 <__d2b>
    5bf0:	4643      	mov	r3, r8
    5bf2:	4683      	mov	fp, r0
    5bf4:	0d1a      	lsrs	r2, r3, #20
    5bf6:	d100      	bne.n	5bfa <_dtoa_r+0xd2>
    5bf8:	e1d6      	b.n	5fa8 <_dtoa_r+0x480>
    5bfa:	033b      	lsls	r3, r7, #12
    5bfc:	4cb5      	ldr	r4, [pc, #724]	; (5ed4 <_dtoa_r+0x3ac>)
    5bfe:	0b1b      	lsrs	r3, r3, #12
    5c00:	431c      	orrs	r4, r3
    5c02:	4bb5      	ldr	r3, [pc, #724]	; (5ed8 <_dtoa_r+0x3b0>)
    5c04:	0030      	movs	r0, r6
    5c06:	4698      	mov	r8, r3
    5c08:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5c0a:	0021      	movs	r1, r4
    5c0c:	4699      	mov	r9, r3
    5c0e:	2300      	movs	r3, #0
    5c10:	4490      	add	r8, r2
    5c12:	930f      	str	r3, [sp, #60]	; 0x3c
    5c14:	2200      	movs	r2, #0
    5c16:	4bb1      	ldr	r3, [pc, #708]	; (5edc <_dtoa_r+0x3b4>)
    5c18:	f7fd fe86 	bl	3928 <__aeabi_dsub>
    5c1c:	4ab0      	ldr	r2, [pc, #704]	; (5ee0 <_dtoa_r+0x3b8>)
    5c1e:	4bb1      	ldr	r3, [pc, #708]	; (5ee4 <_dtoa_r+0x3bc>)
    5c20:	f7fd fc02 	bl	3428 <__aeabi_dmul>
    5c24:	4ab0      	ldr	r2, [pc, #704]	; (5ee8 <_dtoa_r+0x3c0>)
    5c26:	4bb1      	ldr	r3, [pc, #708]	; (5eec <_dtoa_r+0x3c4>)
    5c28:	f7fc fdba 	bl	27a0 <__aeabi_dadd>
    5c2c:	0004      	movs	r4, r0
    5c2e:	4640      	mov	r0, r8
    5c30:	000d      	movs	r5, r1
    5c32:	f002 fced 	bl	8610 <__aeabi_i2d>
    5c36:	4aae      	ldr	r2, [pc, #696]	; (5ef0 <_dtoa_r+0x3c8>)
    5c38:	4bae      	ldr	r3, [pc, #696]	; (5ef4 <_dtoa_r+0x3cc>)
    5c3a:	f7fd fbf5 	bl	3428 <__aeabi_dmul>
    5c3e:	0002      	movs	r2, r0
    5c40:	000b      	movs	r3, r1
    5c42:	0020      	movs	r0, r4
    5c44:	0029      	movs	r1, r5
    5c46:	f7fc fdab 	bl	27a0 <__aeabi_dadd>
    5c4a:	0004      	movs	r4, r0
    5c4c:	000d      	movs	r5, r1
    5c4e:	f7fe f981 	bl	3f54 <__aeabi_d2iz>
    5c52:	2200      	movs	r2, #0
    5c54:	9003      	str	r0, [sp, #12]
    5c56:	2300      	movs	r3, #0
    5c58:	0020      	movs	r0, r4
    5c5a:	0029      	movs	r1, r5
    5c5c:	f002 fab0 	bl	81c0 <__aeabi_dcmplt>
    5c60:	2800      	cmp	r0, #0
    5c62:	d000      	beq.n	5c66 <_dtoa_r+0x13e>
    5c64:	e2b1      	b.n	61ca <_dtoa_r+0x6a2>
    5c66:	2301      	movs	r3, #1
    5c68:	9c03      	ldr	r4, [sp, #12]
    5c6a:	930c      	str	r3, [sp, #48]	; 0x30
    5c6c:	2c16      	cmp	r4, #22
    5c6e:	d810      	bhi.n	5c92 <_dtoa_r+0x16a>
    5c70:	49a1      	ldr	r1, [pc, #644]	; (5ef8 <_dtoa_r+0x3d0>)
    5c72:	00e3      	lsls	r3, r4, #3
    5c74:	18c9      	adds	r1, r1, r3
    5c76:	0032      	movs	r2, r6
    5c78:	6808      	ldr	r0, [r1, #0]
    5c7a:	6849      	ldr	r1, [r1, #4]
    5c7c:	003b      	movs	r3, r7
    5c7e:	f002 fab3 	bl	81e8 <__aeabi_dcmpgt>
    5c82:	2800      	cmp	r0, #0
    5c84:	d100      	bne.n	5c88 <_dtoa_r+0x160>
    5c86:	e31d      	b.n	62c4 <_dtoa_r+0x79c>
    5c88:	0023      	movs	r3, r4
    5c8a:	3b01      	subs	r3, #1
    5c8c:	9303      	str	r3, [sp, #12]
    5c8e:	2300      	movs	r3, #0
    5c90:	930c      	str	r3, [sp, #48]	; 0x30
    5c92:	464b      	mov	r3, r9
    5c94:	4642      	mov	r2, r8
    5c96:	1a9a      	subs	r2, r3, r2
    5c98:	2300      	movs	r3, #0
    5c9a:	9306      	str	r3, [sp, #24]
    5c9c:	0013      	movs	r3, r2
    5c9e:	3b01      	subs	r3, #1
    5ca0:	9304      	str	r3, [sp, #16]
    5ca2:	d500      	bpl.n	5ca6 <_dtoa_r+0x17e>
    5ca4:	e2a1      	b.n	61ea <_dtoa_r+0x6c2>
    5ca6:	9b03      	ldr	r3, [sp, #12]
    5ca8:	2b00      	cmp	r3, #0
    5caa:	da00      	bge.n	5cae <_dtoa_r+0x186>
    5cac:	e284      	b.n	61b8 <_dtoa_r+0x690>
    5cae:	469c      	mov	ip, r3
    5cb0:	930d      	str	r3, [sp, #52]	; 0x34
    5cb2:	2300      	movs	r3, #0
    5cb4:	9a04      	ldr	r2, [sp, #16]
    5cb6:	4699      	mov	r9, r3
    5cb8:	0011      	movs	r1, r2
    5cba:	4461      	add	r1, ip
    5cbc:	9104      	str	r1, [sp, #16]
    5cbe:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5cc0:	2b09      	cmp	r3, #9
    5cc2:	d900      	bls.n	5cc6 <_dtoa_r+0x19e>
    5cc4:	e18f      	b.n	5fe6 <_dtoa_r+0x4be>
    5cc6:	2401      	movs	r4, #1
    5cc8:	2b05      	cmp	r3, #5
    5cca:	dd02      	ble.n	5cd2 <_dtoa_r+0x1aa>
    5ccc:	2400      	movs	r4, #0
    5cce:	3b04      	subs	r3, #4
    5cd0:	9322      	str	r3, [sp, #136]	; 0x88
    5cd2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5cd4:	2b03      	cmp	r3, #3
    5cd6:	d101      	bne.n	5cdc <_dtoa_r+0x1b4>
    5cd8:	f000 fcce 	bl	6678 <_dtoa_r+0xb50>
    5cdc:	dc01      	bgt.n	5ce2 <_dtoa_r+0x1ba>
    5cde:	f000 fc92 	bl	6606 <_dtoa_r+0xade>
    5ce2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5ce4:	2b04      	cmp	r3, #4
    5ce6:	d101      	bne.n	5cec <_dtoa_r+0x1c4>
    5ce8:	f000 fc40 	bl	656c <_dtoa_r+0xa44>
    5cec:	2301      	movs	r3, #1
    5cee:	930b      	str	r3, [sp, #44]	; 0x2c
    5cf0:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5cf2:	2b05      	cmp	r3, #5
    5cf4:	d001      	beq.n	5cfa <_dtoa_r+0x1d2>
    5cf6:	f000 fc8b 	bl	6610 <_dtoa_r+0xae8>
    5cfa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    5cfc:	9b03      	ldr	r3, [sp, #12]
    5cfe:	4694      	mov	ip, r2
    5d00:	4463      	add	r3, ip
    5d02:	930e      	str	r3, [sp, #56]	; 0x38
    5d04:	3301      	adds	r3, #1
    5d06:	9307      	str	r3, [sp, #28]
    5d08:	1e1d      	subs	r5, r3, #0
    5d0a:	dc01      	bgt.n	5d10 <_dtoa_r+0x1e8>
    5d0c:	f000 fd49 	bl	67a2 <_dtoa_r+0xc7a>
    5d10:	9b07      	ldr	r3, [sp, #28]
    5d12:	4698      	mov	r8, r3
    5d14:	2300      	movs	r3, #0
    5d16:	4652      	mov	r2, sl
    5d18:	2100      	movs	r1, #0
    5d1a:	6453      	str	r3, [r2, #68]	; 0x44
    5d1c:	2d17      	cmp	r5, #23
    5d1e:	d90a      	bls.n	5d36 <_dtoa_r+0x20e>
    5d20:	2201      	movs	r2, #1
    5d22:	3304      	adds	r3, #4
    5d24:	005b      	lsls	r3, r3, #1
    5d26:	0018      	movs	r0, r3
    5d28:	3014      	adds	r0, #20
    5d2a:	0011      	movs	r1, r2
    5d2c:	3201      	adds	r2, #1
    5d2e:	4285      	cmp	r5, r0
    5d30:	d2f8      	bcs.n	5d24 <_dtoa_r+0x1fc>
    5d32:	4653      	mov	r3, sl
    5d34:	6459      	str	r1, [r3, #68]	; 0x44
    5d36:	4650      	mov	r0, sl
    5d38:	f001 f9cc 	bl	70d4 <_Balloc>
    5d3c:	4653      	mov	r3, sl
    5d3e:	6418      	str	r0, [r3, #64]	; 0x40
    5d40:	4643      	mov	r3, r8
    5d42:	900a      	str	r0, [sp, #40]	; 0x28
    5d44:	2b0e      	cmp	r3, #14
    5d46:	d900      	bls.n	5d4a <_dtoa_r+0x222>
    5d48:	e161      	b.n	600e <_dtoa_r+0x4e6>
    5d4a:	2c00      	cmp	r4, #0
    5d4c:	d100      	bne.n	5d50 <_dtoa_r+0x228>
    5d4e:	e15e      	b.n	600e <_dtoa_r+0x4e6>
    5d50:	9610      	str	r6, [sp, #64]	; 0x40
    5d52:	9711      	str	r7, [sp, #68]	; 0x44
    5d54:	9e03      	ldr	r6, [sp, #12]
    5d56:	2e00      	cmp	r6, #0
    5d58:	dc01      	bgt.n	5d5e <_dtoa_r+0x236>
    5d5a:	f000 fd25 	bl	67a8 <_dtoa_r+0xc80>
    5d5e:	0032      	movs	r2, r6
    5d60:	210f      	movs	r1, #15
    5d62:	4b65      	ldr	r3, [pc, #404]	; (5ef8 <_dtoa_r+0x3d0>)
    5d64:	400a      	ands	r2, r1
    5d66:	00d2      	lsls	r2, r2, #3
    5d68:	189b      	adds	r3, r3, r2
    5d6a:	1136      	asrs	r6, r6, #4
    5d6c:	681c      	ldr	r4, [r3, #0]
    5d6e:	685d      	ldr	r5, [r3, #4]
    5d70:	06f3      	lsls	r3, r6, #27
    5d72:	d401      	bmi.n	5d78 <_dtoa_r+0x250>
    5d74:	f000 fcca 	bl	670c <_dtoa_r+0xbe4>
    5d78:	4b60      	ldr	r3, [pc, #384]	; (5efc <_dtoa_r+0x3d4>)
    5d7a:	400e      	ands	r6, r1
    5d7c:	6a1a      	ldr	r2, [r3, #32]
    5d7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    5d80:	9810      	ldr	r0, [sp, #64]	; 0x40
    5d82:	9911      	ldr	r1, [sp, #68]	; 0x44
    5d84:	f7fd f81c 	bl	2dc0 <__aeabi_ddiv>
    5d88:	2303      	movs	r3, #3
    5d8a:	4698      	mov	r8, r3
    5d8c:	9008      	str	r0, [sp, #32]
    5d8e:	9109      	str	r1, [sp, #36]	; 0x24
    5d90:	2e00      	cmp	r6, #0
    5d92:	d011      	beq.n	5db8 <_dtoa_r+0x290>
    5d94:	4f59      	ldr	r7, [pc, #356]	; (5efc <_dtoa_r+0x3d4>)
    5d96:	2301      	movs	r3, #1
    5d98:	4233      	tst	r3, r6
    5d9a:	d009      	beq.n	5db0 <_dtoa_r+0x288>
    5d9c:	469c      	mov	ip, r3
    5d9e:	683a      	ldr	r2, [r7, #0]
    5da0:	687b      	ldr	r3, [r7, #4]
    5da2:	0020      	movs	r0, r4
    5da4:	0029      	movs	r1, r5
    5da6:	44e0      	add	r8, ip
    5da8:	f7fd fb3e 	bl	3428 <__aeabi_dmul>
    5dac:	0004      	movs	r4, r0
    5dae:	000d      	movs	r5, r1
    5db0:	1076      	asrs	r6, r6, #1
    5db2:	3708      	adds	r7, #8
    5db4:	2e00      	cmp	r6, #0
    5db6:	d1ee      	bne.n	5d96 <_dtoa_r+0x26e>
    5db8:	0022      	movs	r2, r4
    5dba:	9808      	ldr	r0, [sp, #32]
    5dbc:	9909      	ldr	r1, [sp, #36]	; 0x24
    5dbe:	002b      	movs	r3, r5
    5dc0:	f7fc fffe 	bl	2dc0 <__aeabi_ddiv>
    5dc4:	0006      	movs	r6, r0
    5dc6:	000f      	movs	r7, r1
    5dc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5dca:	2b00      	cmp	r3, #0
    5dcc:	d009      	beq.n	5de2 <_dtoa_r+0x2ba>
    5dce:	2200      	movs	r2, #0
    5dd0:	4b40      	ldr	r3, [pc, #256]	; (5ed4 <_dtoa_r+0x3ac>)
    5dd2:	0030      	movs	r0, r6
    5dd4:	0039      	movs	r1, r7
    5dd6:	f002 f9f3 	bl	81c0 <__aeabi_dcmplt>
    5dda:	2800      	cmp	r0, #0
    5ddc:	d001      	beq.n	5de2 <_dtoa_r+0x2ba>
    5dde:	f000 fdc2 	bl	6966 <_dtoa_r+0xe3e>
    5de2:	4640      	mov	r0, r8
    5de4:	f002 fc14 	bl	8610 <__aeabi_i2d>
    5de8:	0032      	movs	r2, r6
    5dea:	003b      	movs	r3, r7
    5dec:	f7fd fb1c 	bl	3428 <__aeabi_dmul>
    5df0:	2200      	movs	r2, #0
    5df2:	4b43      	ldr	r3, [pc, #268]	; (5f00 <_dtoa_r+0x3d8>)
    5df4:	f7fc fcd4 	bl	27a0 <__aeabi_dadd>
    5df8:	4a42      	ldr	r2, [pc, #264]	; (5f04 <_dtoa_r+0x3dc>)
    5dfa:	000b      	movs	r3, r1
    5dfc:	4694      	mov	ip, r2
    5dfe:	4463      	add	r3, ip
    5e00:	9008      	str	r0, [sp, #32]
    5e02:	9109      	str	r1, [sp, #36]	; 0x24
    5e04:	9309      	str	r3, [sp, #36]	; 0x24
    5e06:	9b07      	ldr	r3, [sp, #28]
    5e08:	2b00      	cmp	r3, #0
    5e0a:	d101      	bne.n	5e10 <_dtoa_r+0x2e8>
    5e0c:	f000 fc50 	bl	66b0 <_dtoa_r+0xb88>
    5e10:	9b03      	ldr	r3, [sp, #12]
    5e12:	9313      	str	r3, [sp, #76]	; 0x4c
    5e14:	9b07      	ldr	r3, [sp, #28]
    5e16:	9312      	str	r3, [sp, #72]	; 0x48
    5e18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5e1a:	2b00      	cmp	r3, #0
    5e1c:	d101      	bne.n	5e22 <_dtoa_r+0x2fa>
    5e1e:	f000 fd1d 	bl	685c <_dtoa_r+0xd34>
    5e22:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5e24:	2000      	movs	r0, #0
    5e26:	1e5a      	subs	r2, r3, #1
    5e28:	4b33      	ldr	r3, [pc, #204]	; (5ef8 <_dtoa_r+0x3d0>)
    5e2a:	00d2      	lsls	r2, r2, #3
    5e2c:	189b      	adds	r3, r3, r2
    5e2e:	681a      	ldr	r2, [r3, #0]
    5e30:	685b      	ldr	r3, [r3, #4]
    5e32:	4935      	ldr	r1, [pc, #212]	; (5f08 <_dtoa_r+0x3e0>)
    5e34:	f7fc ffc4 	bl	2dc0 <__aeabi_ddiv>
    5e38:	9a08      	ldr	r2, [sp, #32]
    5e3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5e3c:	f7fd fd74 	bl	3928 <__aeabi_dsub>
    5e40:	9008      	str	r0, [sp, #32]
    5e42:	9109      	str	r1, [sp, #36]	; 0x24
    5e44:	0039      	movs	r1, r7
    5e46:	0030      	movs	r0, r6
    5e48:	f7fe f884 	bl	3f54 <__aeabi_d2iz>
    5e4c:	0004      	movs	r4, r0
    5e4e:	f002 fbdf 	bl	8610 <__aeabi_i2d>
    5e52:	0002      	movs	r2, r0
    5e54:	000b      	movs	r3, r1
    5e56:	0030      	movs	r0, r6
    5e58:	0039      	movs	r1, r7
    5e5a:	f7fd fd65 	bl	3928 <__aeabi_dsub>
    5e5e:	0005      	movs	r5, r0
    5e60:	000e      	movs	r6, r1
    5e62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5e64:	3430      	adds	r4, #48	; 0x30
    5e66:	1c51      	adds	r1, r2, #1
    5e68:	b2e7      	uxtb	r7, r4
    5e6a:	9114      	str	r1, [sp, #80]	; 0x50
    5e6c:	7017      	strb	r7, [r2, #0]
    5e6e:	0033      	movs	r3, r6
    5e70:	9808      	ldr	r0, [sp, #32]
    5e72:	9909      	ldr	r1, [sp, #36]	; 0x24
    5e74:	002a      	movs	r2, r5
    5e76:	f002 f9b7 	bl	81e8 <__aeabi_dcmpgt>
    5e7a:	2800      	cmp	r0, #0
    5e7c:	d001      	beq.n	5e82 <_dtoa_r+0x35a>
    5e7e:	f000 fdfe 	bl	6a7e <_dtoa_r+0xf56>
    5e82:	002a      	movs	r2, r5
    5e84:	0033      	movs	r3, r6
    5e86:	2000      	movs	r0, #0
    5e88:	4912      	ldr	r1, [pc, #72]	; (5ed4 <_dtoa_r+0x3ac>)
    5e8a:	f7fd fd4d 	bl	3928 <__aeabi_dsub>
    5e8e:	0002      	movs	r2, r0
    5e90:	000b      	movs	r3, r1
    5e92:	9808      	ldr	r0, [sp, #32]
    5e94:	9909      	ldr	r1, [sp, #36]	; 0x24
    5e96:	f002 f9a7 	bl	81e8 <__aeabi_dcmpgt>
    5e9a:	2800      	cmp	r0, #0
    5e9c:	d001      	beq.n	5ea2 <_dtoa_r+0x37a>
    5e9e:	f000 fde7 	bl	6a70 <_dtoa_r+0xf48>
    5ea2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5ea4:	2b01      	cmp	r3, #1
    5ea6:	d101      	bne.n	5eac <_dtoa_r+0x384>
    5ea8:	f000 fc78 	bl	679c <_dtoa_r+0xc74>
    5eac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5eae:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5eb0:	4694      	mov	ip, r2
    5eb2:	4463      	add	r3, ip
    5eb4:	4698      	mov	r8, r3
    5eb6:	464b      	mov	r3, r9
    5eb8:	9312      	str	r3, [sp, #72]	; 0x48
    5eba:	9b14      	ldr	r3, [sp, #80]	; 0x50
    5ebc:	4699      	mov	r9, r3
    5ebe:	e038      	b.n	5f32 <_dtoa_r+0x40a>
    5ec0:	7ff00000 	.word	0x7ff00000
    5ec4:	00008ae1 	.word	0x00008ae1
    5ec8:	0000270f 	.word	0x0000270f
    5ecc:	00008b04 	.word	0x00008b04
    5ed0:	00008b10 	.word	0x00008b10
    5ed4:	3ff00000 	.word	0x3ff00000
    5ed8:	fffffc01 	.word	0xfffffc01
    5edc:	3ff80000 	.word	0x3ff80000
    5ee0:	636f4361 	.word	0x636f4361
    5ee4:	3fd287a7 	.word	0x3fd287a7
    5ee8:	8b60c8b3 	.word	0x8b60c8b3
    5eec:	3fc68a28 	.word	0x3fc68a28
    5ef0:	509f79fb 	.word	0x509f79fb
    5ef4:	3fd34413 	.word	0x3fd34413
    5ef8:	00008b40 	.word	0x00008b40
    5efc:	00008b18 	.word	0x00008b18
    5f00:	401c0000 	.word	0x401c0000
    5f04:	fcc00000 	.word	0xfcc00000
    5f08:	3fe00000 	.word	0x3fe00000
    5f0c:	002a      	movs	r2, r5
    5f0e:	0033      	movs	r3, r6
    5f10:	2000      	movs	r0, #0
    5f12:	49b9      	ldr	r1, [pc, #740]	; (61f8 <_dtoa_r+0x6d0>)
    5f14:	f7fd fd08 	bl	3928 <__aeabi_dsub>
    5f18:	9a08      	ldr	r2, [sp, #32]
    5f1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5f1c:	f002 f950 	bl	81c0 <__aeabi_dcmplt>
    5f20:	2800      	cmp	r0, #0
    5f22:	d001      	beq.n	5f28 <_dtoa_r+0x400>
    5f24:	f000 fd74 	bl	6a10 <_dtoa_r+0xee8>
    5f28:	46a1      	mov	r9, r4
    5f2a:	4544      	cmp	r4, r8
    5f2c:	d101      	bne.n	5f32 <_dtoa_r+0x40a>
    5f2e:	f000 fc33 	bl	6798 <_dtoa_r+0xc70>
    5f32:	9808      	ldr	r0, [sp, #32]
    5f34:	9909      	ldr	r1, [sp, #36]	; 0x24
    5f36:	2200      	movs	r2, #0
    5f38:	4bb0      	ldr	r3, [pc, #704]	; (61fc <_dtoa_r+0x6d4>)
    5f3a:	f7fd fa75 	bl	3428 <__aeabi_dmul>
    5f3e:	2200      	movs	r2, #0
    5f40:	4bae      	ldr	r3, [pc, #696]	; (61fc <_dtoa_r+0x6d4>)
    5f42:	9008      	str	r0, [sp, #32]
    5f44:	9109      	str	r1, [sp, #36]	; 0x24
    5f46:	0028      	movs	r0, r5
    5f48:	0031      	movs	r1, r6
    5f4a:	f7fd fa6d 	bl	3428 <__aeabi_dmul>
    5f4e:	000d      	movs	r5, r1
    5f50:	0004      	movs	r4, r0
    5f52:	f7fd ffff 	bl	3f54 <__aeabi_d2iz>
    5f56:	0007      	movs	r7, r0
    5f58:	f002 fb5a 	bl	8610 <__aeabi_i2d>
    5f5c:	0002      	movs	r2, r0
    5f5e:	000b      	movs	r3, r1
    5f60:	0020      	movs	r0, r4
    5f62:	0029      	movs	r1, r5
    5f64:	f7fd fce0 	bl	3928 <__aeabi_dsub>
    5f68:	464b      	mov	r3, r9
    5f6a:	3730      	adds	r7, #48	; 0x30
    5f6c:	b2ff      	uxtb	r7, r7
    5f6e:	1c5c      	adds	r4, r3, #1
    5f70:	701f      	strb	r7, [r3, #0]
    5f72:	9a08      	ldr	r2, [sp, #32]
    5f74:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5f76:	0005      	movs	r5, r0
    5f78:	000e      	movs	r6, r1
    5f7a:	f002 f921 	bl	81c0 <__aeabi_dcmplt>
    5f7e:	2800      	cmp	r0, #0
    5f80:	d0c4      	beq.n	5f0c <_dtoa_r+0x3e4>
    5f82:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5f84:	9303      	str	r3, [sp, #12]
    5f86:	4659      	mov	r1, fp
    5f88:	4650      	mov	r0, sl
    5f8a:	f001 f8cb 	bl	7124 <_Bfree>
    5f8e:	2300      	movs	r3, #0
    5f90:	7023      	strb	r3, [r4, #0]
    5f92:	9b03      	ldr	r3, [sp, #12]
    5f94:	9a24      	ldr	r2, [sp, #144]	; 0x90
    5f96:	3301      	adds	r3, #1
    5f98:	6013      	str	r3, [r2, #0]
    5f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    5f9c:	2b00      	cmp	r3, #0
    5f9e:	d100      	bne.n	5fa2 <_dtoa_r+0x47a>
    5fa0:	e3a8      	b.n	66f4 <_dtoa_r+0xbcc>
    5fa2:	601c      	str	r4, [r3, #0]
    5fa4:	980a      	ldr	r0, [sp, #40]	; 0x28
    5fa6:	e5f4      	b.n	5b92 <_dtoa_r+0x6a>
    5fa8:	9b16      	ldr	r3, [sp, #88]	; 0x58
    5faa:	4699      	mov	r9, r3
    5fac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    5fae:	444b      	add	r3, r9
    5fb0:	001c      	movs	r4, r3
    5fb2:	4b93      	ldr	r3, [pc, #588]	; (6200 <_dtoa_r+0x6d8>)
    5fb4:	18e3      	adds	r3, r4, r3
    5fb6:	2b20      	cmp	r3, #32
    5fb8:	dc00      	bgt.n	5fbc <_dtoa_r+0x494>
    5fba:	e17e      	b.n	62ba <_dtoa_r+0x792>
    5fbc:	0031      	movs	r1, r6
    5fbe:	4a91      	ldr	r2, [pc, #580]	; (6204 <_dtoa_r+0x6dc>)
    5fc0:	4640      	mov	r0, r8
    5fc2:	18a2      	adds	r2, r4, r2
    5fc4:	40d1      	lsrs	r1, r2
    5fc6:	000a      	movs	r2, r1
    5fc8:	2140      	movs	r1, #64	; 0x40
    5fca:	1acb      	subs	r3, r1, r3
    5fcc:	4098      	lsls	r0, r3
    5fce:	4310      	orrs	r0, r2
    5fd0:	f7fd fff4 	bl	3fbc <__aeabi_ui2d>
    5fd4:	1e63      	subs	r3, r4, #1
    5fd6:	4698      	mov	r8, r3
    5fd8:	2301      	movs	r3, #1
    5fda:	4d8b      	ldr	r5, [pc, #556]	; (6208 <_dtoa_r+0x6e0>)
    5fdc:	930f      	str	r3, [sp, #60]	; 0x3c
    5fde:	1949      	adds	r1, r1, r5
    5fe0:	e618      	b.n	5c14 <_dtoa_r+0xec>
    5fe2:	488a      	ldr	r0, [pc, #552]	; (620c <_dtoa_r+0x6e4>)
    5fe4:	e5d5      	b.n	5b92 <_dtoa_r+0x6a>
    5fe6:	2300      	movs	r3, #0
    5fe8:	4652      	mov	r2, sl
    5fea:	2100      	movs	r1, #0
    5fec:	6453      	str	r3, [r2, #68]	; 0x44
    5fee:	4650      	mov	r0, sl
    5ff0:	f001 f870 	bl	70d4 <_Balloc>
    5ff4:	4653      	mov	r3, sl
    5ff6:	6418      	str	r0, [r3, #64]	; 0x40
    5ff8:	2301      	movs	r3, #1
    5ffa:	425b      	negs	r3, r3
    5ffc:	9307      	str	r3, [sp, #28]
    5ffe:	930e      	str	r3, [sp, #56]	; 0x38
    6000:	3302      	adds	r3, #2
    6002:	2200      	movs	r2, #0
    6004:	930b      	str	r3, [sp, #44]	; 0x2c
    6006:	2300      	movs	r3, #0
    6008:	900a      	str	r0, [sp, #40]	; 0x28
    600a:	9223      	str	r2, [sp, #140]	; 0x8c
    600c:	9322      	str	r3, [sp, #136]	; 0x88
    600e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6010:	2b00      	cmp	r3, #0
    6012:	da00      	bge.n	6016 <_dtoa_r+0x4ee>
    6014:	e0ab      	b.n	616e <_dtoa_r+0x646>
    6016:	9a03      	ldr	r2, [sp, #12]
    6018:	2a0e      	cmp	r2, #14
    601a:	dd00      	ble.n	601e <_dtoa_r+0x4f6>
    601c:	e0a7      	b.n	616e <_dtoa_r+0x646>
    601e:	4b7c      	ldr	r3, [pc, #496]	; (6210 <_dtoa_r+0x6e8>)
    6020:	00d2      	lsls	r2, r2, #3
    6022:	189b      	adds	r3, r3, r2
    6024:	685c      	ldr	r4, [r3, #4]
    6026:	681b      	ldr	r3, [r3, #0]
    6028:	9304      	str	r3, [sp, #16]
    602a:	9405      	str	r4, [sp, #20]
    602c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    602e:	2b00      	cmp	r3, #0
    6030:	da00      	bge.n	6034 <_dtoa_r+0x50c>
    6032:	e2a7      	b.n	6584 <_dtoa_r+0xa5c>
    6034:	9c04      	ldr	r4, [sp, #16]
    6036:	9d05      	ldr	r5, [sp, #20]
    6038:	0030      	movs	r0, r6
    603a:	0022      	movs	r2, r4
    603c:	002b      	movs	r3, r5
    603e:	0039      	movs	r1, r7
    6040:	f7fc febe 	bl	2dc0 <__aeabi_ddiv>
    6044:	f7fd ff86 	bl	3f54 <__aeabi_d2iz>
    6048:	4680      	mov	r8, r0
    604a:	f002 fae1 	bl	8610 <__aeabi_i2d>
    604e:	0022      	movs	r2, r4
    6050:	002b      	movs	r3, r5
    6052:	f7fd f9e9 	bl	3428 <__aeabi_dmul>
    6056:	0002      	movs	r2, r0
    6058:	000b      	movs	r3, r1
    605a:	0030      	movs	r0, r6
    605c:	0039      	movs	r1, r7
    605e:	f7fd fc63 	bl	3928 <__aeabi_dsub>
    6062:	4643      	mov	r3, r8
    6064:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6066:	3330      	adds	r3, #48	; 0x30
    6068:	7013      	strb	r3, [r2, #0]
    606a:	9b07      	ldr	r3, [sp, #28]
    606c:	0006      	movs	r6, r0
    606e:	000f      	movs	r7, r1
    6070:	1c54      	adds	r4, r2, #1
    6072:	2b01      	cmp	r3, #1
    6074:	d04e      	beq.n	6114 <_dtoa_r+0x5ec>
    6076:	2200      	movs	r2, #0
    6078:	4b60      	ldr	r3, [pc, #384]	; (61fc <_dtoa_r+0x6d4>)
    607a:	f7fd f9d5 	bl	3428 <__aeabi_dmul>
    607e:	2200      	movs	r2, #0
    6080:	2300      	movs	r3, #0
    6082:	0006      	movs	r6, r0
    6084:	000f      	movs	r7, r1
    6086:	f002 f895 	bl	81b4 <__aeabi_dcmpeq>
    608a:	2800      	cmp	r0, #0
    608c:	d000      	beq.n	6090 <_dtoa_r+0x568>
    608e:	e77a      	b.n	5f86 <_dtoa_r+0x45e>
    6090:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6092:	9a07      	ldr	r2, [sp, #28]
    6094:	1c9d      	adds	r5, r3, #2
    6096:	469c      	mov	ip, r3
    6098:	465b      	mov	r3, fp
    609a:	9306      	str	r3, [sp, #24]
    609c:	4653      	mov	r3, sl
    609e:	4462      	add	r2, ip
    60a0:	46aa      	mov	sl, r5
    60a2:	9c04      	ldr	r4, [sp, #16]
    60a4:	9d05      	ldr	r5, [sp, #20]
    60a6:	4691      	mov	r9, r2
    60a8:	9307      	str	r3, [sp, #28]
    60aa:	e00f      	b.n	60cc <_dtoa_r+0x5a4>
    60ac:	2200      	movs	r2, #0
    60ae:	4b53      	ldr	r3, [pc, #332]	; (61fc <_dtoa_r+0x6d4>)
    60b0:	f7fd f9ba 	bl	3428 <__aeabi_dmul>
    60b4:	2301      	movs	r3, #1
    60b6:	469c      	mov	ip, r3
    60b8:	2200      	movs	r2, #0
    60ba:	2300      	movs	r3, #0
    60bc:	0006      	movs	r6, r0
    60be:	000f      	movs	r7, r1
    60c0:	44e2      	add	sl, ip
    60c2:	f002 f877 	bl	81b4 <__aeabi_dcmpeq>
    60c6:	2800      	cmp	r0, #0
    60c8:	d000      	beq.n	60cc <_dtoa_r+0x5a4>
    60ca:	e2d9      	b.n	6680 <_dtoa_r+0xb58>
    60cc:	0022      	movs	r2, r4
    60ce:	002b      	movs	r3, r5
    60d0:	0030      	movs	r0, r6
    60d2:	0039      	movs	r1, r7
    60d4:	f7fc fe74 	bl	2dc0 <__aeabi_ddiv>
    60d8:	f7fd ff3c 	bl	3f54 <__aeabi_d2iz>
    60dc:	4680      	mov	r8, r0
    60de:	f002 fa97 	bl	8610 <__aeabi_i2d>
    60e2:	0022      	movs	r2, r4
    60e4:	002b      	movs	r3, r5
    60e6:	f7fd f99f 	bl	3428 <__aeabi_dmul>
    60ea:	0002      	movs	r2, r0
    60ec:	000b      	movs	r3, r1
    60ee:	0030      	movs	r0, r6
    60f0:	0039      	movs	r1, r7
    60f2:	f7fd fc19 	bl	3928 <__aeabi_dsub>
    60f6:	4653      	mov	r3, sl
    60f8:	4642      	mov	r2, r8
    60fa:	3b01      	subs	r3, #1
    60fc:	3230      	adds	r2, #48	; 0x30
    60fe:	0006      	movs	r6, r0
    6100:	000f      	movs	r7, r1
    6102:	46d3      	mov	fp, sl
    6104:	701a      	strb	r2, [r3, #0]
    6106:	45d1      	cmp	r9, sl
    6108:	d1d0      	bne.n	60ac <_dtoa_r+0x584>
    610a:	9b06      	ldr	r3, [sp, #24]
    610c:	4654      	mov	r4, sl
    610e:	469b      	mov	fp, r3
    6110:	9b07      	ldr	r3, [sp, #28]
    6112:	469a      	mov	sl, r3
    6114:	0032      	movs	r2, r6
    6116:	003b      	movs	r3, r7
    6118:	0030      	movs	r0, r6
    611a:	0039      	movs	r1, r7
    611c:	f7fc fb40 	bl	27a0 <__aeabi_dadd>
    6120:	0006      	movs	r6, r0
    6122:	000f      	movs	r7, r1
    6124:	0002      	movs	r2, r0
    6126:	000b      	movs	r3, r1
    6128:	9804      	ldr	r0, [sp, #16]
    612a:	9905      	ldr	r1, [sp, #20]
    612c:	f002 f848 	bl	81c0 <__aeabi_dcmplt>
    6130:	2800      	cmp	r0, #0
    6132:	d10c      	bne.n	614e <_dtoa_r+0x626>
    6134:	9804      	ldr	r0, [sp, #16]
    6136:	9905      	ldr	r1, [sp, #20]
    6138:	0032      	movs	r2, r6
    613a:	003b      	movs	r3, r7
    613c:	f002 f83a 	bl	81b4 <__aeabi_dcmpeq>
    6140:	2800      	cmp	r0, #0
    6142:	d100      	bne.n	6146 <_dtoa_r+0x61e>
    6144:	e71f      	b.n	5f86 <_dtoa_r+0x45e>
    6146:	4643      	mov	r3, r8
    6148:	07db      	lsls	r3, r3, #31
    614a:	d400      	bmi.n	614e <_dtoa_r+0x626>
    614c:	e71b      	b.n	5f86 <_dtoa_r+0x45e>
    614e:	1e65      	subs	r5, r4, #1
    6150:	782f      	ldrb	r7, [r5, #0]
    6152:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6154:	e006      	b.n	6164 <_dtoa_r+0x63c>
    6156:	429d      	cmp	r5, r3
    6158:	d100      	bne.n	615c <_dtoa_r+0x634>
    615a:	e351      	b.n	6800 <_dtoa_r+0xcd8>
    615c:	3c02      	subs	r4, #2
    615e:	7827      	ldrb	r7, [r4, #0]
    6160:	002c      	movs	r4, r5
    6162:	3d01      	subs	r5, #1
    6164:	2f39      	cmp	r7, #57	; 0x39
    6166:	d0f6      	beq.n	6156 <_dtoa_r+0x62e>
    6168:	3701      	adds	r7, #1
    616a:	702f      	strb	r7, [r5, #0]
    616c:	e70b      	b.n	5f86 <_dtoa_r+0x45e>
    616e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    6170:	2a00      	cmp	r2, #0
    6172:	d04f      	beq.n	6214 <_dtoa_r+0x6ec>
    6174:	9a22      	ldr	r2, [sp, #136]	; 0x88
    6176:	2a01      	cmp	r2, #1
    6178:	dc00      	bgt.n	617c <_dtoa_r+0x654>
    617a:	e22c      	b.n	65d6 <_dtoa_r+0xaae>
    617c:	9b07      	ldr	r3, [sp, #28]
    617e:	1e5c      	subs	r4, r3, #1
    6180:	464b      	mov	r3, r9
    6182:	45a1      	cmp	r9, r4
    6184:	da00      	bge.n	6188 <_dtoa_r+0x660>
    6186:	e2b8      	b.n	66fa <_dtoa_r+0xbd2>
    6188:	1b1c      	subs	r4, r3, r4
    618a:	9b07      	ldr	r3, [sp, #28]
    618c:	2b00      	cmp	r3, #0
    618e:	da00      	bge.n	6192 <_dtoa_r+0x66a>
    6190:	e3d4      	b.n	693c <_dtoa_r+0xe14>
    6192:	9b06      	ldr	r3, [sp, #24]
    6194:	9308      	str	r3, [sp, #32]
    6196:	9b07      	ldr	r3, [sp, #28]
    6198:	9a06      	ldr	r2, [sp, #24]
    619a:	2101      	movs	r1, #1
    619c:	4694      	mov	ip, r2
    619e:	449c      	add	ip, r3
    61a0:	4662      	mov	r2, ip
    61a2:	9206      	str	r2, [sp, #24]
    61a4:	9a04      	ldr	r2, [sp, #16]
    61a6:	4650      	mov	r0, sl
    61a8:	4694      	mov	ip, r2
    61aa:	449c      	add	ip, r3
    61ac:	4663      	mov	r3, ip
    61ae:	9304      	str	r3, [sp, #16]
    61b0:	f001 f850 	bl	7254 <__i2b>
    61b4:	4680      	mov	r8, r0
    61b6:	e032      	b.n	621e <_dtoa_r+0x6f6>
    61b8:	9a06      	ldr	r2, [sp, #24]
    61ba:	9b03      	ldr	r3, [sp, #12]
    61bc:	1ad2      	subs	r2, r2, r3
    61be:	425b      	negs	r3, r3
    61c0:	4699      	mov	r9, r3
    61c2:	2300      	movs	r3, #0
    61c4:	9206      	str	r2, [sp, #24]
    61c6:	930d      	str	r3, [sp, #52]	; 0x34
    61c8:	e579      	b.n	5cbe <_dtoa_r+0x196>
    61ca:	9803      	ldr	r0, [sp, #12]
    61cc:	f002 fa20 	bl	8610 <__aeabi_i2d>
    61d0:	000b      	movs	r3, r1
    61d2:	0002      	movs	r2, r0
    61d4:	0029      	movs	r1, r5
    61d6:	0020      	movs	r0, r4
    61d8:	f001 ffec 	bl	81b4 <__aeabi_dcmpeq>
    61dc:	0002      	movs	r2, r0
    61de:	4250      	negs	r0, r2
    61e0:	4150      	adcs	r0, r2
    61e2:	9b03      	ldr	r3, [sp, #12]
    61e4:	1a1b      	subs	r3, r3, r0
    61e6:	9303      	str	r3, [sp, #12]
    61e8:	e53d      	b.n	5c66 <_dtoa_r+0x13e>
    61ea:	2301      	movs	r3, #1
    61ec:	1a9b      	subs	r3, r3, r2
    61ee:	9306      	str	r3, [sp, #24]
    61f0:	2300      	movs	r3, #0
    61f2:	9304      	str	r3, [sp, #16]
    61f4:	e557      	b.n	5ca6 <_dtoa_r+0x17e>
    61f6:	46c0      	nop			; (mov r8, r8)
    61f8:	3ff00000 	.word	0x3ff00000
    61fc:	40240000 	.word	0x40240000
    6200:	00000432 	.word	0x00000432
    6204:	00000412 	.word	0x00000412
    6208:	fe100000 	.word	0xfe100000
    620c:	00008ae0 	.word	0x00008ae0
    6210:	00008b40 	.word	0x00008b40
    6214:	9b06      	ldr	r3, [sp, #24]
    6216:	464c      	mov	r4, r9
    6218:	9308      	str	r3, [sp, #32]
    621a:	2300      	movs	r3, #0
    621c:	4698      	mov	r8, r3
    621e:	9908      	ldr	r1, [sp, #32]
    6220:	1e0b      	subs	r3, r1, #0
    6222:	dd0e      	ble.n	6242 <_dtoa_r+0x71a>
    6224:	9a04      	ldr	r2, [sp, #16]
    6226:	2a00      	cmp	r2, #0
    6228:	dd0b      	ble.n	6242 <_dtoa_r+0x71a>
    622a:	4293      	cmp	r3, r2
    622c:	dd00      	ble.n	6230 <_dtoa_r+0x708>
    622e:	e187      	b.n	6540 <_dtoa_r+0xa18>
    6230:	9a06      	ldr	r2, [sp, #24]
    6232:	1ad2      	subs	r2, r2, r3
    6234:	9206      	str	r2, [sp, #24]
    6236:	9a08      	ldr	r2, [sp, #32]
    6238:	1ad2      	subs	r2, r2, r3
    623a:	9208      	str	r2, [sp, #32]
    623c:	9a04      	ldr	r2, [sp, #16]
    623e:	1ad3      	subs	r3, r2, r3
    6240:	9304      	str	r3, [sp, #16]
    6242:	464b      	mov	r3, r9
    6244:	2b00      	cmp	r3, #0
    6246:	d01a      	beq.n	627e <_dtoa_r+0x756>
    6248:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    624a:	2b00      	cmp	r3, #0
    624c:	d100      	bne.n	6250 <_dtoa_r+0x728>
    624e:	e1bb      	b.n	65c8 <_dtoa_r+0xaa0>
    6250:	2c00      	cmp	r4, #0
    6252:	dd10      	ble.n	6276 <_dtoa_r+0x74e>
    6254:	4641      	mov	r1, r8
    6256:	0022      	movs	r2, r4
    6258:	4650      	mov	r0, sl
    625a:	f001 f8af 	bl	73bc <__pow5mult>
    625e:	465a      	mov	r2, fp
    6260:	0001      	movs	r1, r0
    6262:	4680      	mov	r8, r0
    6264:	4650      	mov	r0, sl
    6266:	f000 ffff 	bl	7268 <__multiply>
    626a:	0005      	movs	r5, r0
    626c:	4659      	mov	r1, fp
    626e:	4650      	mov	r0, sl
    6270:	f000 ff58 	bl	7124 <_Bfree>
    6274:	46ab      	mov	fp, r5
    6276:	464b      	mov	r3, r9
    6278:	1b1a      	subs	r2, r3, r4
    627a:	d000      	beq.n	627e <_dtoa_r+0x756>
    627c:	e1a5      	b.n	65ca <_dtoa_r+0xaa2>
    627e:	2101      	movs	r1, #1
    6280:	4650      	mov	r0, sl
    6282:	f000 ffe7 	bl	7254 <__i2b>
    6286:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6288:	4681      	mov	r9, r0
    628a:	2b00      	cmp	r3, #0
    628c:	dd1d      	ble.n	62ca <_dtoa_r+0x7a2>
    628e:	001a      	movs	r2, r3
    6290:	0001      	movs	r1, r0
    6292:	4650      	mov	r0, sl
    6294:	f001 f892 	bl	73bc <__pow5mult>
    6298:	9b22      	ldr	r3, [sp, #136]	; 0x88
    629a:	4681      	mov	r9, r0
    629c:	2b01      	cmp	r3, #1
    629e:	dc00      	bgt.n	62a2 <_dtoa_r+0x77a>
    62a0:	e150      	b.n	6544 <_dtoa_r+0xa1c>
    62a2:	2400      	movs	r4, #0
    62a4:	464b      	mov	r3, r9
    62a6:	691b      	ldr	r3, [r3, #16]
    62a8:	3303      	adds	r3, #3
    62aa:	009b      	lsls	r3, r3, #2
    62ac:	444b      	add	r3, r9
    62ae:	6858      	ldr	r0, [r3, #4]
    62b0:	f000 ff88 	bl	71c4 <__hi0bits>
    62b4:	2320      	movs	r3, #32
    62b6:	1a1b      	subs	r3, r3, r0
    62b8:	e010      	b.n	62dc <_dtoa_r+0x7b4>
    62ba:	2220      	movs	r2, #32
    62bc:	0030      	movs	r0, r6
    62be:	1ad3      	subs	r3, r2, r3
    62c0:	4098      	lsls	r0, r3
    62c2:	e685      	b.n	5fd0 <_dtoa_r+0x4a8>
    62c4:	2300      	movs	r3, #0
    62c6:	930c      	str	r3, [sp, #48]	; 0x30
    62c8:	e4e3      	b.n	5c92 <_dtoa_r+0x16a>
    62ca:	9b22      	ldr	r3, [sp, #136]	; 0x88
    62cc:	2400      	movs	r4, #0
    62ce:	2b01      	cmp	r3, #1
    62d0:	dc00      	bgt.n	62d4 <_dtoa_r+0x7ac>
    62d2:	e18b      	b.n	65ec <_dtoa_r+0xac4>
    62d4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    62d6:	2301      	movs	r3, #1
    62d8:	2a00      	cmp	r2, #0
    62da:	d1e3      	bne.n	62a4 <_dtoa_r+0x77c>
    62dc:	9904      	ldr	r1, [sp, #16]
    62de:	201f      	movs	r0, #31
    62e0:	468c      	mov	ip, r1
    62e2:	4463      	add	r3, ip
    62e4:	4018      	ands	r0, r3
    62e6:	d100      	bne.n	62ea <_dtoa_r+0x7c2>
    62e8:	e0ae      	b.n	6448 <_dtoa_r+0x920>
    62ea:	2320      	movs	r3, #32
    62ec:	1a1b      	subs	r3, r3, r0
    62ee:	2b04      	cmp	r3, #4
    62f0:	dc00      	bgt.n	62f4 <_dtoa_r+0x7cc>
    62f2:	e3cc      	b.n	6a8e <_dtoa_r+0xf66>
    62f4:	231c      	movs	r3, #28
    62f6:	1a18      	subs	r0, r3, r0
    62f8:	9b06      	ldr	r3, [sp, #24]
    62fa:	469c      	mov	ip, r3
    62fc:	4484      	add	ip, r0
    62fe:	4663      	mov	r3, ip
    6300:	9306      	str	r3, [sp, #24]
    6302:	9b08      	ldr	r3, [sp, #32]
    6304:	469c      	mov	ip, r3
    6306:	4484      	add	ip, r0
    6308:	4663      	mov	r3, ip
    630a:	468c      	mov	ip, r1
    630c:	4484      	add	ip, r0
    630e:	9308      	str	r3, [sp, #32]
    6310:	4663      	mov	r3, ip
    6312:	9304      	str	r3, [sp, #16]
    6314:	9b06      	ldr	r3, [sp, #24]
    6316:	2b00      	cmp	r3, #0
    6318:	dd05      	ble.n	6326 <_dtoa_r+0x7fe>
    631a:	4659      	mov	r1, fp
    631c:	001a      	movs	r2, r3
    631e:	4650      	mov	r0, sl
    6320:	f001 f8ac 	bl	747c <__lshift>
    6324:	4683      	mov	fp, r0
    6326:	9b04      	ldr	r3, [sp, #16]
    6328:	2b00      	cmp	r3, #0
    632a:	dd05      	ble.n	6338 <_dtoa_r+0x810>
    632c:	4649      	mov	r1, r9
    632e:	001a      	movs	r2, r3
    6330:	4650      	mov	r0, sl
    6332:	f001 f8a3 	bl	747c <__lshift>
    6336:	4681      	mov	r9, r0
    6338:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    633a:	2b00      	cmp	r3, #0
    633c:	d000      	beq.n	6340 <_dtoa_r+0x818>
    633e:	e094      	b.n	646a <_dtoa_r+0x942>
    6340:	9b07      	ldr	r3, [sp, #28]
    6342:	2b00      	cmp	r3, #0
    6344:	dc00      	bgt.n	6348 <_dtoa_r+0x820>
    6346:	e175      	b.n	6634 <_dtoa_r+0xb0c>
    6348:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    634a:	2b00      	cmp	r3, #0
    634c:	d100      	bne.n	6350 <_dtoa_r+0x828>
    634e:	e0a6      	b.n	649e <_dtoa_r+0x976>
    6350:	9b08      	ldr	r3, [sp, #32]
    6352:	2b00      	cmp	r3, #0
    6354:	dd05      	ble.n	6362 <_dtoa_r+0x83a>
    6356:	4641      	mov	r1, r8
    6358:	001a      	movs	r2, r3
    635a:	4650      	mov	r0, sl
    635c:	f001 f88e 	bl	747c <__lshift>
    6360:	4680      	mov	r8, r0
    6362:	4643      	mov	r3, r8
    6364:	930c      	str	r3, [sp, #48]	; 0x30
    6366:	2c00      	cmp	r4, #0
    6368:	d000      	beq.n	636c <_dtoa_r+0x844>
    636a:	e250      	b.n	680e <_dtoa_r+0xce6>
    636c:	9c07      	ldr	r4, [sp, #28]
    636e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6370:	3c01      	subs	r4, #1
    6372:	0023      	movs	r3, r4
    6374:	4694      	mov	ip, r2
    6376:	4463      	add	r3, ip
    6378:	9308      	str	r3, [sp, #32]
    637a:	2301      	movs	r3, #1
    637c:	4033      	ands	r3, r6
    637e:	9307      	str	r3, [sp, #28]
    6380:	464b      	mov	r3, r9
    6382:	9306      	str	r3, [sp, #24]
    6384:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6386:	4657      	mov	r7, sl
    6388:	4645      	mov	r5, r8
    638a:	465e      	mov	r6, fp
    638c:	4692      	mov	sl, r2
    638e:	4698      	mov	r8, r3
    6390:	9b06      	ldr	r3, [sp, #24]
    6392:	0030      	movs	r0, r6
    6394:	0019      	movs	r1, r3
    6396:	4699      	mov	r9, r3
    6398:	f7ff fb1c 	bl	59d4 <quorem>
    639c:	0003      	movs	r3, r0
    639e:	900b      	str	r0, [sp, #44]	; 0x2c
    63a0:	3330      	adds	r3, #48	; 0x30
    63a2:	0029      	movs	r1, r5
    63a4:	0030      	movs	r0, r6
    63a6:	9304      	str	r3, [sp, #16]
    63a8:	f001 f8c8 	bl	753c <__mcmp>
    63ac:	4649      	mov	r1, r9
    63ae:	0004      	movs	r4, r0
    63b0:	4642      	mov	r2, r8
    63b2:	0038      	movs	r0, r7
    63b4:	f001 f8dc 	bl	7570 <__mdiff>
    63b8:	68c3      	ldr	r3, [r0, #12]
    63ba:	4681      	mov	r9, r0
    63bc:	2b00      	cmp	r3, #0
    63be:	d000      	beq.n	63c2 <_dtoa_r+0x89a>
    63c0:	e11e      	b.n	6600 <_dtoa_r+0xad8>
    63c2:	0001      	movs	r1, r0
    63c4:	0030      	movs	r0, r6
    63c6:	f001 f8b9 	bl	753c <__mcmp>
    63ca:	4683      	mov	fp, r0
    63cc:	4649      	mov	r1, r9
    63ce:	0038      	movs	r0, r7
    63d0:	f000 fea8 	bl	7124 <_Bfree>
    63d4:	465b      	mov	r3, fp
    63d6:	9a22      	ldr	r2, [sp, #136]	; 0x88
    63d8:	4313      	orrs	r3, r2
    63da:	d103      	bne.n	63e4 <_dtoa_r+0x8bc>
    63dc:	9b07      	ldr	r3, [sp, #28]
    63de:	2b00      	cmp	r3, #0
    63e0:	d100      	bne.n	63e4 <_dtoa_r+0x8bc>
    63e2:	e306      	b.n	69f2 <_dtoa_r+0xeca>
    63e4:	2c00      	cmp	r4, #0
    63e6:	da00      	bge.n	63ea <_dtoa_r+0x8c2>
    63e8:	e1a8      	b.n	673c <_dtoa_r+0xc14>
    63ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
    63ec:	431c      	orrs	r4, r3
    63ee:	d103      	bne.n	63f8 <_dtoa_r+0x8d0>
    63f0:	9b07      	ldr	r3, [sp, #28]
    63f2:	2b00      	cmp	r3, #0
    63f4:	d100      	bne.n	63f8 <_dtoa_r+0x8d0>
    63f6:	e1a1      	b.n	673c <_dtoa_r+0xc14>
    63f8:	465b      	mov	r3, fp
    63fa:	2b00      	cmp	r3, #0
    63fc:	dd00      	ble.n	6400 <_dtoa_r+0x8d8>
    63fe:	e282      	b.n	6906 <_dtoa_r+0xdde>
    6400:	4669      	mov	r1, sp
    6402:	4652      	mov	r2, sl
    6404:	4653      	mov	r3, sl
    6406:	7c09      	ldrb	r1, [r1, #16]
    6408:	1c5c      	adds	r4, r3, #1
    640a:	7011      	strb	r1, [r2, #0]
    640c:	9a08      	ldr	r2, [sp, #32]
    640e:	4552      	cmp	r2, sl
    6410:	d100      	bne.n	6414 <_dtoa_r+0x8ec>
    6412:	e28a      	b.n	692a <_dtoa_r+0xe02>
    6414:	0031      	movs	r1, r6
    6416:	2300      	movs	r3, #0
    6418:	220a      	movs	r2, #10
    641a:	0038      	movs	r0, r7
    641c:	f000 fe8c 	bl	7138 <__multadd>
    6420:	2300      	movs	r3, #0
    6422:	0006      	movs	r6, r0
    6424:	220a      	movs	r2, #10
    6426:	0029      	movs	r1, r5
    6428:	0038      	movs	r0, r7
    642a:	4545      	cmp	r5, r8
    642c:	d100      	bne.n	6430 <_dtoa_r+0x908>
    642e:	e0e1      	b.n	65f4 <_dtoa_r+0xacc>
    6430:	f000 fe82 	bl	7138 <__multadd>
    6434:	4641      	mov	r1, r8
    6436:	0005      	movs	r5, r0
    6438:	2300      	movs	r3, #0
    643a:	220a      	movs	r2, #10
    643c:	0038      	movs	r0, r7
    643e:	f000 fe7b 	bl	7138 <__multadd>
    6442:	46a2      	mov	sl, r4
    6444:	4680      	mov	r8, r0
    6446:	e7a3      	b.n	6390 <_dtoa_r+0x868>
    6448:	201c      	movs	r0, #28
    644a:	9b06      	ldr	r3, [sp, #24]
    644c:	469c      	mov	ip, r3
    644e:	4484      	add	ip, r0
    6450:	4663      	mov	r3, ip
    6452:	9306      	str	r3, [sp, #24]
    6454:	9b08      	ldr	r3, [sp, #32]
    6456:	469c      	mov	ip, r3
    6458:	4484      	add	ip, r0
    645a:	4663      	mov	r3, ip
    645c:	9308      	str	r3, [sp, #32]
    645e:	9b04      	ldr	r3, [sp, #16]
    6460:	469c      	mov	ip, r3
    6462:	4484      	add	ip, r0
    6464:	4663      	mov	r3, ip
    6466:	9304      	str	r3, [sp, #16]
    6468:	e754      	b.n	6314 <_dtoa_r+0x7ec>
    646a:	4649      	mov	r1, r9
    646c:	4658      	mov	r0, fp
    646e:	f001 f865 	bl	753c <__mcmp>
    6472:	2800      	cmp	r0, #0
    6474:	db00      	blt.n	6478 <_dtoa_r+0x950>
    6476:	e763      	b.n	6340 <_dtoa_r+0x818>
    6478:	9b03      	ldr	r3, [sp, #12]
    647a:	4659      	mov	r1, fp
    647c:	3b01      	subs	r3, #1
    647e:	9303      	str	r3, [sp, #12]
    6480:	220a      	movs	r2, #10
    6482:	2300      	movs	r3, #0
    6484:	4650      	mov	r0, sl
    6486:	f000 fe57 	bl	7138 <__multadd>
    648a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    648c:	4683      	mov	fp, r0
    648e:	2b00      	cmp	r3, #0
    6490:	d000      	beq.n	6494 <_dtoa_r+0x96c>
    6492:	e2ca      	b.n	6a2a <_dtoa_r+0xf02>
    6494:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6496:	2b00      	cmp	r3, #0
    6498:	dc00      	bgt.n	649c <_dtoa_r+0x974>
    649a:	e2d8      	b.n	6a4e <_dtoa_r+0xf26>
    649c:	9307      	str	r3, [sp, #28]
    649e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    64a0:	465d      	mov	r5, fp
    64a2:	2400      	movs	r4, #0
    64a4:	9f07      	ldr	r7, [sp, #28]
    64a6:	469b      	mov	fp, r3
    64a8:	e006      	b.n	64b8 <_dtoa_r+0x990>
    64aa:	0029      	movs	r1, r5
    64ac:	2300      	movs	r3, #0
    64ae:	220a      	movs	r2, #10
    64b0:	4650      	mov	r0, sl
    64b2:	f000 fe41 	bl	7138 <__multadd>
    64b6:	0005      	movs	r5, r0
    64b8:	4649      	mov	r1, r9
    64ba:	0028      	movs	r0, r5
    64bc:	f7ff fa8a 	bl	59d4 <quorem>
    64c0:	465b      	mov	r3, fp
    64c2:	3030      	adds	r0, #48	; 0x30
    64c4:	5518      	strb	r0, [r3, r4]
    64c6:	3401      	adds	r4, #1
    64c8:	42bc      	cmp	r4, r7
    64ca:	dbee      	blt.n	64aa <_dtoa_r+0x982>
    64cc:	46ab      	mov	fp, r5
    64ce:	0006      	movs	r6, r0
    64d0:	9c07      	ldr	r4, [sp, #28]
    64d2:	2c00      	cmp	r4, #0
    64d4:	dc00      	bgt.n	64d8 <_dtoa_r+0x9b0>
    64d6:	e237      	b.n	6948 <_dtoa_r+0xe20>
    64d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    64da:	2700      	movs	r7, #0
    64dc:	469c      	mov	ip, r3
    64de:	4464      	add	r4, ip
    64e0:	4659      	mov	r1, fp
    64e2:	2201      	movs	r2, #1
    64e4:	4650      	mov	r0, sl
    64e6:	f000 ffc9 	bl	747c <__lshift>
    64ea:	4649      	mov	r1, r9
    64ec:	4683      	mov	fp, r0
    64ee:	f001 f825 	bl	753c <__mcmp>
    64f2:	2800      	cmp	r0, #0
    64f4:	dc00      	bgt.n	64f8 <_dtoa_r+0x9d0>
    64f6:	e144      	b.n	6782 <_dtoa_r+0xc5a>
    64f8:	1e65      	subs	r5, r4, #1
    64fa:	782b      	ldrb	r3, [r5, #0]
    64fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    64fe:	e006      	b.n	650e <_dtoa_r+0x9e6>
    6500:	4295      	cmp	r5, r2
    6502:	d100      	bne.n	6506 <_dtoa_r+0x9de>
    6504:	e0b1      	b.n	666a <_dtoa_r+0xb42>
    6506:	3c02      	subs	r4, #2
    6508:	7823      	ldrb	r3, [r4, #0]
    650a:	002c      	movs	r4, r5
    650c:	3d01      	subs	r5, #1
    650e:	2b39      	cmp	r3, #57	; 0x39
    6510:	d0f6      	beq.n	6500 <_dtoa_r+0x9d8>
    6512:	3301      	adds	r3, #1
    6514:	702b      	strb	r3, [r5, #0]
    6516:	4649      	mov	r1, r9
    6518:	4650      	mov	r0, sl
    651a:	f000 fe03 	bl	7124 <_Bfree>
    651e:	4643      	mov	r3, r8
    6520:	2b00      	cmp	r3, #0
    6522:	d100      	bne.n	6526 <_dtoa_r+0x9fe>
    6524:	e52f      	b.n	5f86 <_dtoa_r+0x45e>
    6526:	2f00      	cmp	r7, #0
    6528:	d005      	beq.n	6536 <_dtoa_r+0xa0e>
    652a:	4547      	cmp	r7, r8
    652c:	d003      	beq.n	6536 <_dtoa_r+0xa0e>
    652e:	0039      	movs	r1, r7
    6530:	4650      	mov	r0, sl
    6532:	f000 fdf7 	bl	7124 <_Bfree>
    6536:	4641      	mov	r1, r8
    6538:	4650      	mov	r0, sl
    653a:	f000 fdf3 	bl	7124 <_Bfree>
    653e:	e522      	b.n	5f86 <_dtoa_r+0x45e>
    6540:	0013      	movs	r3, r2
    6542:	e675      	b.n	6230 <_dtoa_r+0x708>
    6544:	2e00      	cmp	r6, #0
    6546:	d000      	beq.n	654a <_dtoa_r+0xa22>
    6548:	e6ab      	b.n	62a2 <_dtoa_r+0x77a>
    654a:	033b      	lsls	r3, r7, #12
    654c:	2400      	movs	r4, #0
    654e:	2b00      	cmp	r3, #0
    6550:	d000      	beq.n	6554 <_dtoa_r+0xa2c>
    6552:	e6bf      	b.n	62d4 <_dtoa_r+0x7ac>
    6554:	4bba      	ldr	r3, [pc, #744]	; (6840 <_dtoa_r+0xd18>)
    6556:	423b      	tst	r3, r7
    6558:	d100      	bne.n	655c <_dtoa_r+0xa34>
    655a:	e6bb      	b.n	62d4 <_dtoa_r+0x7ac>
    655c:	9b06      	ldr	r3, [sp, #24]
    655e:	3401      	adds	r4, #1
    6560:	3301      	adds	r3, #1
    6562:	9306      	str	r3, [sp, #24]
    6564:	9b04      	ldr	r3, [sp, #16]
    6566:	3301      	adds	r3, #1
    6568:	9304      	str	r3, [sp, #16]
    656a:	e6b3      	b.n	62d4 <_dtoa_r+0x7ac>
    656c:	2301      	movs	r3, #1
    656e:	930b      	str	r3, [sp, #44]	; 0x2c
    6570:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6572:	2b00      	cmp	r3, #0
    6574:	dc00      	bgt.n	6578 <_dtoa_r+0xa50>
    6576:	e0d1      	b.n	671c <_dtoa_r+0xbf4>
    6578:	001d      	movs	r5, r3
    657a:	4698      	mov	r8, r3
    657c:	930e      	str	r3, [sp, #56]	; 0x38
    657e:	9307      	str	r3, [sp, #28]
    6580:	f7ff fbc8 	bl	5d14 <_dtoa_r+0x1ec>
    6584:	9b07      	ldr	r3, [sp, #28]
    6586:	2b00      	cmp	r3, #0
    6588:	dd00      	ble.n	658c <_dtoa_r+0xa64>
    658a:	e553      	b.n	6034 <_dtoa_r+0x50c>
    658c:	d000      	beq.n	6590 <_dtoa_r+0xa68>
    658e:	e0ad      	b.n	66ec <_dtoa_r+0xbc4>
    6590:	9804      	ldr	r0, [sp, #16]
    6592:	9905      	ldr	r1, [sp, #20]
    6594:	2200      	movs	r2, #0
    6596:	4bab      	ldr	r3, [pc, #684]	; (6844 <_dtoa_r+0xd1c>)
    6598:	f7fc ff46 	bl	3428 <__aeabi_dmul>
    659c:	003b      	movs	r3, r7
    659e:	0032      	movs	r2, r6
    65a0:	f001 fe2c 	bl	81fc <__aeabi_dcmpge>
    65a4:	2300      	movs	r3, #0
    65a6:	4699      	mov	r9, r3
    65a8:	4698      	mov	r8, r3
    65aa:	2800      	cmp	r0, #0
    65ac:	d055      	beq.n	665a <_dtoa_r+0xb32>
    65ae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    65b0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    65b2:	43db      	mvns	r3, r3
    65b4:	9303      	str	r3, [sp, #12]
    65b6:	4649      	mov	r1, r9
    65b8:	4650      	mov	r0, sl
    65ba:	f000 fdb3 	bl	7124 <_Bfree>
    65be:	4643      	mov	r3, r8
    65c0:	2b00      	cmp	r3, #0
    65c2:	d100      	bne.n	65c6 <_dtoa_r+0xa9e>
    65c4:	e4df      	b.n	5f86 <_dtoa_r+0x45e>
    65c6:	e7b6      	b.n	6536 <_dtoa_r+0xa0e>
    65c8:	464a      	mov	r2, r9
    65ca:	4659      	mov	r1, fp
    65cc:	4650      	mov	r0, sl
    65ce:	f000 fef5 	bl	73bc <__pow5mult>
    65d2:	4683      	mov	fp, r0
    65d4:	e653      	b.n	627e <_dtoa_r+0x756>
    65d6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    65d8:	2a00      	cmp	r2, #0
    65da:	d100      	bne.n	65de <_dtoa_r+0xab6>
    65dc:	e1b6      	b.n	694c <_dtoa_r+0xe24>
    65de:	4a9a      	ldr	r2, [pc, #616]	; (6848 <_dtoa_r+0xd20>)
    65e0:	464c      	mov	r4, r9
    65e2:	4694      	mov	ip, r2
    65e4:	9a06      	ldr	r2, [sp, #24]
    65e6:	4463      	add	r3, ip
    65e8:	9208      	str	r2, [sp, #32]
    65ea:	e5d5      	b.n	6198 <_dtoa_r+0x670>
    65ec:	2e00      	cmp	r6, #0
    65ee:	d000      	beq.n	65f2 <_dtoa_r+0xaca>
    65f0:	e670      	b.n	62d4 <_dtoa_r+0x7ac>
    65f2:	e7aa      	b.n	654a <_dtoa_r+0xa22>
    65f4:	f000 fda0 	bl	7138 <__multadd>
    65f8:	46a2      	mov	sl, r4
    65fa:	0005      	movs	r5, r0
    65fc:	4680      	mov	r8, r0
    65fe:	e6c7      	b.n	6390 <_dtoa_r+0x868>
    6600:	2301      	movs	r3, #1
    6602:	469b      	mov	fp, r3
    6604:	e6e2      	b.n	63cc <_dtoa_r+0x8a4>
    6606:	2300      	movs	r3, #0
    6608:	930b      	str	r3, [sp, #44]	; 0x2c
    660a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    660c:	2b02      	cmp	r3, #2
    660e:	d0af      	beq.n	6570 <_dtoa_r+0xa48>
    6610:	2400      	movs	r4, #0
    6612:	4653      	mov	r3, sl
    6614:	0021      	movs	r1, r4
    6616:	645c      	str	r4, [r3, #68]	; 0x44
    6618:	4650      	mov	r0, sl
    661a:	f000 fd5b 	bl	70d4 <_Balloc>
    661e:	4653      	mov	r3, sl
    6620:	6418      	str	r0, [r3, #64]	; 0x40
    6622:	2301      	movs	r3, #1
    6624:	425b      	negs	r3, r3
    6626:	9307      	str	r3, [sp, #28]
    6628:	930e      	str	r3, [sp, #56]	; 0x38
    662a:	3302      	adds	r3, #2
    662c:	900a      	str	r0, [sp, #40]	; 0x28
    662e:	9423      	str	r4, [sp, #140]	; 0x8c
    6630:	930b      	str	r3, [sp, #44]	; 0x2c
    6632:	e4ec      	b.n	600e <_dtoa_r+0x4e6>
    6634:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6636:	2b02      	cmp	r3, #2
    6638:	dc00      	bgt.n	663c <_dtoa_r+0xb14>
    663a:	e685      	b.n	6348 <_dtoa_r+0x820>
    663c:	9b07      	ldr	r3, [sp, #28]
    663e:	2b00      	cmp	r3, #0
    6640:	d1b5      	bne.n	65ae <_dtoa_r+0xa86>
    6642:	4649      	mov	r1, r9
    6644:	2205      	movs	r2, #5
    6646:	4650      	mov	r0, sl
    6648:	f000 fd76 	bl	7138 <__multadd>
    664c:	4681      	mov	r9, r0
    664e:	0001      	movs	r1, r0
    6650:	4658      	mov	r0, fp
    6652:	f000 ff73 	bl	753c <__mcmp>
    6656:	2800      	cmp	r0, #0
    6658:	dda9      	ble.n	65ae <_dtoa_r+0xa86>
    665a:	2331      	movs	r3, #49	; 0x31
    665c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    665e:	7013      	strb	r3, [r2, #0]
    6660:	9b03      	ldr	r3, [sp, #12]
    6662:	1c54      	adds	r4, r2, #1
    6664:	3301      	adds	r3, #1
    6666:	9303      	str	r3, [sp, #12]
    6668:	e7a5      	b.n	65b6 <_dtoa_r+0xa8e>
    666a:	9b03      	ldr	r3, [sp, #12]
    666c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    666e:	3301      	adds	r3, #1
    6670:	9303      	str	r3, [sp, #12]
    6672:	2331      	movs	r3, #49	; 0x31
    6674:	7013      	strb	r3, [r2, #0]
    6676:	e74e      	b.n	6516 <_dtoa_r+0x9ee>
    6678:	2300      	movs	r3, #0
    667a:	930b      	str	r3, [sp, #44]	; 0x2c
    667c:	f7ff fb3d 	bl	5cfa <_dtoa_r+0x1d2>
    6680:	9b06      	ldr	r3, [sp, #24]
    6682:	465c      	mov	r4, fp
    6684:	469b      	mov	fp, r3
    6686:	9b07      	ldr	r3, [sp, #28]
    6688:	469a      	mov	sl, r3
    668a:	e47c      	b.n	5f86 <_dtoa_r+0x45e>
    668c:	4640      	mov	r0, r8
    668e:	f001 ffbf 	bl	8610 <__aeabi_i2d>
    6692:	0032      	movs	r2, r6
    6694:	003b      	movs	r3, r7
    6696:	f7fc fec7 	bl	3428 <__aeabi_dmul>
    669a:	2200      	movs	r2, #0
    669c:	4b6b      	ldr	r3, [pc, #428]	; (684c <_dtoa_r+0xd24>)
    669e:	f7fc f87f 	bl	27a0 <__aeabi_dadd>
    66a2:	4a6b      	ldr	r2, [pc, #428]	; (6850 <_dtoa_r+0xd28>)
    66a4:	000b      	movs	r3, r1
    66a6:	4694      	mov	ip, r2
    66a8:	4463      	add	r3, ip
    66aa:	9008      	str	r0, [sp, #32]
    66ac:	9109      	str	r1, [sp, #36]	; 0x24
    66ae:	9309      	str	r3, [sp, #36]	; 0x24
    66b0:	2200      	movs	r2, #0
    66b2:	4b64      	ldr	r3, [pc, #400]	; (6844 <_dtoa_r+0xd1c>)
    66b4:	0030      	movs	r0, r6
    66b6:	0039      	movs	r1, r7
    66b8:	f7fd f936 	bl	3928 <__aeabi_dsub>
    66bc:	9e08      	ldr	r6, [sp, #32]
    66be:	9f09      	ldr	r7, [sp, #36]	; 0x24
    66c0:	0032      	movs	r2, r6
    66c2:	003b      	movs	r3, r7
    66c4:	0004      	movs	r4, r0
    66c6:	000d      	movs	r5, r1
    66c8:	f001 fd8e 	bl	81e8 <__aeabi_dcmpgt>
    66cc:	2800      	cmp	r0, #0
    66ce:	d000      	beq.n	66d2 <_dtoa_r+0xbaa>
    66d0:	e0b2      	b.n	6838 <_dtoa_r+0xd10>
    66d2:	2080      	movs	r0, #128	; 0x80
    66d4:	0600      	lsls	r0, r0, #24
    66d6:	4684      	mov	ip, r0
    66d8:	0039      	movs	r1, r7
    66da:	4461      	add	r1, ip
    66dc:	000b      	movs	r3, r1
    66de:	0032      	movs	r2, r6
    66e0:	0020      	movs	r0, r4
    66e2:	0029      	movs	r1, r5
    66e4:	f001 fd6c 	bl	81c0 <__aeabi_dcmplt>
    66e8:	2800      	cmp	r0, #0
    66ea:	d057      	beq.n	679c <_dtoa_r+0xc74>
    66ec:	2300      	movs	r3, #0
    66ee:	4699      	mov	r9, r3
    66f0:	4698      	mov	r8, r3
    66f2:	e75c      	b.n	65ae <_dtoa_r+0xa86>
    66f4:	980a      	ldr	r0, [sp, #40]	; 0x28
    66f6:	f7ff fa4c 	bl	5b92 <_dtoa_r+0x6a>
    66fa:	1ae2      	subs	r2, r4, r3
    66fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    66fe:	46a1      	mov	r9, r4
    6700:	469c      	mov	ip, r3
    6702:	4494      	add	ip, r2
    6704:	4663      	mov	r3, ip
    6706:	2400      	movs	r4, #0
    6708:	930d      	str	r3, [sp, #52]	; 0x34
    670a:	e53e      	b.n	618a <_dtoa_r+0x662>
    670c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    670e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6710:	9208      	str	r2, [sp, #32]
    6712:	9309      	str	r3, [sp, #36]	; 0x24
    6714:	2302      	movs	r3, #2
    6716:	4698      	mov	r8, r3
    6718:	f7ff fb3a 	bl	5d90 <_dtoa_r+0x268>
    671c:	2300      	movs	r3, #0
    671e:	4652      	mov	r2, sl
    6720:	2100      	movs	r1, #0
    6722:	6453      	str	r3, [r2, #68]	; 0x44
    6724:	4650      	mov	r0, sl
    6726:	f000 fcd5 	bl	70d4 <_Balloc>
    672a:	4653      	mov	r3, sl
    672c:	6418      	str	r0, [r3, #64]	; 0x40
    672e:	2301      	movs	r3, #1
    6730:	900a      	str	r0, [sp, #40]	; 0x28
    6732:	9307      	str	r3, [sp, #28]
    6734:	9323      	str	r3, [sp, #140]	; 0x8c
    6736:	930e      	str	r3, [sp, #56]	; 0x38
    6738:	f7ff fb07 	bl	5d4a <_dtoa_r+0x222>
    673c:	4643      	mov	r3, r8
    673e:	930c      	str	r3, [sp, #48]	; 0x30
    6740:	465b      	mov	r3, fp
    6742:	9a06      	ldr	r2, [sp, #24]
    6744:	46a8      	mov	r8, r5
    6746:	46b3      	mov	fp, r6
    6748:	4655      	mov	r5, sl
    674a:	9e04      	ldr	r6, [sp, #16]
    674c:	4691      	mov	r9, r2
    674e:	46ba      	mov	sl, r7
    6750:	2b00      	cmp	r3, #0
    6752:	dd10      	ble.n	6776 <_dtoa_r+0xc4e>
    6754:	4659      	mov	r1, fp
    6756:	2201      	movs	r2, #1
    6758:	0038      	movs	r0, r7
    675a:	f000 fe8f 	bl	747c <__lshift>
    675e:	4649      	mov	r1, r9
    6760:	4683      	mov	fp, r0
    6762:	f000 feeb 	bl	753c <__mcmp>
    6766:	2800      	cmp	r0, #0
    6768:	dc00      	bgt.n	676c <_dtoa_r+0xc44>
    676a:	e157      	b.n	6a1c <_dtoa_r+0xef4>
    676c:	2e39      	cmp	r6, #57	; 0x39
    676e:	d100      	bne.n	6772 <_dtoa_r+0xc4a>
    6770:	e122      	b.n	69b8 <_dtoa_r+0xe90>
    6772:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    6774:	3631      	adds	r6, #49	; 0x31
    6776:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6778:	4647      	mov	r7, r8
    677a:	1c6c      	adds	r4, r5, #1
    677c:	702e      	strb	r6, [r5, #0]
    677e:	4698      	mov	r8, r3
    6780:	e6c9      	b.n	6516 <_dtoa_r+0x9ee>
    6782:	2800      	cmp	r0, #0
    6784:	d103      	bne.n	678e <_dtoa_r+0xc66>
    6786:	07f3      	lsls	r3, r6, #31
    6788:	d501      	bpl.n	678e <_dtoa_r+0xc66>
    678a:	e6b5      	b.n	64f8 <_dtoa_r+0x9d0>
    678c:	001c      	movs	r4, r3
    678e:	1e63      	subs	r3, r4, #1
    6790:	781a      	ldrb	r2, [r3, #0]
    6792:	2a30      	cmp	r2, #48	; 0x30
    6794:	d0fa      	beq.n	678c <_dtoa_r+0xc64>
    6796:	e6be      	b.n	6516 <_dtoa_r+0x9ee>
    6798:	9b12      	ldr	r3, [sp, #72]	; 0x48
    679a:	4699      	mov	r9, r3
    679c:	9e10      	ldr	r6, [sp, #64]	; 0x40
    679e:	9f11      	ldr	r7, [sp, #68]	; 0x44
    67a0:	e435      	b.n	600e <_dtoa_r+0x4e6>
    67a2:	2501      	movs	r5, #1
    67a4:	f7ff fab4 	bl	5d10 <_dtoa_r+0x1e8>
    67a8:	9b03      	ldr	r3, [sp, #12]
    67aa:	2b00      	cmp	r3, #0
    67ac:	d100      	bne.n	67b0 <_dtoa_r+0xc88>
    67ae:	e0d4      	b.n	695a <_dtoa_r+0xe32>
    67b0:	9810      	ldr	r0, [sp, #64]	; 0x40
    67b2:	9911      	ldr	r1, [sp, #68]	; 0x44
    67b4:	425c      	negs	r4, r3
    67b6:	230f      	movs	r3, #15
    67b8:	4a26      	ldr	r2, [pc, #152]	; (6854 <_dtoa_r+0xd2c>)
    67ba:	4023      	ands	r3, r4
    67bc:	00db      	lsls	r3, r3, #3
    67be:	18d3      	adds	r3, r2, r3
    67c0:	681a      	ldr	r2, [r3, #0]
    67c2:	685b      	ldr	r3, [r3, #4]
    67c4:	f7fc fe30 	bl	3428 <__aeabi_dmul>
    67c8:	1124      	asrs	r4, r4, #4
    67ca:	0006      	movs	r6, r0
    67cc:	000f      	movs	r7, r1
    67ce:	2c00      	cmp	r4, #0
    67d0:	d100      	bne.n	67d4 <_dtoa_r+0xcac>
    67d2:	e149      	b.n	6a68 <_dtoa_r+0xf40>
    67d4:	2302      	movs	r3, #2
    67d6:	4698      	mov	r8, r3
    67d8:	4d1f      	ldr	r5, [pc, #124]	; (6858 <_dtoa_r+0xd30>)
    67da:	2301      	movs	r3, #1
    67dc:	4223      	tst	r3, r4
    67de:	d009      	beq.n	67f4 <_dtoa_r+0xccc>
    67e0:	469c      	mov	ip, r3
    67e2:	682a      	ldr	r2, [r5, #0]
    67e4:	686b      	ldr	r3, [r5, #4]
    67e6:	0030      	movs	r0, r6
    67e8:	0039      	movs	r1, r7
    67ea:	44e0      	add	r8, ip
    67ec:	f7fc fe1c 	bl	3428 <__aeabi_dmul>
    67f0:	0006      	movs	r6, r0
    67f2:	000f      	movs	r7, r1
    67f4:	1064      	asrs	r4, r4, #1
    67f6:	3508      	adds	r5, #8
    67f8:	2c00      	cmp	r4, #0
    67fa:	d1ee      	bne.n	67da <_dtoa_r+0xcb2>
    67fc:	f7ff fae4 	bl	5dc8 <_dtoa_r+0x2a0>
    6800:	9b03      	ldr	r3, [sp, #12]
    6802:	2730      	movs	r7, #48	; 0x30
    6804:	3301      	adds	r3, #1
    6806:	9303      	str	r3, [sp, #12]
    6808:	2330      	movs	r3, #48	; 0x30
    680a:	702b      	strb	r3, [r5, #0]
    680c:	e4ac      	b.n	6168 <_dtoa_r+0x640>
    680e:	6859      	ldr	r1, [r3, #4]
    6810:	4650      	mov	r0, sl
    6812:	f000 fc5f 	bl	70d4 <_Balloc>
    6816:	4643      	mov	r3, r8
    6818:	4641      	mov	r1, r8
    681a:	0004      	movs	r4, r0
    681c:	691b      	ldr	r3, [r3, #16]
    681e:	310c      	adds	r1, #12
    6820:	1c9a      	adds	r2, r3, #2
    6822:	0092      	lsls	r2, r2, #2
    6824:	300c      	adds	r0, #12
    6826:	f7fd fc43 	bl	40b0 <memcpy>
    682a:	2201      	movs	r2, #1
    682c:	0021      	movs	r1, r4
    682e:	4650      	mov	r0, sl
    6830:	f000 fe24 	bl	747c <__lshift>
    6834:	900c      	str	r0, [sp, #48]	; 0x30
    6836:	e599      	b.n	636c <_dtoa_r+0x844>
    6838:	2300      	movs	r3, #0
    683a:	4699      	mov	r9, r3
    683c:	4698      	mov	r8, r3
    683e:	e70c      	b.n	665a <_dtoa_r+0xb32>
    6840:	7ff00000 	.word	0x7ff00000
    6844:	40140000 	.word	0x40140000
    6848:	00000433 	.word	0x00000433
    684c:	401c0000 	.word	0x401c0000
    6850:	fcc00000 	.word	0xfcc00000
    6854:	00008b40 	.word	0x00008b40
    6858:	00008b18 	.word	0x00008b18
    685c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    685e:	498f      	ldr	r1, [pc, #572]	; (6a9c <_dtoa_r+0xf74>)
    6860:	3b01      	subs	r3, #1
    6862:	00db      	lsls	r3, r3, #3
    6864:	18c9      	adds	r1, r1, r3
    6866:	6808      	ldr	r0, [r1, #0]
    6868:	6849      	ldr	r1, [r1, #4]
    686a:	9a08      	ldr	r2, [sp, #32]
    686c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    686e:	f7fc fddb 	bl	3428 <__aeabi_dmul>
    6872:	9014      	str	r0, [sp, #80]	; 0x50
    6874:	9115      	str	r1, [sp, #84]	; 0x54
    6876:	0039      	movs	r1, r7
    6878:	0030      	movs	r0, r6
    687a:	f7fd fb6b 	bl	3f54 <__aeabi_d2iz>
    687e:	0005      	movs	r5, r0
    6880:	f001 fec6 	bl	8610 <__aeabi_i2d>
    6884:	0002      	movs	r2, r0
    6886:	000b      	movs	r3, r1
    6888:	0030      	movs	r0, r6
    688a:	0039      	movs	r1, r7
    688c:	f7fd f84c 	bl	3928 <__aeabi_dsub>
    6890:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6892:	9008      	str	r0, [sp, #32]
    6894:	9109      	str	r1, [sp, #36]	; 0x24
    6896:	990a      	ldr	r1, [sp, #40]	; 0x28
    6898:	001a      	movs	r2, r3
    689a:	468c      	mov	ip, r1
    689c:	3530      	adds	r5, #48	; 0x30
    689e:	4462      	add	r2, ip
    68a0:	1c4c      	adds	r4, r1, #1
    68a2:	700d      	strb	r5, [r1, #0]
    68a4:	4690      	mov	r8, r2
    68a6:	2b01      	cmp	r3, #1
    68a8:	d01b      	beq.n	68e2 <_dtoa_r+0xdba>
    68aa:	9808      	ldr	r0, [sp, #32]
    68ac:	9909      	ldr	r1, [sp, #36]	; 0x24
    68ae:	0025      	movs	r5, r4
    68b0:	2200      	movs	r2, #0
    68b2:	4b7b      	ldr	r3, [pc, #492]	; (6aa0 <_dtoa_r+0xf78>)
    68b4:	f7fc fdb8 	bl	3428 <__aeabi_dmul>
    68b8:	000f      	movs	r7, r1
    68ba:	0006      	movs	r6, r0
    68bc:	f7fd fb4a 	bl	3f54 <__aeabi_d2iz>
    68c0:	0004      	movs	r4, r0
    68c2:	f001 fea5 	bl	8610 <__aeabi_i2d>
    68c6:	3430      	adds	r4, #48	; 0x30
    68c8:	0002      	movs	r2, r0
    68ca:	000b      	movs	r3, r1
    68cc:	0030      	movs	r0, r6
    68ce:	0039      	movs	r1, r7
    68d0:	f7fd f82a 	bl	3928 <__aeabi_dsub>
    68d4:	702c      	strb	r4, [r5, #0]
    68d6:	3501      	adds	r5, #1
    68d8:	45a8      	cmp	r8, r5
    68da:	d1e9      	bne.n	68b0 <_dtoa_r+0xd88>
    68dc:	4644      	mov	r4, r8
    68de:	9008      	str	r0, [sp, #32]
    68e0:	9109      	str	r1, [sp, #36]	; 0x24
    68e2:	9814      	ldr	r0, [sp, #80]	; 0x50
    68e4:	9915      	ldr	r1, [sp, #84]	; 0x54
    68e6:	2200      	movs	r2, #0
    68e8:	4b6e      	ldr	r3, [pc, #440]	; (6aa4 <_dtoa_r+0xf7c>)
    68ea:	f7fb ff59 	bl	27a0 <__aeabi_dadd>
    68ee:	9a08      	ldr	r2, [sp, #32]
    68f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    68f2:	f001 fc65 	bl	81c0 <__aeabi_dcmplt>
    68f6:	2800      	cmp	r0, #0
    68f8:	d067      	beq.n	69ca <_dtoa_r+0xea2>
    68fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    68fc:	1e65      	subs	r5, r4, #1
    68fe:	9303      	str	r3, [sp, #12]
    6900:	782f      	ldrb	r7, [r5, #0]
    6902:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6904:	e42e      	b.n	6164 <_dtoa_r+0x63c>
    6906:	4643      	mov	r3, r8
    6908:	46b3      	mov	fp, r6
    690a:	930c      	str	r3, [sp, #48]	; 0x30
    690c:	9e04      	ldr	r6, [sp, #16]
    690e:	9b06      	ldr	r3, [sp, #24]
    6910:	46a8      	mov	r8, r5
    6912:	4699      	mov	r9, r3
    6914:	4655      	mov	r5, sl
    6916:	46ba      	mov	sl, r7
    6918:	2e39      	cmp	r6, #57	; 0x39
    691a:	d04d      	beq.n	69b8 <_dtoa_r+0xe90>
    691c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    691e:	3601      	adds	r6, #1
    6920:	4647      	mov	r7, r8
    6922:	1c6c      	adds	r4, r5, #1
    6924:	702e      	strb	r6, [r5, #0]
    6926:	4698      	mov	r8, r3
    6928:	e5f5      	b.n	6516 <_dtoa_r+0x9ee>
    692a:	4642      	mov	r2, r8
    692c:	9b06      	ldr	r3, [sp, #24]
    692e:	46b3      	mov	fp, r6
    6930:	46ba      	mov	sl, r7
    6932:	9e04      	ldr	r6, [sp, #16]
    6934:	4699      	mov	r9, r3
    6936:	002f      	movs	r7, r5
    6938:	4690      	mov	r8, r2
    693a:	e5d1      	b.n	64e0 <_dtoa_r+0x9b8>
    693c:	9b06      	ldr	r3, [sp, #24]
    693e:	9a07      	ldr	r2, [sp, #28]
    6940:	1a9b      	subs	r3, r3, r2
    6942:	9308      	str	r3, [sp, #32]
    6944:	2300      	movs	r3, #0
    6946:	e427      	b.n	6198 <_dtoa_r+0x670>
    6948:	2401      	movs	r4, #1
    694a:	e5c5      	b.n	64d8 <_dtoa_r+0x9b0>
    694c:	2336      	movs	r3, #54	; 0x36
    694e:	9a16      	ldr	r2, [sp, #88]	; 0x58
    6950:	464c      	mov	r4, r9
    6952:	1a9b      	subs	r3, r3, r2
    6954:	9a06      	ldr	r2, [sp, #24]
    6956:	9208      	str	r2, [sp, #32]
    6958:	e41e      	b.n	6198 <_dtoa_r+0x670>
    695a:	2302      	movs	r3, #2
    695c:	9e10      	ldr	r6, [sp, #64]	; 0x40
    695e:	9f11      	ldr	r7, [sp, #68]	; 0x44
    6960:	4698      	mov	r8, r3
    6962:	f7ff fa31 	bl	5dc8 <_dtoa_r+0x2a0>
    6966:	9b07      	ldr	r3, [sp, #28]
    6968:	2b00      	cmp	r3, #0
    696a:	d100      	bne.n	696e <_dtoa_r+0xe46>
    696c:	e68e      	b.n	668c <_dtoa_r+0xb64>
    696e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    6970:	2c00      	cmp	r4, #0
    6972:	dc00      	bgt.n	6976 <_dtoa_r+0xe4e>
    6974:	e712      	b.n	679c <_dtoa_r+0xc74>
    6976:	9b03      	ldr	r3, [sp, #12]
    6978:	2200      	movs	r2, #0
    697a:	3b01      	subs	r3, #1
    697c:	9313      	str	r3, [sp, #76]	; 0x4c
    697e:	0030      	movs	r0, r6
    6980:	4b47      	ldr	r3, [pc, #284]	; (6aa0 <_dtoa_r+0xf78>)
    6982:	0039      	movs	r1, r7
    6984:	f7fc fd50 	bl	3428 <__aeabi_dmul>
    6988:	0006      	movs	r6, r0
    698a:	4640      	mov	r0, r8
    698c:	000f      	movs	r7, r1
    698e:	3001      	adds	r0, #1
    6990:	f001 fe3e 	bl	8610 <__aeabi_i2d>
    6994:	0032      	movs	r2, r6
    6996:	003b      	movs	r3, r7
    6998:	f7fc fd46 	bl	3428 <__aeabi_dmul>
    699c:	2200      	movs	r2, #0
    699e:	4b42      	ldr	r3, [pc, #264]	; (6aa8 <_dtoa_r+0xf80>)
    69a0:	f7fb fefe 	bl	27a0 <__aeabi_dadd>
    69a4:	4a41      	ldr	r2, [pc, #260]	; (6aac <_dtoa_r+0xf84>)
    69a6:	000b      	movs	r3, r1
    69a8:	4694      	mov	ip, r2
    69aa:	4463      	add	r3, ip
    69ac:	9008      	str	r0, [sp, #32]
    69ae:	9109      	str	r1, [sp, #36]	; 0x24
    69b0:	9412      	str	r4, [sp, #72]	; 0x48
    69b2:	9309      	str	r3, [sp, #36]	; 0x24
    69b4:	f7ff fa30 	bl	5e18 <_dtoa_r+0x2f0>
    69b8:	2339      	movs	r3, #57	; 0x39
    69ba:	702b      	strb	r3, [r5, #0]
    69bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    69be:	4647      	mov	r7, r8
    69c0:	1c6c      	adds	r4, r5, #1
    69c2:	4698      	mov	r8, r3
    69c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    69c6:	2339      	movs	r3, #57	; 0x39
    69c8:	e5a1      	b.n	650e <_dtoa_r+0x9e6>
    69ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
    69cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
    69ce:	2000      	movs	r0, #0
    69d0:	4934      	ldr	r1, [pc, #208]	; (6aa4 <_dtoa_r+0xf7c>)
    69d2:	f7fc ffa9 	bl	3928 <__aeabi_dsub>
    69d6:	9a08      	ldr	r2, [sp, #32]
    69d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    69da:	f001 fc05 	bl	81e8 <__aeabi_dcmpgt>
    69de:	2800      	cmp	r0, #0
    69e0:	d101      	bne.n	69e6 <_dtoa_r+0xebe>
    69e2:	e6db      	b.n	679c <_dtoa_r+0xc74>
    69e4:	001c      	movs	r4, r3
    69e6:	1e63      	subs	r3, r4, #1
    69e8:	781a      	ldrb	r2, [r3, #0]
    69ea:	2a30      	cmp	r2, #48	; 0x30
    69ec:	d0fa      	beq.n	69e4 <_dtoa_r+0xebc>
    69ee:	f7ff fac8 	bl	5f82 <_dtoa_r+0x45a>
    69f2:	4643      	mov	r3, r8
    69f4:	46b3      	mov	fp, r6
    69f6:	930c      	str	r3, [sp, #48]	; 0x30
    69f8:	9e04      	ldr	r6, [sp, #16]
    69fa:	9b06      	ldr	r3, [sp, #24]
    69fc:	46a8      	mov	r8, r5
    69fe:	4699      	mov	r9, r3
    6a00:	4655      	mov	r5, sl
    6a02:	46ba      	mov	sl, r7
    6a04:	2e39      	cmp	r6, #57	; 0x39
    6a06:	d0d7      	beq.n	69b8 <_dtoa_r+0xe90>
    6a08:	2c00      	cmp	r4, #0
    6a0a:	dd00      	ble.n	6a0e <_dtoa_r+0xee6>
    6a0c:	e6b1      	b.n	6772 <_dtoa_r+0xc4a>
    6a0e:	e6b2      	b.n	6776 <_dtoa_r+0xc4e>
    6a10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6a12:	464d      	mov	r5, r9
    6a14:	9203      	str	r2, [sp, #12]
    6a16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6a18:	f7ff fba4 	bl	6164 <_dtoa_r+0x63c>
    6a1c:	2800      	cmp	r0, #0
    6a1e:	d000      	beq.n	6a22 <_dtoa_r+0xefa>
    6a20:	e6a9      	b.n	6776 <_dtoa_r+0xc4e>
    6a22:	07f3      	lsls	r3, r6, #31
    6a24:	d400      	bmi.n	6a28 <_dtoa_r+0xf00>
    6a26:	e6a6      	b.n	6776 <_dtoa_r+0xc4e>
    6a28:	e6a0      	b.n	676c <_dtoa_r+0xc44>
    6a2a:	2300      	movs	r3, #0
    6a2c:	4641      	mov	r1, r8
    6a2e:	220a      	movs	r2, #10
    6a30:	4650      	mov	r0, sl
    6a32:	f000 fb81 	bl	7138 <__multadd>
    6a36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6a38:	4680      	mov	r8, r0
    6a3a:	2b00      	cmp	r3, #0
    6a3c:	dd01      	ble.n	6a42 <_dtoa_r+0xf1a>
    6a3e:	9307      	str	r3, [sp, #28]
    6a40:	e486      	b.n	6350 <_dtoa_r+0x828>
    6a42:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6a44:	2b02      	cmp	r3, #2
    6a46:	dc1f      	bgt.n	6a88 <_dtoa_r+0xf60>
    6a48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6a4a:	9307      	str	r3, [sp, #28]
    6a4c:	e480      	b.n	6350 <_dtoa_r+0x828>
    6a4e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    6a50:	2b02      	cmp	r3, #2
    6a52:	dc19      	bgt.n	6a88 <_dtoa_r+0xf60>
    6a54:	4649      	mov	r1, r9
    6a56:	f7fe ffbd 	bl	59d4 <quorem>
    6a5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6a5c:	3030      	adds	r0, #48	; 0x30
    6a5e:	7018      	strb	r0, [r3, #0]
    6a60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6a62:	0006      	movs	r6, r0
    6a64:	9307      	str	r3, [sp, #28]
    6a66:	e533      	b.n	64d0 <_dtoa_r+0x9a8>
    6a68:	2302      	movs	r3, #2
    6a6a:	4698      	mov	r8, r3
    6a6c:	f7ff f9ac 	bl	5dc8 <_dtoa_r+0x2a0>
    6a70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6a72:	9c14      	ldr	r4, [sp, #80]	; 0x50
    6a74:	9303      	str	r3, [sp, #12]
    6a76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6a78:	001d      	movs	r5, r3
    6a7a:	f7ff fb73 	bl	6164 <_dtoa_r+0x63c>
    6a7e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6a80:	9c14      	ldr	r4, [sp, #80]	; 0x50
    6a82:	9303      	str	r3, [sp, #12]
    6a84:	f7ff fa7f 	bl	5f86 <_dtoa_r+0x45e>
    6a88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6a8a:	9307      	str	r3, [sp, #28]
    6a8c:	e5d6      	b.n	663c <_dtoa_r+0xb14>
    6a8e:	2b04      	cmp	r3, #4
    6a90:	d100      	bne.n	6a94 <_dtoa_r+0xf6c>
    6a92:	e43f      	b.n	6314 <_dtoa_r+0x7ec>
    6a94:	233c      	movs	r3, #60	; 0x3c
    6a96:	1a18      	subs	r0, r3, r0
    6a98:	e4d7      	b.n	644a <_dtoa_r+0x922>
    6a9a:	46c0      	nop			; (mov r8, r8)
    6a9c:	00008b40 	.word	0x00008b40
    6aa0:	40240000 	.word	0x40240000
    6aa4:	3fe00000 	.word	0x3fe00000
    6aa8:	401c0000 	.word	0x401c0000
    6aac:	fcc00000 	.word	0xfcc00000

00006ab0 <_localeconv_r>:
    6ab0:	4b04      	ldr	r3, [pc, #16]	; (6ac4 <_localeconv_r+0x14>)
    6ab2:	681b      	ldr	r3, [r3, #0]
    6ab4:	6b58      	ldr	r0, [r3, #52]	; 0x34
    6ab6:	2800      	cmp	r0, #0
    6ab8:	d001      	beq.n	6abe <_localeconv_r+0xe>
    6aba:	30f0      	adds	r0, #240	; 0xf0
    6abc:	4770      	bx	lr
    6abe:	4802      	ldr	r0, [pc, #8]	; (6ac8 <_localeconv_r+0x18>)
    6ac0:	e7fb      	b.n	6aba <_localeconv_r+0xa>
    6ac2:	46c0      	nop			; (mov r8, r8)
    6ac4:	20000014 	.word	0x20000014
    6ac8:	20000854 	.word	0x20000854

00006acc <_malloc_r>:
    6acc:	b5f0      	push	{r4, r5, r6, r7, lr}
    6ace:	4657      	mov	r7, sl
    6ad0:	4645      	mov	r5, r8
    6ad2:	46de      	mov	lr, fp
    6ad4:	464e      	mov	r6, r9
    6ad6:	b5e0      	push	{r5, r6, r7, lr}
    6ad8:	000d      	movs	r5, r1
    6ada:	350b      	adds	r5, #11
    6adc:	b083      	sub	sp, #12
    6ade:	0007      	movs	r7, r0
    6ae0:	2d16      	cmp	r5, #22
    6ae2:	d800      	bhi.n	6ae6 <_malloc_r+0x1a>
    6ae4:	e09f      	b.n	6c26 <_malloc_r+0x15a>
    6ae6:	2307      	movs	r3, #7
    6ae8:	439d      	bics	r5, r3
    6aea:	d500      	bpl.n	6aee <_malloc_r+0x22>
    6aec:	e0c4      	b.n	6c78 <_malloc_r+0x1ac>
    6aee:	42a9      	cmp	r1, r5
    6af0:	d900      	bls.n	6af4 <_malloc_r+0x28>
    6af2:	e0c1      	b.n	6c78 <_malloc_r+0x1ac>
    6af4:	f000 fade 	bl	70b4 <__malloc_lock>
    6af8:	23f8      	movs	r3, #248	; 0xf8
    6afa:	33ff      	adds	r3, #255	; 0xff
    6afc:	429d      	cmp	r5, r3
    6afe:	d800      	bhi.n	6b02 <_malloc_r+0x36>
    6b00:	e28f      	b.n	7022 <_malloc_r+0x556>
    6b02:	0a68      	lsrs	r0, r5, #9
    6b04:	d100      	bne.n	6b08 <_malloc_r+0x3c>
    6b06:	e0bb      	b.n	6c80 <_malloc_r+0x1b4>
    6b08:	2804      	cmp	r0, #4
    6b0a:	d900      	bls.n	6b0e <_malloc_r+0x42>
    6b0c:	e162      	b.n	6dd4 <_malloc_r+0x308>
    6b0e:	2338      	movs	r3, #56	; 0x38
    6b10:	4698      	mov	r8, r3
    6b12:	09a8      	lsrs	r0, r5, #6
    6b14:	4480      	add	r8, r0
    6b16:	3039      	adds	r0, #57	; 0x39
    6b18:	00c1      	lsls	r1, r0, #3
    6b1a:	4ed2      	ldr	r6, [pc, #840]	; (6e64 <_malloc_r+0x398>)
    6b1c:	1871      	adds	r1, r6, r1
    6b1e:	3908      	subs	r1, #8
    6b20:	68cc      	ldr	r4, [r1, #12]
    6b22:	42a1      	cmp	r1, r4
    6b24:	d019      	beq.n	6b5a <_malloc_r+0x8e>
    6b26:	2303      	movs	r3, #3
    6b28:	6862      	ldr	r2, [r4, #4]
    6b2a:	439a      	bics	r2, r3
    6b2c:	0013      	movs	r3, r2
    6b2e:	1b52      	subs	r2, r2, r5
    6b30:	2a0f      	cmp	r2, #15
    6b32:	dd00      	ble.n	6b36 <_malloc_r+0x6a>
    6b34:	e0aa      	b.n	6c8c <_malloc_r+0x1c0>
    6b36:	2a00      	cmp	r2, #0
    6b38:	db00      	blt.n	6b3c <_malloc_r+0x70>
    6b3a:	e088      	b.n	6c4e <_malloc_r+0x182>
    6b3c:	2303      	movs	r3, #3
    6b3e:	469c      	mov	ip, r3
    6b40:	e008      	b.n	6b54 <_malloc_r+0x88>
    6b42:	4662      	mov	r2, ip
    6b44:	6863      	ldr	r3, [r4, #4]
    6b46:	4393      	bics	r3, r2
    6b48:	1b5a      	subs	r2, r3, r5
    6b4a:	2a0f      	cmp	r2, #15
    6b4c:	dd00      	ble.n	6b50 <_malloc_r+0x84>
    6b4e:	e09d      	b.n	6c8c <_malloc_r+0x1c0>
    6b50:	2a00      	cmp	r2, #0
    6b52:	da7c      	bge.n	6c4e <_malloc_r+0x182>
    6b54:	68e4      	ldr	r4, [r4, #12]
    6b56:	42a1      	cmp	r1, r4
    6b58:	d1f3      	bne.n	6b42 <_malloc_r+0x76>
    6b5a:	0032      	movs	r2, r6
    6b5c:	6934      	ldr	r4, [r6, #16]
    6b5e:	3208      	adds	r2, #8
    6b60:	4294      	cmp	r4, r2
    6b62:	d100      	bne.n	6b66 <_malloc_r+0x9a>
    6b64:	e190      	b.n	6e88 <_malloc_r+0x3bc>
    6b66:	2303      	movs	r3, #3
    6b68:	6861      	ldr	r1, [r4, #4]
    6b6a:	4399      	bics	r1, r3
    6b6c:	4689      	mov	r9, r1
    6b6e:	1b49      	subs	r1, r1, r5
    6b70:	290f      	cmp	r1, #15
    6b72:	dd00      	ble.n	6b76 <_malloc_r+0xaa>
    6b74:	e162      	b.n	6e3c <_malloc_r+0x370>
    6b76:	6172      	str	r2, [r6, #20]
    6b78:	6132      	str	r2, [r6, #16]
    6b7a:	2900      	cmp	r1, #0
    6b7c:	db00      	blt.n	6b80 <_malloc_r+0xb4>
    6b7e:	e087      	b.n	6c90 <_malloc_r+0x1c4>
    6b80:	4ab9      	ldr	r2, [pc, #740]	; (6e68 <_malloc_r+0x39c>)
    6b82:	464b      	mov	r3, r9
    6b84:	4591      	cmp	r9, r2
    6b86:	d900      	bls.n	6b8a <_malloc_r+0xbe>
    6b88:	e130      	b.n	6dec <_malloc_r+0x320>
    6b8a:	08db      	lsrs	r3, r3, #3
    6b8c:	3aff      	subs	r2, #255	; 0xff
    6b8e:	1099      	asrs	r1, r3, #2
    6b90:	3aff      	subs	r2, #255	; 0xff
    6b92:	408a      	lsls	r2, r1
    6b94:	00db      	lsls	r3, r3, #3
    6b96:	6871      	ldr	r1, [r6, #4]
    6b98:	199b      	adds	r3, r3, r6
    6b9a:	430a      	orrs	r2, r1
    6b9c:	6899      	ldr	r1, [r3, #8]
    6b9e:	6072      	str	r2, [r6, #4]
    6ba0:	60e3      	str	r3, [r4, #12]
    6ba2:	60a1      	str	r1, [r4, #8]
    6ba4:	609c      	str	r4, [r3, #8]
    6ba6:	0013      	movs	r3, r2
    6ba8:	60cc      	str	r4, [r1, #12]
    6baa:	2101      	movs	r1, #1
    6bac:	1082      	asrs	r2, r0, #2
    6bae:	4091      	lsls	r1, r2
    6bb0:	4299      	cmp	r1, r3
    6bb2:	d86f      	bhi.n	6c94 <_malloc_r+0x1c8>
    6bb4:	420b      	tst	r3, r1
    6bb6:	d105      	bne.n	6bc4 <_malloc_r+0xf8>
    6bb8:	2203      	movs	r2, #3
    6bba:	4390      	bics	r0, r2
    6bbc:	0049      	lsls	r1, r1, #1
    6bbe:	3004      	adds	r0, #4
    6bc0:	420b      	tst	r3, r1
    6bc2:	d0fb      	beq.n	6bbc <_malloc_r+0xf0>
    6bc4:	2303      	movs	r3, #3
    6bc6:	4698      	mov	r8, r3
    6bc8:	00c3      	lsls	r3, r0, #3
    6bca:	4699      	mov	r9, r3
    6bcc:	44b1      	add	r9, r6
    6bce:	46cc      	mov	ip, r9
    6bd0:	4682      	mov	sl, r0
    6bd2:	4663      	mov	r3, ip
    6bd4:	68dc      	ldr	r4, [r3, #12]
    6bd6:	45a4      	cmp	ip, r4
    6bd8:	d107      	bne.n	6bea <_malloc_r+0x11e>
    6bda:	e157      	b.n	6e8c <_malloc_r+0x3c0>
    6bdc:	2a00      	cmp	r2, #0
    6bde:	db00      	blt.n	6be2 <_malloc_r+0x116>
    6be0:	e166      	b.n	6eb0 <_malloc_r+0x3e4>
    6be2:	68e4      	ldr	r4, [r4, #12]
    6be4:	45a4      	cmp	ip, r4
    6be6:	d100      	bne.n	6bea <_malloc_r+0x11e>
    6be8:	e150      	b.n	6e8c <_malloc_r+0x3c0>
    6bea:	4642      	mov	r2, r8
    6bec:	6863      	ldr	r3, [r4, #4]
    6bee:	4393      	bics	r3, r2
    6bf0:	1b5a      	subs	r2, r3, r5
    6bf2:	2a0f      	cmp	r2, #15
    6bf4:	ddf2      	ble.n	6bdc <_malloc_r+0x110>
    6bf6:	2001      	movs	r0, #1
    6bf8:	4680      	mov	r8, r0
    6bfa:	1961      	adds	r1, r4, r5
    6bfc:	4305      	orrs	r5, r0
    6bfe:	6065      	str	r5, [r4, #4]
    6c00:	68a0      	ldr	r0, [r4, #8]
    6c02:	68e5      	ldr	r5, [r4, #12]
    6c04:	3608      	adds	r6, #8
    6c06:	60c5      	str	r5, [r0, #12]
    6c08:	60a8      	str	r0, [r5, #8]
    6c0a:	4640      	mov	r0, r8
    6c0c:	60f1      	str	r1, [r6, #12]
    6c0e:	60b1      	str	r1, [r6, #8]
    6c10:	4310      	orrs	r0, r2
    6c12:	6048      	str	r0, [r1, #4]
    6c14:	60ce      	str	r6, [r1, #12]
    6c16:	608e      	str	r6, [r1, #8]
    6c18:	0038      	movs	r0, r7
    6c1a:	50e2      	str	r2, [r4, r3]
    6c1c:	f000 fa52 	bl	70c4 <__malloc_unlock>
    6c20:	0020      	movs	r0, r4
    6c22:	3008      	adds	r0, #8
    6c24:	e021      	b.n	6c6a <_malloc_r+0x19e>
    6c26:	2910      	cmp	r1, #16
    6c28:	d826      	bhi.n	6c78 <_malloc_r+0x1ac>
    6c2a:	0038      	movs	r0, r7
    6c2c:	f000 fa42 	bl	70b4 <__malloc_lock>
    6c30:	2510      	movs	r5, #16
    6c32:	2318      	movs	r3, #24
    6c34:	2002      	movs	r0, #2
    6c36:	4e8b      	ldr	r6, [pc, #556]	; (6e64 <_malloc_r+0x398>)
    6c38:	18f3      	adds	r3, r6, r3
    6c3a:	001a      	movs	r2, r3
    6c3c:	685c      	ldr	r4, [r3, #4]
    6c3e:	3a08      	subs	r2, #8
    6c40:	4294      	cmp	r4, r2
    6c42:	d100      	bne.n	6c46 <_malloc_r+0x17a>
    6c44:	e12e      	b.n	6ea4 <_malloc_r+0x3d8>
    6c46:	2303      	movs	r3, #3
    6c48:	6862      	ldr	r2, [r4, #4]
    6c4a:	439a      	bics	r2, r3
    6c4c:	0013      	movs	r3, r2
    6c4e:	68e2      	ldr	r2, [r4, #12]
    6c50:	68a1      	ldr	r1, [r4, #8]
    6c52:	60ca      	str	r2, [r1, #12]
    6c54:	6091      	str	r1, [r2, #8]
    6c56:	2201      	movs	r2, #1
    6c58:	18e3      	adds	r3, r4, r3
    6c5a:	6859      	ldr	r1, [r3, #4]
    6c5c:	0038      	movs	r0, r7
    6c5e:	430a      	orrs	r2, r1
    6c60:	605a      	str	r2, [r3, #4]
    6c62:	f000 fa2f 	bl	70c4 <__malloc_unlock>
    6c66:	0020      	movs	r0, r4
    6c68:	3008      	adds	r0, #8
    6c6a:	b003      	add	sp, #12
    6c6c:	bc3c      	pop	{r2, r3, r4, r5}
    6c6e:	4690      	mov	r8, r2
    6c70:	4699      	mov	r9, r3
    6c72:	46a2      	mov	sl, r4
    6c74:	46ab      	mov	fp, r5
    6c76:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6c78:	230c      	movs	r3, #12
    6c7a:	2000      	movs	r0, #0
    6c7c:	603b      	str	r3, [r7, #0]
    6c7e:	e7f4      	b.n	6c6a <_malloc_r+0x19e>
    6c80:	2180      	movs	r1, #128	; 0x80
    6c82:	233f      	movs	r3, #63	; 0x3f
    6c84:	2040      	movs	r0, #64	; 0x40
    6c86:	0089      	lsls	r1, r1, #2
    6c88:	4698      	mov	r8, r3
    6c8a:	e746      	b.n	6b1a <_malloc_r+0x4e>
    6c8c:	4640      	mov	r0, r8
    6c8e:	e764      	b.n	6b5a <_malloc_r+0x8e>
    6c90:	464b      	mov	r3, r9
    6c92:	e7e0      	b.n	6c56 <_malloc_r+0x18a>
    6c94:	2303      	movs	r3, #3
    6c96:	68b4      	ldr	r4, [r6, #8]
    6c98:	6862      	ldr	r2, [r4, #4]
    6c9a:	439a      	bics	r2, r3
    6c9c:	4690      	mov	r8, r2
    6c9e:	42aa      	cmp	r2, r5
    6ca0:	d303      	bcc.n	6caa <_malloc_r+0x1de>
    6ca2:	1b53      	subs	r3, r2, r5
    6ca4:	2b0f      	cmp	r3, #15
    6ca6:	dd00      	ble.n	6caa <_malloc_r+0x1de>
    6ca8:	e086      	b.n	6db8 <_malloc_r+0x2ec>
    6caa:	0023      	movs	r3, r4
    6cac:	4443      	add	r3, r8
    6cae:	4a6f      	ldr	r2, [pc, #444]	; (6e6c <_malloc_r+0x3a0>)
    6cb0:	9301      	str	r3, [sp, #4]
    6cb2:	4b6f      	ldr	r3, [pc, #444]	; (6e70 <_malloc_r+0x3a4>)
    6cb4:	4693      	mov	fp, r2
    6cb6:	681b      	ldr	r3, [r3, #0]
    6cb8:	6812      	ldr	r2, [r2, #0]
    6cba:	18eb      	adds	r3, r5, r3
    6cbc:	3201      	adds	r2, #1
    6cbe:	d100      	bne.n	6cc2 <_malloc_r+0x1f6>
    6cc0:	e168      	b.n	6f94 <_malloc_r+0x4c8>
    6cc2:	4a6c      	ldr	r2, [pc, #432]	; (6e74 <_malloc_r+0x3a8>)
    6cc4:	4694      	mov	ip, r2
    6cc6:	4463      	add	r3, ip
    6cc8:	0b1b      	lsrs	r3, r3, #12
    6cca:	031b      	lsls	r3, r3, #12
    6ccc:	9300      	str	r3, [sp, #0]
    6cce:	9900      	ldr	r1, [sp, #0]
    6cd0:	0038      	movs	r0, r7
    6cd2:	f000 fd47 	bl	7764 <_sbrk_r>
    6cd6:	0003      	movs	r3, r0
    6cd8:	4681      	mov	r9, r0
    6cda:	3301      	adds	r3, #1
    6cdc:	d061      	beq.n	6da2 <_malloc_r+0x2d6>
    6cde:	9b01      	ldr	r3, [sp, #4]
    6ce0:	4283      	cmp	r3, r0
    6ce2:	d900      	bls.n	6ce6 <_malloc_r+0x21a>
    6ce4:	e0ff      	b.n	6ee6 <_malloc_r+0x41a>
    6ce6:	4b64      	ldr	r3, [pc, #400]	; (6e78 <_malloc_r+0x3ac>)
    6ce8:	9a00      	ldr	r2, [sp, #0]
    6cea:	469a      	mov	sl, r3
    6cec:	681b      	ldr	r3, [r3, #0]
    6cee:	469c      	mov	ip, r3
    6cf0:	4653      	mov	r3, sl
    6cf2:	4462      	add	r2, ip
    6cf4:	601a      	str	r2, [r3, #0]
    6cf6:	9b01      	ldr	r3, [sp, #4]
    6cf8:	0011      	movs	r1, r2
    6cfa:	4283      	cmp	r3, r0
    6cfc:	d100      	bne.n	6d00 <_malloc_r+0x234>
    6cfe:	e155      	b.n	6fac <_malloc_r+0x4e0>
    6d00:	465b      	mov	r3, fp
    6d02:	681b      	ldr	r3, [r3, #0]
    6d04:	3301      	adds	r3, #1
    6d06:	d100      	bne.n	6d0a <_malloc_r+0x23e>
    6d08:	e16c      	b.n	6fe4 <_malloc_r+0x518>
    6d0a:	464b      	mov	r3, r9
    6d0c:	9a01      	ldr	r2, [sp, #4]
    6d0e:	1a9b      	subs	r3, r3, r2
    6d10:	1859      	adds	r1, r3, r1
    6d12:	4653      	mov	r3, sl
    6d14:	6019      	str	r1, [r3, #0]
    6d16:	2307      	movs	r3, #7
    6d18:	464a      	mov	r2, r9
    6d1a:	4013      	ands	r3, r2
    6d1c:	d100      	bne.n	6d20 <_malloc_r+0x254>
    6d1e:	e124      	b.n	6f6a <_malloc_r+0x49e>
    6d20:	2108      	movs	r1, #8
    6d22:	4689      	mov	r9, r1
    6d24:	4955      	ldr	r1, [pc, #340]	; (6e7c <_malloc_r+0x3b0>)
    6d26:	1ad2      	subs	r2, r2, r3
    6d28:	4491      	add	r9, r2
    6d2a:	1acb      	subs	r3, r1, r3
    6d2c:	9a00      	ldr	r2, [sp, #0]
    6d2e:	0038      	movs	r0, r7
    6d30:	444a      	add	r2, r9
    6d32:	0511      	lsls	r1, r2, #20
    6d34:	0d09      	lsrs	r1, r1, #20
    6d36:	1a5b      	subs	r3, r3, r1
    6d38:	0019      	movs	r1, r3
    6d3a:	469b      	mov	fp, r3
    6d3c:	f000 fd12 	bl	7764 <_sbrk_r>
    6d40:	1c43      	adds	r3, r0, #1
    6d42:	d100      	bne.n	6d46 <_malloc_r+0x27a>
    6d44:	e142      	b.n	6fcc <_malloc_r+0x500>
    6d46:	464b      	mov	r3, r9
    6d48:	1ac0      	subs	r0, r0, r3
    6d4a:	2301      	movs	r3, #1
    6d4c:	4458      	add	r0, fp
    6d4e:	4318      	orrs	r0, r3
    6d50:	4653      	mov	r3, sl
    6d52:	681b      	ldr	r3, [r3, #0]
    6d54:	445b      	add	r3, fp
    6d56:	0019      	movs	r1, r3
    6d58:	4653      	mov	r3, sl
    6d5a:	6019      	str	r1, [r3, #0]
    6d5c:	464b      	mov	r3, r9
    6d5e:	60b3      	str	r3, [r6, #8]
    6d60:	6058      	str	r0, [r3, #4]
    6d62:	42b4      	cmp	r4, r6
    6d64:	d013      	beq.n	6d8e <_malloc_r+0x2c2>
    6d66:	4643      	mov	r3, r8
    6d68:	2b0f      	cmp	r3, #15
    6d6a:	d800      	bhi.n	6d6e <_malloc_r+0x2a2>
    6d6c:	e0e8      	b.n	6f40 <_malloc_r+0x474>
    6d6e:	4643      	mov	r3, r8
    6d70:	2207      	movs	r2, #7
    6d72:	6860      	ldr	r0, [r4, #4]
    6d74:	3b0c      	subs	r3, #12
    6d76:	4393      	bics	r3, r2
    6d78:	3a06      	subs	r2, #6
    6d7a:	4002      	ands	r2, r0
    6d7c:	2005      	movs	r0, #5
    6d7e:	431a      	orrs	r2, r3
    6d80:	6062      	str	r2, [r4, #4]
    6d82:	18e2      	adds	r2, r4, r3
    6d84:	6050      	str	r0, [r2, #4]
    6d86:	6090      	str	r0, [r2, #8]
    6d88:	2b0f      	cmp	r3, #15
    6d8a:	d900      	bls.n	6d8e <_malloc_r+0x2c2>
    6d8c:	e122      	b.n	6fd4 <_malloc_r+0x508>
    6d8e:	4b3c      	ldr	r3, [pc, #240]	; (6e80 <_malloc_r+0x3b4>)
    6d90:	681a      	ldr	r2, [r3, #0]
    6d92:	4291      	cmp	r1, r2
    6d94:	d900      	bls.n	6d98 <_malloc_r+0x2cc>
    6d96:	6019      	str	r1, [r3, #0]
    6d98:	4b3a      	ldr	r3, [pc, #232]	; (6e84 <_malloc_r+0x3b8>)
    6d9a:	681a      	ldr	r2, [r3, #0]
    6d9c:	4291      	cmp	r1, r2
    6d9e:	d900      	bls.n	6da2 <_malloc_r+0x2d6>
    6da0:	6019      	str	r1, [r3, #0]
    6da2:	2303      	movs	r3, #3
    6da4:	68b4      	ldr	r4, [r6, #8]
    6da6:	6862      	ldr	r2, [r4, #4]
    6da8:	439a      	bics	r2, r3
    6daa:	1b53      	subs	r3, r2, r5
    6dac:	4295      	cmp	r5, r2
    6dae:	d900      	bls.n	6db2 <_malloc_r+0x2e6>
    6db0:	e0c9      	b.n	6f46 <_malloc_r+0x47a>
    6db2:	2b0f      	cmp	r3, #15
    6db4:	dc00      	bgt.n	6db8 <_malloc_r+0x2ec>
    6db6:	e0c6      	b.n	6f46 <_malloc_r+0x47a>
    6db8:	2201      	movs	r2, #1
    6dba:	0029      	movs	r1, r5
    6dbc:	4313      	orrs	r3, r2
    6dbe:	4311      	orrs	r1, r2
    6dc0:	1965      	adds	r5, r4, r5
    6dc2:	6061      	str	r1, [r4, #4]
    6dc4:	0038      	movs	r0, r7
    6dc6:	60b5      	str	r5, [r6, #8]
    6dc8:	606b      	str	r3, [r5, #4]
    6dca:	f000 f97b 	bl	70c4 <__malloc_unlock>
    6dce:	0020      	movs	r0, r4
    6dd0:	3008      	adds	r0, #8
    6dd2:	e74a      	b.n	6c6a <_malloc_r+0x19e>
    6dd4:	2814      	cmp	r0, #20
    6dd6:	d97a      	bls.n	6ece <_malloc_r+0x402>
    6dd8:	2854      	cmp	r0, #84	; 0x54
    6dda:	d900      	bls.n	6dde <_malloc_r+0x312>
    6ddc:	e0ba      	b.n	6f54 <_malloc_r+0x488>
    6dde:	236e      	movs	r3, #110	; 0x6e
    6de0:	4698      	mov	r8, r3
    6de2:	0b28      	lsrs	r0, r5, #12
    6de4:	4480      	add	r8, r0
    6de6:	306f      	adds	r0, #111	; 0x6f
    6de8:	00c1      	lsls	r1, r0, #3
    6dea:	e696      	b.n	6b1a <_malloc_r+0x4e>
    6dec:	0a5a      	lsrs	r2, r3, #9
    6dee:	2a04      	cmp	r2, #4
    6df0:	d973      	bls.n	6eda <_malloc_r+0x40e>
    6df2:	2a14      	cmp	r2, #20
    6df4:	d900      	bls.n	6df8 <_malloc_r+0x32c>
    6df6:	e0d0      	b.n	6f9a <_malloc_r+0x4ce>
    6df8:	0011      	movs	r1, r2
    6dfa:	325c      	adds	r2, #92	; 0x5c
    6dfc:	315b      	adds	r1, #91	; 0x5b
    6dfe:	00d2      	lsls	r2, r2, #3
    6e00:	2308      	movs	r3, #8
    6e02:	425b      	negs	r3, r3
    6e04:	469c      	mov	ip, r3
    6e06:	18b2      	adds	r2, r6, r2
    6e08:	4494      	add	ip, r2
    6e0a:	4663      	mov	r3, ip
    6e0c:	689a      	ldr	r2, [r3, #8]
    6e0e:	2303      	movs	r3, #3
    6e10:	4698      	mov	r8, r3
    6e12:	4594      	cmp	ip, r2
    6e14:	d100      	bne.n	6e18 <_malloc_r+0x34c>
    6e16:	e0ab      	b.n	6f70 <_malloc_r+0x4a4>
    6e18:	4643      	mov	r3, r8
    6e1a:	6851      	ldr	r1, [r2, #4]
    6e1c:	4399      	bics	r1, r3
    6e1e:	4589      	cmp	r9, r1
    6e20:	d300      	bcc.n	6e24 <_malloc_r+0x358>
    6e22:	e095      	b.n	6f50 <_malloc_r+0x484>
    6e24:	6892      	ldr	r2, [r2, #8]
    6e26:	4594      	cmp	ip, r2
    6e28:	d1f6      	bne.n	6e18 <_malloc_r+0x34c>
    6e2a:	4663      	mov	r3, ip
    6e2c:	68da      	ldr	r2, [r3, #12]
    6e2e:	6873      	ldr	r3, [r6, #4]
    6e30:	4661      	mov	r1, ip
    6e32:	60e2      	str	r2, [r4, #12]
    6e34:	60a1      	str	r1, [r4, #8]
    6e36:	6094      	str	r4, [r2, #8]
    6e38:	60cc      	str	r4, [r1, #12]
    6e3a:	e6b6      	b.n	6baa <_malloc_r+0xde>
    6e3c:	2301      	movs	r3, #1
    6e3e:	1960      	adds	r0, r4, r5
    6e40:	431d      	orrs	r5, r3
    6e42:	6065      	str	r5, [r4, #4]
    6e44:	6170      	str	r0, [r6, #20]
    6e46:	6130      	str	r0, [r6, #16]
    6e48:	60c2      	str	r2, [r0, #12]
    6e4a:	6082      	str	r2, [r0, #8]
    6e4c:	001a      	movs	r2, r3
    6e4e:	464b      	mov	r3, r9
    6e50:	430a      	orrs	r2, r1
    6e52:	6042      	str	r2, [r0, #4]
    6e54:	0038      	movs	r0, r7
    6e56:	50e1      	str	r1, [r4, r3]
    6e58:	f000 f934 	bl	70c4 <__malloc_unlock>
    6e5c:	0020      	movs	r0, r4
    6e5e:	3008      	adds	r0, #8
    6e60:	e703      	b.n	6c6a <_malloc_r+0x19e>
    6e62:	46c0      	nop			; (mov r8, r8)
    6e64:	20000444 	.word	0x20000444
    6e68:	000001ff 	.word	0x000001ff
    6e6c:	2000084c 	.word	0x2000084c
    6e70:	20000b74 	.word	0x20000b74
    6e74:	0000100f 	.word	0x0000100f
    6e78:	20000b44 	.word	0x20000b44
    6e7c:	00001008 	.word	0x00001008
    6e80:	20000b6c 	.word	0x20000b6c
    6e84:	20000b70 	.word	0x20000b70
    6e88:	6873      	ldr	r3, [r6, #4]
    6e8a:	e68e      	b.n	6baa <_malloc_r+0xde>
    6e8c:	2308      	movs	r3, #8
    6e8e:	469b      	mov	fp, r3
    6e90:	3b07      	subs	r3, #7
    6e92:	44dc      	add	ip, fp
    6e94:	469b      	mov	fp, r3
    6e96:	44da      	add	sl, fp
    6e98:	4643      	mov	r3, r8
    6e9a:	4652      	mov	r2, sl
    6e9c:	4213      	tst	r3, r2
    6e9e:	d000      	beq.n	6ea2 <_malloc_r+0x3d6>
    6ea0:	e697      	b.n	6bd2 <_malloc_r+0x106>
    6ea2:	e037      	b.n	6f14 <_malloc_r+0x448>
    6ea4:	68dc      	ldr	r4, [r3, #12]
    6ea6:	3002      	adds	r0, #2
    6ea8:	42a3      	cmp	r3, r4
    6eaa:	d100      	bne.n	6eae <_malloc_r+0x3e2>
    6eac:	e655      	b.n	6b5a <_malloc_r+0x8e>
    6eae:	e6ca      	b.n	6c46 <_malloc_r+0x17a>
    6eb0:	2201      	movs	r2, #1
    6eb2:	18e3      	adds	r3, r4, r3
    6eb4:	6859      	ldr	r1, [r3, #4]
    6eb6:	0038      	movs	r0, r7
    6eb8:	430a      	orrs	r2, r1
    6eba:	605a      	str	r2, [r3, #4]
    6ebc:	68e3      	ldr	r3, [r4, #12]
    6ebe:	68a2      	ldr	r2, [r4, #8]
    6ec0:	60d3      	str	r3, [r2, #12]
    6ec2:	609a      	str	r2, [r3, #8]
    6ec4:	f000 f8fe 	bl	70c4 <__malloc_unlock>
    6ec8:	0020      	movs	r0, r4
    6eca:	3008      	adds	r0, #8
    6ecc:	e6cd      	b.n	6c6a <_malloc_r+0x19e>
    6ece:	235b      	movs	r3, #91	; 0x5b
    6ed0:	4698      	mov	r8, r3
    6ed2:	4480      	add	r8, r0
    6ed4:	305c      	adds	r0, #92	; 0x5c
    6ed6:	00c1      	lsls	r1, r0, #3
    6ed8:	e61f      	b.n	6b1a <_malloc_r+0x4e>
    6eda:	099a      	lsrs	r2, r3, #6
    6edc:	0011      	movs	r1, r2
    6ede:	3239      	adds	r2, #57	; 0x39
    6ee0:	3138      	adds	r1, #56	; 0x38
    6ee2:	00d2      	lsls	r2, r2, #3
    6ee4:	e78c      	b.n	6e00 <_malloc_r+0x334>
    6ee6:	42b4      	cmp	r4, r6
    6ee8:	d000      	beq.n	6eec <_malloc_r+0x420>
    6eea:	e75a      	b.n	6da2 <_malloc_r+0x2d6>
    6eec:	4b4f      	ldr	r3, [pc, #316]	; (702c <_malloc_r+0x560>)
    6eee:	9a00      	ldr	r2, [sp, #0]
    6ef0:	469a      	mov	sl, r3
    6ef2:	681b      	ldr	r3, [r3, #0]
    6ef4:	469c      	mov	ip, r3
    6ef6:	4653      	mov	r3, sl
    6ef8:	4462      	add	r2, ip
    6efa:	0011      	movs	r1, r2
    6efc:	601a      	str	r2, [r3, #0]
    6efe:	e6ff      	b.n	6d00 <_malloc_r+0x234>
    6f00:	2308      	movs	r3, #8
    6f02:	425b      	negs	r3, r3
    6f04:	469c      	mov	ip, r3
    6f06:	44e1      	add	r9, ip
    6f08:	464b      	mov	r3, r9
    6f0a:	689b      	ldr	r3, [r3, #8]
    6f0c:	3801      	subs	r0, #1
    6f0e:	4599      	cmp	r9, r3
    6f10:	d000      	beq.n	6f14 <_malloc_r+0x448>
    6f12:	e084      	b.n	701e <_malloc_r+0x552>
    6f14:	4643      	mov	r3, r8
    6f16:	4203      	tst	r3, r0
    6f18:	d1f2      	bne.n	6f00 <_malloc_r+0x434>
    6f1a:	6873      	ldr	r3, [r6, #4]
    6f1c:	438b      	bics	r3, r1
    6f1e:	6073      	str	r3, [r6, #4]
    6f20:	0049      	lsls	r1, r1, #1
    6f22:	4299      	cmp	r1, r3
    6f24:	d900      	bls.n	6f28 <_malloc_r+0x45c>
    6f26:	e6b5      	b.n	6c94 <_malloc_r+0x1c8>
    6f28:	2900      	cmp	r1, #0
    6f2a:	d100      	bne.n	6f2e <_malloc_r+0x462>
    6f2c:	e6b2      	b.n	6c94 <_malloc_r+0x1c8>
    6f2e:	4650      	mov	r0, sl
    6f30:	420b      	tst	r3, r1
    6f32:	d000      	beq.n	6f36 <_malloc_r+0x46a>
    6f34:	e648      	b.n	6bc8 <_malloc_r+0xfc>
    6f36:	0049      	lsls	r1, r1, #1
    6f38:	3004      	adds	r0, #4
    6f3a:	420b      	tst	r3, r1
    6f3c:	d0fb      	beq.n	6f36 <_malloc_r+0x46a>
    6f3e:	e643      	b.n	6bc8 <_malloc_r+0xfc>
    6f40:	2301      	movs	r3, #1
    6f42:	464a      	mov	r2, r9
    6f44:	6053      	str	r3, [r2, #4]
    6f46:	0038      	movs	r0, r7
    6f48:	f000 f8bc 	bl	70c4 <__malloc_unlock>
    6f4c:	2000      	movs	r0, #0
    6f4e:	e68c      	b.n	6c6a <_malloc_r+0x19e>
    6f50:	4694      	mov	ip, r2
    6f52:	e76a      	b.n	6e2a <_malloc_r+0x35e>
    6f54:	23aa      	movs	r3, #170	; 0xaa
    6f56:	005b      	lsls	r3, r3, #1
    6f58:	4298      	cmp	r0, r3
    6f5a:	d811      	bhi.n	6f80 <_malloc_r+0x4b4>
    6f5c:	3bdd      	subs	r3, #221	; 0xdd
    6f5e:	4698      	mov	r8, r3
    6f60:	0be8      	lsrs	r0, r5, #15
    6f62:	4480      	add	r8, r0
    6f64:	3078      	adds	r0, #120	; 0x78
    6f66:	00c1      	lsls	r1, r0, #3
    6f68:	e5d7      	b.n	6b1a <_malloc_r+0x4e>
    6f6a:	2380      	movs	r3, #128	; 0x80
    6f6c:	015b      	lsls	r3, r3, #5
    6f6e:	e6dd      	b.n	6d2c <_malloc_r+0x260>
    6f70:	1089      	asrs	r1, r1, #2
    6f72:	3b02      	subs	r3, #2
    6f74:	408b      	lsls	r3, r1
    6f76:	6872      	ldr	r2, [r6, #4]
    6f78:	4313      	orrs	r3, r2
    6f7a:	6073      	str	r3, [r6, #4]
    6f7c:	4662      	mov	r2, ip
    6f7e:	e757      	b.n	6e30 <_malloc_r+0x364>
    6f80:	4b2b      	ldr	r3, [pc, #172]	; (7030 <_malloc_r+0x564>)
    6f82:	4298      	cmp	r0, r3
    6f84:	d81c      	bhi.n	6fc0 <_malloc_r+0x4f4>
    6f86:	237c      	movs	r3, #124	; 0x7c
    6f88:	4698      	mov	r8, r3
    6f8a:	0ca8      	lsrs	r0, r5, #18
    6f8c:	4480      	add	r8, r0
    6f8e:	307d      	adds	r0, #125	; 0x7d
    6f90:	00c1      	lsls	r1, r0, #3
    6f92:	e5c2      	b.n	6b1a <_malloc_r+0x4e>
    6f94:	3310      	adds	r3, #16
    6f96:	9300      	str	r3, [sp, #0]
    6f98:	e699      	b.n	6cce <_malloc_r+0x202>
    6f9a:	2a54      	cmp	r2, #84	; 0x54
    6f9c:	d826      	bhi.n	6fec <_malloc_r+0x520>
    6f9e:	464b      	mov	r3, r9
    6fa0:	0b1a      	lsrs	r2, r3, #12
    6fa2:	0011      	movs	r1, r2
    6fa4:	326f      	adds	r2, #111	; 0x6f
    6fa6:	316e      	adds	r1, #110	; 0x6e
    6fa8:	00d2      	lsls	r2, r2, #3
    6faa:	e729      	b.n	6e00 <_malloc_r+0x334>
    6fac:	051b      	lsls	r3, r3, #20
    6fae:	d000      	beq.n	6fb2 <_malloc_r+0x4e6>
    6fb0:	e6a6      	b.n	6d00 <_malloc_r+0x234>
    6fb2:	2001      	movs	r0, #1
    6fb4:	9b00      	ldr	r3, [sp, #0]
    6fb6:	68b2      	ldr	r2, [r6, #8]
    6fb8:	4443      	add	r3, r8
    6fba:	4303      	orrs	r3, r0
    6fbc:	6053      	str	r3, [r2, #4]
    6fbe:	e6e6      	b.n	6d8e <_malloc_r+0x2c2>
    6fc0:	21fe      	movs	r1, #254	; 0xfe
    6fc2:	237e      	movs	r3, #126	; 0x7e
    6fc4:	207f      	movs	r0, #127	; 0x7f
    6fc6:	0089      	lsls	r1, r1, #2
    6fc8:	4698      	mov	r8, r3
    6fca:	e5a6      	b.n	6b1a <_malloc_r+0x4e>
    6fcc:	2300      	movs	r3, #0
    6fce:	2001      	movs	r0, #1
    6fd0:	469b      	mov	fp, r3
    6fd2:	e6bd      	b.n	6d50 <_malloc_r+0x284>
    6fd4:	0021      	movs	r1, r4
    6fd6:	0038      	movs	r0, r7
    6fd8:	3108      	adds	r1, #8
    6fda:	f000 fce1 	bl	79a0 <_free_r>
    6fde:	4653      	mov	r3, sl
    6fe0:	6819      	ldr	r1, [r3, #0]
    6fe2:	e6d4      	b.n	6d8e <_malloc_r+0x2c2>
    6fe4:	465b      	mov	r3, fp
    6fe6:	464a      	mov	r2, r9
    6fe8:	601a      	str	r2, [r3, #0]
    6fea:	e694      	b.n	6d16 <_malloc_r+0x24a>
    6fec:	21aa      	movs	r1, #170	; 0xaa
    6fee:	0049      	lsls	r1, r1, #1
    6ff0:	428a      	cmp	r2, r1
    6ff2:	d806      	bhi.n	7002 <_malloc_r+0x536>
    6ff4:	464b      	mov	r3, r9
    6ff6:	0bda      	lsrs	r2, r3, #15
    6ff8:	0011      	movs	r1, r2
    6ffa:	3278      	adds	r2, #120	; 0x78
    6ffc:	3177      	adds	r1, #119	; 0x77
    6ffe:	00d2      	lsls	r2, r2, #3
    7000:	e6fe      	b.n	6e00 <_malloc_r+0x334>
    7002:	490b      	ldr	r1, [pc, #44]	; (7030 <_malloc_r+0x564>)
    7004:	428a      	cmp	r2, r1
    7006:	d806      	bhi.n	7016 <_malloc_r+0x54a>
    7008:	464b      	mov	r3, r9
    700a:	0c9a      	lsrs	r2, r3, #18
    700c:	0011      	movs	r1, r2
    700e:	327d      	adds	r2, #125	; 0x7d
    7010:	317c      	adds	r1, #124	; 0x7c
    7012:	00d2      	lsls	r2, r2, #3
    7014:	e6f4      	b.n	6e00 <_malloc_r+0x334>
    7016:	22fe      	movs	r2, #254	; 0xfe
    7018:	217e      	movs	r1, #126	; 0x7e
    701a:	0092      	lsls	r2, r2, #2
    701c:	e6f0      	b.n	6e00 <_malloc_r+0x334>
    701e:	6873      	ldr	r3, [r6, #4]
    7020:	e77e      	b.n	6f20 <_malloc_r+0x454>
    7022:	002b      	movs	r3, r5
    7024:	08e8      	lsrs	r0, r5, #3
    7026:	3308      	adds	r3, #8
    7028:	e605      	b.n	6c36 <_malloc_r+0x16a>
    702a:	46c0      	nop			; (mov r8, r8)
    702c:	20000b44 	.word	0x20000b44
    7030:	00000554 	.word	0x00000554

00007034 <memchr>:
    7034:	b570      	push	{r4, r5, r6, lr}
    7036:	b2cd      	uxtb	r5, r1
    7038:	0783      	lsls	r3, r0, #30
    703a:	d034      	beq.n	70a6 <memchr+0x72>
    703c:	1e54      	subs	r4, r2, #1
    703e:	2a00      	cmp	r2, #0
    7040:	d01b      	beq.n	707a <memchr+0x46>
    7042:	7803      	ldrb	r3, [r0, #0]
    7044:	42ab      	cmp	r3, r5
    7046:	d019      	beq.n	707c <memchr+0x48>
    7048:	2203      	movs	r2, #3
    704a:	e004      	b.n	7056 <memchr+0x22>
    704c:	3c01      	subs	r4, #1
    704e:	d314      	bcc.n	707a <memchr+0x46>
    7050:	7803      	ldrb	r3, [r0, #0]
    7052:	42ab      	cmp	r3, r5
    7054:	d012      	beq.n	707c <memchr+0x48>
    7056:	3001      	adds	r0, #1
    7058:	4210      	tst	r0, r2
    705a:	d1f7      	bne.n	704c <memchr+0x18>
    705c:	2c03      	cmp	r4, #3
    705e:	d80e      	bhi.n	707e <memchr+0x4a>
    7060:	2c00      	cmp	r4, #0
    7062:	d00a      	beq.n	707a <memchr+0x46>
    7064:	7803      	ldrb	r3, [r0, #0]
    7066:	42ab      	cmp	r3, r5
    7068:	d008      	beq.n	707c <memchr+0x48>
    706a:	1904      	adds	r4, r0, r4
    706c:	e002      	b.n	7074 <memchr+0x40>
    706e:	7803      	ldrb	r3, [r0, #0]
    7070:	42ab      	cmp	r3, r5
    7072:	d003      	beq.n	707c <memchr+0x48>
    7074:	3001      	adds	r0, #1
    7076:	4284      	cmp	r4, r0
    7078:	d1f9      	bne.n	706e <memchr+0x3a>
    707a:	2000      	movs	r0, #0
    707c:	bd70      	pop	{r4, r5, r6, pc}
    707e:	22ff      	movs	r2, #255	; 0xff
    7080:	060b      	lsls	r3, r1, #24
    7082:	0c1b      	lsrs	r3, r3, #16
    7084:	4011      	ands	r1, r2
    7086:	4319      	orrs	r1, r3
    7088:	040b      	lsls	r3, r1, #16
    708a:	4e08      	ldr	r6, [pc, #32]	; (70ac <memchr+0x78>)
    708c:	4319      	orrs	r1, r3
    708e:	6803      	ldr	r3, [r0, #0]
    7090:	4a07      	ldr	r2, [pc, #28]	; (70b0 <memchr+0x7c>)
    7092:	404b      	eors	r3, r1
    7094:	189a      	adds	r2, r3, r2
    7096:	439a      	bics	r2, r3
    7098:	4232      	tst	r2, r6
    709a:	d1e3      	bne.n	7064 <memchr+0x30>
    709c:	3c04      	subs	r4, #4
    709e:	3004      	adds	r0, #4
    70a0:	2c03      	cmp	r4, #3
    70a2:	d8f4      	bhi.n	708e <memchr+0x5a>
    70a4:	e7dc      	b.n	7060 <memchr+0x2c>
    70a6:	0014      	movs	r4, r2
    70a8:	e7d8      	b.n	705c <memchr+0x28>
    70aa:	46c0      	nop			; (mov r8, r8)
    70ac:	80808080 	.word	0x80808080
    70b0:	fefefeff 	.word	0xfefefeff

000070b4 <__malloc_lock>:
    70b4:	b510      	push	{r4, lr}
    70b6:	4802      	ldr	r0, [pc, #8]	; (70c0 <__malloc_lock+0xc>)
    70b8:	f7fd f90a 	bl	42d0 <__retarget_lock_acquire_recursive>
    70bc:	bd10      	pop	{r4, pc}
    70be:	46c0      	nop			; (mov r8, r8)
    70c0:	20000f50 	.word	0x20000f50

000070c4 <__malloc_unlock>:
    70c4:	b510      	push	{r4, lr}
    70c6:	4802      	ldr	r0, [pc, #8]	; (70d0 <__malloc_unlock+0xc>)
    70c8:	f7fd f904 	bl	42d4 <__retarget_lock_release_recursive>
    70cc:	bd10      	pop	{r4, pc}
    70ce:	46c0      	nop			; (mov r8, r8)
    70d0:	20000f50 	.word	0x20000f50

000070d4 <_Balloc>:
    70d4:	b570      	push	{r4, r5, r6, lr}
    70d6:	0004      	movs	r4, r0
    70d8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    70da:	000d      	movs	r5, r1
    70dc:	2800      	cmp	r0, #0
    70de:	d00a      	beq.n	70f6 <_Balloc+0x22>
    70e0:	00ab      	lsls	r3, r5, #2
    70e2:	18c3      	adds	r3, r0, r3
    70e4:	6818      	ldr	r0, [r3, #0]
    70e6:	2800      	cmp	r0, #0
    70e8:	d00f      	beq.n	710a <_Balloc+0x36>
    70ea:	6802      	ldr	r2, [r0, #0]
    70ec:	601a      	str	r2, [r3, #0]
    70ee:	2300      	movs	r3, #0
    70f0:	6103      	str	r3, [r0, #16]
    70f2:	60c3      	str	r3, [r0, #12]
    70f4:	bd70      	pop	{r4, r5, r6, pc}
    70f6:	2221      	movs	r2, #33	; 0x21
    70f8:	2104      	movs	r1, #4
    70fa:	0020      	movs	r0, r4
    70fc:	f000 fbd4 	bl	78a8 <_calloc_r>
    7100:	64e0      	str	r0, [r4, #76]	; 0x4c
    7102:	2800      	cmp	r0, #0
    7104:	d1ec      	bne.n	70e0 <_Balloc+0xc>
    7106:	2000      	movs	r0, #0
    7108:	e7f4      	b.n	70f4 <_Balloc+0x20>
    710a:	2601      	movs	r6, #1
    710c:	40ae      	lsls	r6, r5
    710e:	1d72      	adds	r2, r6, #5
    7110:	0092      	lsls	r2, r2, #2
    7112:	2101      	movs	r1, #1
    7114:	0020      	movs	r0, r4
    7116:	f000 fbc7 	bl	78a8 <_calloc_r>
    711a:	2800      	cmp	r0, #0
    711c:	d0f3      	beq.n	7106 <_Balloc+0x32>
    711e:	6045      	str	r5, [r0, #4]
    7120:	6086      	str	r6, [r0, #8]
    7122:	e7e4      	b.n	70ee <_Balloc+0x1a>

00007124 <_Bfree>:
    7124:	2900      	cmp	r1, #0
    7126:	d006      	beq.n	7136 <_Bfree+0x12>
    7128:	684b      	ldr	r3, [r1, #4]
    712a:	009a      	lsls	r2, r3, #2
    712c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    712e:	189b      	adds	r3, r3, r2
    7130:	681a      	ldr	r2, [r3, #0]
    7132:	600a      	str	r2, [r1, #0]
    7134:	6019      	str	r1, [r3, #0]
    7136:	4770      	bx	lr

00007138 <__multadd>:
    7138:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    713a:	46ce      	mov	lr, r9
    713c:	4647      	mov	r7, r8
    713e:	4681      	mov	r9, r0
    7140:	0008      	movs	r0, r1
    7142:	b580      	push	{r7, lr}
    7144:	000d      	movs	r5, r1
    7146:	690c      	ldr	r4, [r1, #16]
    7148:	001f      	movs	r7, r3
    714a:	2100      	movs	r1, #0
    714c:	3014      	adds	r0, #20
    714e:	6803      	ldr	r3, [r0, #0]
    7150:	3101      	adds	r1, #1
    7152:	041e      	lsls	r6, r3, #16
    7154:	0c36      	lsrs	r6, r6, #16
    7156:	4356      	muls	r6, r2
    7158:	0c1b      	lsrs	r3, r3, #16
    715a:	4353      	muls	r3, r2
    715c:	19f6      	adds	r6, r6, r7
    715e:	0c37      	lsrs	r7, r6, #16
    7160:	19db      	adds	r3, r3, r7
    7162:	0436      	lsls	r6, r6, #16
    7164:	0c1f      	lsrs	r7, r3, #16
    7166:	0c36      	lsrs	r6, r6, #16
    7168:	041b      	lsls	r3, r3, #16
    716a:	199b      	adds	r3, r3, r6
    716c:	c008      	stmia	r0!, {r3}
    716e:	428c      	cmp	r4, r1
    7170:	dced      	bgt.n	714e <__multadd+0x16>
    7172:	2f00      	cmp	r7, #0
    7174:	d008      	beq.n	7188 <__multadd+0x50>
    7176:	68ab      	ldr	r3, [r5, #8]
    7178:	429c      	cmp	r4, r3
    717a:	da0a      	bge.n	7192 <__multadd+0x5a>
    717c:	1d23      	adds	r3, r4, #4
    717e:	009b      	lsls	r3, r3, #2
    7180:	18eb      	adds	r3, r5, r3
    7182:	3401      	adds	r4, #1
    7184:	605f      	str	r7, [r3, #4]
    7186:	612c      	str	r4, [r5, #16]
    7188:	0028      	movs	r0, r5
    718a:	bc0c      	pop	{r2, r3}
    718c:	4690      	mov	r8, r2
    718e:	4699      	mov	r9, r3
    7190:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7192:	686b      	ldr	r3, [r5, #4]
    7194:	4648      	mov	r0, r9
    7196:	1c59      	adds	r1, r3, #1
    7198:	f7ff ff9c 	bl	70d4 <_Balloc>
    719c:	0029      	movs	r1, r5
    719e:	692b      	ldr	r3, [r5, #16]
    71a0:	4680      	mov	r8, r0
    71a2:	1c9a      	adds	r2, r3, #2
    71a4:	0092      	lsls	r2, r2, #2
    71a6:	310c      	adds	r1, #12
    71a8:	300c      	adds	r0, #12
    71aa:	f7fc ff81 	bl	40b0 <memcpy>
    71ae:	686b      	ldr	r3, [r5, #4]
    71b0:	009a      	lsls	r2, r3, #2
    71b2:	464b      	mov	r3, r9
    71b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    71b6:	189b      	adds	r3, r3, r2
    71b8:	681a      	ldr	r2, [r3, #0]
    71ba:	602a      	str	r2, [r5, #0]
    71bc:	601d      	str	r5, [r3, #0]
    71be:	4645      	mov	r5, r8
    71c0:	e7dc      	b.n	717c <__multadd+0x44>
    71c2:	46c0      	nop			; (mov r8, r8)

000071c4 <__hi0bits>:
    71c4:	0003      	movs	r3, r0
    71c6:	0c02      	lsrs	r2, r0, #16
    71c8:	2000      	movs	r0, #0
    71ca:	2a00      	cmp	r2, #0
    71cc:	d101      	bne.n	71d2 <__hi0bits+0xe>
    71ce:	041b      	lsls	r3, r3, #16
    71d0:	3010      	adds	r0, #16
    71d2:	0e1a      	lsrs	r2, r3, #24
    71d4:	d101      	bne.n	71da <__hi0bits+0x16>
    71d6:	3008      	adds	r0, #8
    71d8:	021b      	lsls	r3, r3, #8
    71da:	0f1a      	lsrs	r2, r3, #28
    71dc:	d101      	bne.n	71e2 <__hi0bits+0x1e>
    71de:	3004      	adds	r0, #4
    71e0:	011b      	lsls	r3, r3, #4
    71e2:	0f9a      	lsrs	r2, r3, #30
    71e4:	d101      	bne.n	71ea <__hi0bits+0x26>
    71e6:	3002      	adds	r0, #2
    71e8:	009b      	lsls	r3, r3, #2
    71ea:	2b00      	cmp	r3, #0
    71ec:	db03      	blt.n	71f6 <__hi0bits+0x32>
    71ee:	3001      	adds	r0, #1
    71f0:	005b      	lsls	r3, r3, #1
    71f2:	d400      	bmi.n	71f6 <__hi0bits+0x32>
    71f4:	2020      	movs	r0, #32
    71f6:	4770      	bx	lr

000071f8 <__lo0bits>:
    71f8:	6803      	ldr	r3, [r0, #0]
    71fa:	075a      	lsls	r2, r3, #29
    71fc:	d009      	beq.n	7212 <__lo0bits+0x1a>
    71fe:	2200      	movs	r2, #0
    7200:	07d9      	lsls	r1, r3, #31
    7202:	d404      	bmi.n	720e <__lo0bits+0x16>
    7204:	079a      	lsls	r2, r3, #30
    7206:	d420      	bmi.n	724a <__lo0bits+0x52>
    7208:	2202      	movs	r2, #2
    720a:	089b      	lsrs	r3, r3, #2
    720c:	6003      	str	r3, [r0, #0]
    720e:	0010      	movs	r0, r2
    7210:	4770      	bx	lr
    7212:	0419      	lsls	r1, r3, #16
    7214:	2200      	movs	r2, #0
    7216:	2900      	cmp	r1, #0
    7218:	d101      	bne.n	721e <__lo0bits+0x26>
    721a:	0c1b      	lsrs	r3, r3, #16
    721c:	3210      	adds	r2, #16
    721e:	21ff      	movs	r1, #255	; 0xff
    7220:	4219      	tst	r1, r3
    7222:	d101      	bne.n	7228 <__lo0bits+0x30>
    7224:	3208      	adds	r2, #8
    7226:	0a1b      	lsrs	r3, r3, #8
    7228:	0719      	lsls	r1, r3, #28
    722a:	d101      	bne.n	7230 <__lo0bits+0x38>
    722c:	3204      	adds	r2, #4
    722e:	091b      	lsrs	r3, r3, #4
    7230:	0799      	lsls	r1, r3, #30
    7232:	d101      	bne.n	7238 <__lo0bits+0x40>
    7234:	3202      	adds	r2, #2
    7236:	089b      	lsrs	r3, r3, #2
    7238:	07d9      	lsls	r1, r3, #31
    723a:	d404      	bmi.n	7246 <__lo0bits+0x4e>
    723c:	085b      	lsrs	r3, r3, #1
    723e:	d101      	bne.n	7244 <__lo0bits+0x4c>
    7240:	2220      	movs	r2, #32
    7242:	e7e4      	b.n	720e <__lo0bits+0x16>
    7244:	3201      	adds	r2, #1
    7246:	6003      	str	r3, [r0, #0]
    7248:	e7e1      	b.n	720e <__lo0bits+0x16>
    724a:	085b      	lsrs	r3, r3, #1
    724c:	6003      	str	r3, [r0, #0]
    724e:	2201      	movs	r2, #1
    7250:	e7dd      	b.n	720e <__lo0bits+0x16>
    7252:	46c0      	nop			; (mov r8, r8)

00007254 <__i2b>:
    7254:	b510      	push	{r4, lr}
    7256:	000c      	movs	r4, r1
    7258:	2101      	movs	r1, #1
    725a:	f7ff ff3b 	bl	70d4 <_Balloc>
    725e:	2301      	movs	r3, #1
    7260:	6144      	str	r4, [r0, #20]
    7262:	6103      	str	r3, [r0, #16]
    7264:	bd10      	pop	{r4, pc}
    7266:	46c0      	nop			; (mov r8, r8)

00007268 <__multiply>:
    7268:	b5f0      	push	{r4, r5, r6, r7, lr}
    726a:	4657      	mov	r7, sl
    726c:	464e      	mov	r6, r9
    726e:	4645      	mov	r5, r8
    7270:	46de      	mov	lr, fp
    7272:	b5e0      	push	{r5, r6, r7, lr}
    7274:	6914      	ldr	r4, [r2, #16]
    7276:	690e      	ldr	r6, [r1, #16]
    7278:	b085      	sub	sp, #20
    727a:	000f      	movs	r7, r1
    727c:	0015      	movs	r5, r2
    727e:	42a6      	cmp	r6, r4
    7280:	da04      	bge.n	728c <__multiply+0x24>
    7282:	0033      	movs	r3, r6
    7284:	0017      	movs	r7, r2
    7286:	0026      	movs	r6, r4
    7288:	000d      	movs	r5, r1
    728a:	001c      	movs	r4, r3
    728c:	1933      	adds	r3, r6, r4
    728e:	4698      	mov	r8, r3
    7290:	68bb      	ldr	r3, [r7, #8]
    7292:	6879      	ldr	r1, [r7, #4]
    7294:	4598      	cmp	r8, r3
    7296:	dd00      	ble.n	729a <__multiply+0x32>
    7298:	3101      	adds	r1, #1
    729a:	f7ff ff1b 	bl	70d4 <_Balloc>
    729e:	2214      	movs	r2, #20
    72a0:	0003      	movs	r3, r0
    72a2:	4694      	mov	ip, r2
    72a4:	4463      	add	r3, ip
    72a6:	469b      	mov	fp, r3
    72a8:	4643      	mov	r3, r8
    72aa:	009b      	lsls	r3, r3, #2
    72ac:	445b      	add	r3, fp
    72ae:	0019      	movs	r1, r3
    72b0:	9302      	str	r3, [sp, #8]
    72b2:	9003      	str	r0, [sp, #12]
    72b4:	465b      	mov	r3, fp
    72b6:	2200      	movs	r2, #0
    72b8:	458b      	cmp	fp, r1
    72ba:	d203      	bcs.n	72c4 <__multiply+0x5c>
    72bc:	9902      	ldr	r1, [sp, #8]
    72be:	c304      	stmia	r3!, {r2}
    72c0:	4299      	cmp	r1, r3
    72c2:	d8fc      	bhi.n	72be <__multiply+0x56>
    72c4:	2314      	movs	r3, #20
    72c6:	00a4      	lsls	r4, r4, #2
    72c8:	469a      	mov	sl, r3
    72ca:	3714      	adds	r7, #20
    72cc:	0023      	movs	r3, r4
    72ce:	46bc      	mov	ip, r7
    72d0:	44aa      	add	sl, r5
    72d2:	00b6      	lsls	r6, r6, #2
    72d4:	4453      	add	r3, sl
    72d6:	9700      	str	r7, [sp, #0]
    72d8:	44b4      	add	ip, r6
    72da:	9301      	str	r3, [sp, #4]
    72dc:	459a      	cmp	sl, r3
    72de:	d24f      	bcs.n	7380 <__multiply+0x118>
    72e0:	4653      	mov	r3, sl
    72e2:	681b      	ldr	r3, [r3, #0]
    72e4:	041e      	lsls	r6, r3, #16
    72e6:	0c36      	lsrs	r6, r6, #16
    72e8:	d020      	beq.n	732c <__multiply+0xc4>
    72ea:	465c      	mov	r4, fp
    72ec:	2700      	movs	r7, #0
    72ee:	9d00      	ldr	r5, [sp, #0]
    72f0:	0021      	movs	r1, r4
    72f2:	cc08      	ldmia	r4!, {r3}
    72f4:	cd04      	ldmia	r5!, {r2}
    72f6:	4699      	mov	r9, r3
    72f8:	4648      	mov	r0, r9
    72fa:	0413      	lsls	r3, r2, #16
    72fc:	0c1b      	lsrs	r3, r3, #16
    72fe:	4373      	muls	r3, r6
    7300:	0400      	lsls	r0, r0, #16
    7302:	0c00      	lsrs	r0, r0, #16
    7304:	181b      	adds	r3, r3, r0
    7306:	19d8      	adds	r0, r3, r7
    7308:	0c13      	lsrs	r3, r2, #16
    730a:	464a      	mov	r2, r9
    730c:	4373      	muls	r3, r6
    730e:	0c12      	lsrs	r2, r2, #16
    7310:	189b      	adds	r3, r3, r2
    7312:	0c02      	lsrs	r2, r0, #16
    7314:	189b      	adds	r3, r3, r2
    7316:	0402      	lsls	r2, r0, #16
    7318:	0c1f      	lsrs	r7, r3, #16
    731a:	0c12      	lsrs	r2, r2, #16
    731c:	041b      	lsls	r3, r3, #16
    731e:	4313      	orrs	r3, r2
    7320:	600b      	str	r3, [r1, #0]
    7322:	45ac      	cmp	ip, r5
    7324:	d8e4      	bhi.n	72f0 <__multiply+0x88>
    7326:	4653      	mov	r3, sl
    7328:	6027      	str	r7, [r4, #0]
    732a:	681b      	ldr	r3, [r3, #0]
    732c:	0c1e      	lsrs	r6, r3, #16
    732e:	d020      	beq.n	7372 <__multiply+0x10a>
    7330:	465b      	mov	r3, fp
    7332:	2100      	movs	r1, #0
    7334:	681b      	ldr	r3, [r3, #0]
    7336:	465c      	mov	r4, fp
    7338:	0018      	movs	r0, r3
    733a:	000f      	movs	r7, r1
    733c:	4662      	mov	r2, ip
    733e:	9d00      	ldr	r5, [sp, #0]
    7340:	8829      	ldrh	r1, [r5, #0]
    7342:	0c00      	lsrs	r0, r0, #16
    7344:	4371      	muls	r1, r6
    7346:	1809      	adds	r1, r1, r0
    7348:	19c9      	adds	r1, r1, r7
    734a:	041b      	lsls	r3, r3, #16
    734c:	0408      	lsls	r0, r1, #16
    734e:	0c1b      	lsrs	r3, r3, #16
    7350:	4303      	orrs	r3, r0
    7352:	6023      	str	r3, [r4, #0]
    7354:	cd08      	ldmia	r5!, {r3}
    7356:	6860      	ldr	r0, [r4, #4]
    7358:	0c1b      	lsrs	r3, r3, #16
    735a:	4373      	muls	r3, r6
    735c:	0407      	lsls	r7, r0, #16
    735e:	0c3f      	lsrs	r7, r7, #16
    7360:	19db      	adds	r3, r3, r7
    7362:	0c09      	lsrs	r1, r1, #16
    7364:	185b      	adds	r3, r3, r1
    7366:	0c1f      	lsrs	r7, r3, #16
    7368:	3404      	adds	r4, #4
    736a:	42aa      	cmp	r2, r5
    736c:	d8e8      	bhi.n	7340 <__multiply+0xd8>
    736e:	4694      	mov	ip, r2
    7370:	6023      	str	r3, [r4, #0]
    7372:	2304      	movs	r3, #4
    7374:	4699      	mov	r9, r3
    7376:	9b01      	ldr	r3, [sp, #4]
    7378:	44ca      	add	sl, r9
    737a:	44cb      	add	fp, r9
    737c:	4553      	cmp	r3, sl
    737e:	d8af      	bhi.n	72e0 <__multiply+0x78>
    7380:	4643      	mov	r3, r8
    7382:	2b00      	cmp	r3, #0
    7384:	dd0e      	ble.n	73a4 <__multiply+0x13c>
    7386:	9b02      	ldr	r3, [sp, #8]
    7388:	3b04      	subs	r3, #4
    738a:	681a      	ldr	r2, [r3, #0]
    738c:	2a00      	cmp	r2, #0
    738e:	d109      	bne.n	73a4 <__multiply+0x13c>
    7390:	4642      	mov	r2, r8
    7392:	e003      	b.n	739c <__multiply+0x134>
    7394:	3b04      	subs	r3, #4
    7396:	6819      	ldr	r1, [r3, #0]
    7398:	2900      	cmp	r1, #0
    739a:	d102      	bne.n	73a2 <__multiply+0x13a>
    739c:	3a01      	subs	r2, #1
    739e:	2a00      	cmp	r2, #0
    73a0:	d1f8      	bne.n	7394 <__multiply+0x12c>
    73a2:	4690      	mov	r8, r2
    73a4:	9b03      	ldr	r3, [sp, #12]
    73a6:	4642      	mov	r2, r8
    73a8:	0018      	movs	r0, r3
    73aa:	611a      	str	r2, [r3, #16]
    73ac:	b005      	add	sp, #20
    73ae:	bc3c      	pop	{r2, r3, r4, r5}
    73b0:	4690      	mov	r8, r2
    73b2:	4699      	mov	r9, r3
    73b4:	46a2      	mov	sl, r4
    73b6:	46ab      	mov	fp, r5
    73b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    73ba:	46c0      	nop			; (mov r8, r8)

000073bc <__pow5mult>:
    73bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    73be:	4647      	mov	r7, r8
    73c0:	46ce      	mov	lr, r9
    73c2:	2303      	movs	r3, #3
    73c4:	b580      	push	{r7, lr}
    73c6:	4680      	mov	r8, r0
    73c8:	000f      	movs	r7, r1
    73ca:	0014      	movs	r4, r2
    73cc:	4013      	ands	r3, r2
    73ce:	d13a      	bne.n	7446 <__pow5mult+0x8a>
    73d0:	10a4      	asrs	r4, r4, #2
    73d2:	003e      	movs	r6, r7
    73d4:	2c00      	cmp	r4, #0
    73d6:	d025      	beq.n	7424 <__pow5mult+0x68>
    73d8:	4643      	mov	r3, r8
    73da:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    73dc:	2d00      	cmp	r5, #0
    73de:	d03b      	beq.n	7458 <__pow5mult+0x9c>
    73e0:	003e      	movs	r6, r7
    73e2:	2300      	movs	r3, #0
    73e4:	2701      	movs	r7, #1
    73e6:	4699      	mov	r9, r3
    73e8:	4227      	tst	r7, r4
    73ea:	d107      	bne.n	73fc <__pow5mult+0x40>
    73ec:	1064      	asrs	r4, r4, #1
    73ee:	d019      	beq.n	7424 <__pow5mult+0x68>
    73f0:	6828      	ldr	r0, [r5, #0]
    73f2:	2800      	cmp	r0, #0
    73f4:	d01b      	beq.n	742e <__pow5mult+0x72>
    73f6:	0005      	movs	r5, r0
    73f8:	4227      	tst	r7, r4
    73fa:	d0f7      	beq.n	73ec <__pow5mult+0x30>
    73fc:	002a      	movs	r2, r5
    73fe:	0031      	movs	r1, r6
    7400:	4640      	mov	r0, r8
    7402:	f7ff ff31 	bl	7268 <__multiply>
    7406:	2e00      	cmp	r6, #0
    7408:	d01b      	beq.n	7442 <__pow5mult+0x86>
    740a:	4642      	mov	r2, r8
    740c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    740e:	6873      	ldr	r3, [r6, #4]
    7410:	4694      	mov	ip, r2
    7412:	009b      	lsls	r3, r3, #2
    7414:	4463      	add	r3, ip
    7416:	681a      	ldr	r2, [r3, #0]
    7418:	1064      	asrs	r4, r4, #1
    741a:	6032      	str	r2, [r6, #0]
    741c:	601e      	str	r6, [r3, #0]
    741e:	0006      	movs	r6, r0
    7420:	2c00      	cmp	r4, #0
    7422:	d1e5      	bne.n	73f0 <__pow5mult+0x34>
    7424:	0030      	movs	r0, r6
    7426:	bc0c      	pop	{r2, r3}
    7428:	4690      	mov	r8, r2
    742a:	4699      	mov	r9, r3
    742c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    742e:	002a      	movs	r2, r5
    7430:	0029      	movs	r1, r5
    7432:	4640      	mov	r0, r8
    7434:	f7ff ff18 	bl	7268 <__multiply>
    7438:	464b      	mov	r3, r9
    743a:	6028      	str	r0, [r5, #0]
    743c:	6003      	str	r3, [r0, #0]
    743e:	0005      	movs	r5, r0
    7440:	e7da      	b.n	73f8 <__pow5mult+0x3c>
    7442:	0006      	movs	r6, r0
    7444:	e7d2      	b.n	73ec <__pow5mult+0x30>
    7446:	4a0b      	ldr	r2, [pc, #44]	; (7474 <__pow5mult+0xb8>)
    7448:	3b01      	subs	r3, #1
    744a:	009b      	lsls	r3, r3, #2
    744c:	589a      	ldr	r2, [r3, r2]
    744e:	2300      	movs	r3, #0
    7450:	f7ff fe72 	bl	7138 <__multadd>
    7454:	0007      	movs	r7, r0
    7456:	e7bb      	b.n	73d0 <__pow5mult+0x14>
    7458:	2101      	movs	r1, #1
    745a:	4640      	mov	r0, r8
    745c:	f7ff fe3a 	bl	70d4 <_Balloc>
    7460:	4b05      	ldr	r3, [pc, #20]	; (7478 <__pow5mult+0xbc>)
    7462:	0005      	movs	r5, r0
    7464:	6143      	str	r3, [r0, #20]
    7466:	2301      	movs	r3, #1
    7468:	6103      	str	r3, [r0, #16]
    746a:	4643      	mov	r3, r8
    746c:	6498      	str	r0, [r3, #72]	; 0x48
    746e:	2300      	movs	r3, #0
    7470:	6003      	str	r3, [r0, #0]
    7472:	e7b5      	b.n	73e0 <__pow5mult+0x24>
    7474:	00008c08 	.word	0x00008c08
    7478:	00000271 	.word	0x00000271

0000747c <__lshift>:
    747c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    747e:	464e      	mov	r6, r9
    7480:	4645      	mov	r5, r8
    7482:	46de      	mov	lr, fp
    7484:	4657      	mov	r7, sl
    7486:	b5e0      	push	{r5, r6, r7, lr}
    7488:	000e      	movs	r6, r1
    748a:	6933      	ldr	r3, [r6, #16]
    748c:	1154      	asrs	r4, r2, #5
    748e:	4698      	mov	r8, r3
    7490:	44a0      	add	r8, r4
    7492:	4643      	mov	r3, r8
    7494:	1c5d      	adds	r5, r3, #1
    7496:	68b3      	ldr	r3, [r6, #8]
    7498:	4683      	mov	fp, r0
    749a:	4691      	mov	r9, r2
    749c:	6849      	ldr	r1, [r1, #4]
    749e:	429d      	cmp	r5, r3
    74a0:	dd03      	ble.n	74aa <__lshift+0x2e>
    74a2:	3101      	adds	r1, #1
    74a4:	005b      	lsls	r3, r3, #1
    74a6:	429d      	cmp	r5, r3
    74a8:	dcfb      	bgt.n	74a2 <__lshift+0x26>
    74aa:	4658      	mov	r0, fp
    74ac:	f7ff fe12 	bl	70d4 <_Balloc>
    74b0:	0003      	movs	r3, r0
    74b2:	4684      	mov	ip, r0
    74b4:	3314      	adds	r3, #20
    74b6:	2c00      	cmp	r4, #0
    74b8:	dd06      	ble.n	74c8 <__lshift+0x4c>
    74ba:	2100      	movs	r1, #0
    74bc:	00a4      	lsls	r4, r4, #2
    74be:	001a      	movs	r2, r3
    74c0:	191b      	adds	r3, r3, r4
    74c2:	c202      	stmia	r2!, {r1}
    74c4:	4293      	cmp	r3, r2
    74c6:	d1fc      	bne.n	74c2 <__lshift+0x46>
    74c8:	6932      	ldr	r2, [r6, #16]
    74ca:	4648      	mov	r0, r9
    74cc:	0097      	lsls	r7, r2, #2
    74ce:	0031      	movs	r1, r6
    74d0:	221f      	movs	r2, #31
    74d2:	3114      	adds	r1, #20
    74d4:	4010      	ands	r0, r2
    74d6:	19cf      	adds	r7, r1, r7
    74d8:	4681      	mov	r9, r0
    74da:	2800      	cmp	r0, #0
    74dc:	d025      	beq.n	752a <__lshift+0xae>
    74de:	2220      	movs	r2, #32
    74e0:	1a12      	subs	r2, r2, r0
    74e2:	4692      	mov	sl, r2
    74e4:	2200      	movs	r2, #0
    74e6:	4648      	mov	r0, r9
    74e8:	680c      	ldr	r4, [r1, #0]
    74ea:	4084      	lsls	r4, r0
    74ec:	4650      	mov	r0, sl
    74ee:	4314      	orrs	r4, r2
    74f0:	601c      	str	r4, [r3, #0]
    74f2:	c904      	ldmia	r1!, {r2}
    74f4:	3304      	adds	r3, #4
    74f6:	40c2      	lsrs	r2, r0
    74f8:	428f      	cmp	r7, r1
    74fa:	d8f4      	bhi.n	74e6 <__lshift+0x6a>
    74fc:	601a      	str	r2, [r3, #0]
    74fe:	2a00      	cmp	r2, #0
    7500:	d001      	beq.n	7506 <__lshift+0x8a>
    7502:	4645      	mov	r5, r8
    7504:	3502      	adds	r5, #2
    7506:	4663      	mov	r3, ip
    7508:	3d01      	subs	r5, #1
    750a:	611d      	str	r5, [r3, #16]
    750c:	6873      	ldr	r3, [r6, #4]
    750e:	4660      	mov	r0, ip
    7510:	009a      	lsls	r2, r3, #2
    7512:	465b      	mov	r3, fp
    7514:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    7516:	189b      	adds	r3, r3, r2
    7518:	681a      	ldr	r2, [r3, #0]
    751a:	6032      	str	r2, [r6, #0]
    751c:	601e      	str	r6, [r3, #0]
    751e:	bc3c      	pop	{r2, r3, r4, r5}
    7520:	4690      	mov	r8, r2
    7522:	4699      	mov	r9, r3
    7524:	46a2      	mov	sl, r4
    7526:	46ab      	mov	fp, r5
    7528:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    752a:	c904      	ldmia	r1!, {r2}
    752c:	c304      	stmia	r3!, {r2}
    752e:	428f      	cmp	r7, r1
    7530:	d9e9      	bls.n	7506 <__lshift+0x8a>
    7532:	c904      	ldmia	r1!, {r2}
    7534:	c304      	stmia	r3!, {r2}
    7536:	428f      	cmp	r7, r1
    7538:	d8f7      	bhi.n	752a <__lshift+0xae>
    753a:	e7e4      	b.n	7506 <__lshift+0x8a>

0000753c <__mcmp>:
    753c:	690a      	ldr	r2, [r1, #16]
    753e:	6903      	ldr	r3, [r0, #16]
    7540:	b530      	push	{r4, r5, lr}
    7542:	0005      	movs	r5, r0
    7544:	1a98      	subs	r0, r3, r2
    7546:	d111      	bne.n	756c <__mcmp+0x30>
    7548:	0092      	lsls	r2, r2, #2
    754a:	3514      	adds	r5, #20
    754c:	3114      	adds	r1, #20
    754e:	18ab      	adds	r3, r5, r2
    7550:	1889      	adds	r1, r1, r2
    7552:	e001      	b.n	7558 <__mcmp+0x1c>
    7554:	429d      	cmp	r5, r3
    7556:	d209      	bcs.n	756c <__mcmp+0x30>
    7558:	3b04      	subs	r3, #4
    755a:	3904      	subs	r1, #4
    755c:	681c      	ldr	r4, [r3, #0]
    755e:	680a      	ldr	r2, [r1, #0]
    7560:	4294      	cmp	r4, r2
    7562:	d0f7      	beq.n	7554 <__mcmp+0x18>
    7564:	4294      	cmp	r4, r2
    7566:	4180      	sbcs	r0, r0
    7568:	2201      	movs	r2, #1
    756a:	4310      	orrs	r0, r2
    756c:	bd30      	pop	{r4, r5, pc}
    756e:	46c0      	nop			; (mov r8, r8)

00007570 <__mdiff>:
    7570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7572:	4645      	mov	r5, r8
    7574:	46de      	mov	lr, fp
    7576:	4657      	mov	r7, sl
    7578:	464e      	mov	r6, r9
    757a:	0014      	movs	r4, r2
    757c:	690b      	ldr	r3, [r1, #16]
    757e:	6912      	ldr	r2, [r2, #16]
    7580:	b5e0      	push	{r5, r6, r7, lr}
    7582:	4688      	mov	r8, r1
    7584:	1a9d      	subs	r5, r3, r2
    7586:	d11a      	bne.n	75be <__mdiff+0x4e>
    7588:	000f      	movs	r7, r1
    758a:	2114      	movs	r1, #20
    758c:	468c      	mov	ip, r1
    758e:	0092      	lsls	r2, r2, #2
    7590:	3714      	adds	r7, #20
    7592:	44a4      	add	ip, r4
    7594:	18bb      	adds	r3, r7, r2
    7596:	4462      	add	r2, ip
    7598:	e002      	b.n	75a0 <__mdiff+0x30>
    759a:	429f      	cmp	r7, r3
    759c:	d300      	bcc.n	75a0 <__mdiff+0x30>
    759e:	e070      	b.n	7682 <__mdiff+0x112>
    75a0:	3b04      	subs	r3, #4
    75a2:	3a04      	subs	r2, #4
    75a4:	681e      	ldr	r6, [r3, #0]
    75a6:	6811      	ldr	r1, [r2, #0]
    75a8:	428e      	cmp	r6, r1
    75aa:	d0f6      	beq.n	759a <__mdiff+0x2a>
    75ac:	d300      	bcc.n	75b0 <__mdiff+0x40>
    75ae:	e071      	b.n	7694 <__mdiff+0x124>
    75b0:	4643      	mov	r3, r8
    75b2:	003e      	movs	r6, r7
    75b4:	46a0      	mov	r8, r4
    75b6:	4667      	mov	r7, ip
    75b8:	001c      	movs	r4, r3
    75ba:	2501      	movs	r5, #1
    75bc:	e006      	b.n	75cc <__mdiff+0x5c>
    75be:	2d00      	cmp	r5, #0
    75c0:	db6a      	blt.n	7698 <__mdiff+0x128>
    75c2:	4647      	mov	r7, r8
    75c4:	0026      	movs	r6, r4
    75c6:	2500      	movs	r5, #0
    75c8:	3714      	adds	r7, #20
    75ca:	3614      	adds	r6, #20
    75cc:	4643      	mov	r3, r8
    75ce:	6859      	ldr	r1, [r3, #4]
    75d0:	f7ff fd80 	bl	70d4 <_Balloc>
    75d4:	4643      	mov	r3, r8
    75d6:	4681      	mov	r9, r0
    75d8:	60c5      	str	r5, [r0, #12]
    75da:	6918      	ldr	r0, [r3, #16]
    75dc:	464d      	mov	r5, r9
    75de:	0083      	lsls	r3, r0, #2
    75e0:	469c      	mov	ip, r3
    75e2:	6923      	ldr	r3, [r4, #16]
    75e4:	44bc      	add	ip, r7
    75e6:	009b      	lsls	r3, r3, #2
    75e8:	4698      	mov	r8, r3
    75ea:	2300      	movs	r3, #0
    75ec:	44b0      	add	r8, r6
    75ee:	3514      	adds	r5, #20
    75f0:	469a      	mov	sl, r3
    75f2:	e000      	b.n	75f6 <__mdiff+0x86>
    75f4:	0027      	movs	r7, r4
    75f6:	ce04      	ldmia	r6!, {r2}
    75f8:	003c      	movs	r4, r7
    75fa:	4693      	mov	fp, r2
    75fc:	4659      	mov	r1, fp
    75fe:	cc08      	ldmia	r4!, {r3}
    7600:	0409      	lsls	r1, r1, #16
    7602:	041a      	lsls	r2, r3, #16
    7604:	0c12      	lsrs	r2, r2, #16
    7606:	4452      	add	r2, sl
    7608:	0c09      	lsrs	r1, r1, #16
    760a:	1a52      	subs	r2, r2, r1
    760c:	0c19      	lsrs	r1, r3, #16
    760e:	465b      	mov	r3, fp
    7610:	0c1b      	lsrs	r3, r3, #16
    7612:	1acb      	subs	r3, r1, r3
    7614:	1411      	asrs	r1, r2, #16
    7616:	185b      	adds	r3, r3, r1
    7618:	0412      	lsls	r2, r2, #16
    761a:	1419      	asrs	r1, r3, #16
    761c:	0c12      	lsrs	r2, r2, #16
    761e:	041b      	lsls	r3, r3, #16
    7620:	468a      	mov	sl, r1
    7622:	4313      	orrs	r3, r2
    7624:	1d29      	adds	r1, r5, #4
    7626:	602b      	str	r3, [r5, #0]
    7628:	000d      	movs	r5, r1
    762a:	45b0      	cmp	r8, r6
    762c:	d8e2      	bhi.n	75f4 <__mdiff+0x84>
    762e:	45a4      	cmp	ip, r4
    7630:	d916      	bls.n	7660 <__mdiff+0xf0>
    7632:	cc08      	ldmia	r4!, {r3}
    7634:	041a      	lsls	r2, r3, #16
    7636:	0c12      	lsrs	r2, r2, #16
    7638:	4452      	add	r2, sl
    763a:	1416      	asrs	r6, r2, #16
    763c:	0c1b      	lsrs	r3, r3, #16
    763e:	199b      	adds	r3, r3, r6
    7640:	0412      	lsls	r2, r2, #16
    7642:	141e      	asrs	r6, r3, #16
    7644:	0c12      	lsrs	r2, r2, #16
    7646:	041b      	lsls	r3, r3, #16
    7648:	4313      	orrs	r3, r2
    764a:	46b2      	mov	sl, r6
    764c:	c508      	stmia	r5!, {r3}
    764e:	45a4      	cmp	ip, r4
    7650:	d8ef      	bhi.n	7632 <__mdiff+0xc2>
    7652:	4662      	mov	r2, ip
    7654:	2403      	movs	r4, #3
    7656:	1bd2      	subs	r2, r2, r7
    7658:	3a05      	subs	r2, #5
    765a:	43a2      	bics	r2, r4
    765c:	3204      	adds	r2, #4
    765e:	1889      	adds	r1, r1, r2
    7660:	3904      	subs	r1, #4
    7662:	2b00      	cmp	r3, #0
    7664:	d104      	bne.n	7670 <__mdiff+0x100>
    7666:	3904      	subs	r1, #4
    7668:	680b      	ldr	r3, [r1, #0]
    766a:	3801      	subs	r0, #1
    766c:	2b00      	cmp	r3, #0
    766e:	d0fa      	beq.n	7666 <__mdiff+0xf6>
    7670:	464b      	mov	r3, r9
    7672:	6118      	str	r0, [r3, #16]
    7674:	4648      	mov	r0, r9
    7676:	bc3c      	pop	{r2, r3, r4, r5}
    7678:	4690      	mov	r8, r2
    767a:	4699      	mov	r9, r3
    767c:	46a2      	mov	sl, r4
    767e:	46ab      	mov	fp, r5
    7680:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7682:	2100      	movs	r1, #0
    7684:	f7ff fd26 	bl	70d4 <_Balloc>
    7688:	2301      	movs	r3, #1
    768a:	6103      	str	r3, [r0, #16]
    768c:	2300      	movs	r3, #0
    768e:	4681      	mov	r9, r0
    7690:	6143      	str	r3, [r0, #20]
    7692:	e7ef      	b.n	7674 <__mdiff+0x104>
    7694:	4666      	mov	r6, ip
    7696:	e799      	b.n	75cc <__mdiff+0x5c>
    7698:	0027      	movs	r7, r4
    769a:	000e      	movs	r6, r1
    769c:	46a0      	mov	r8, r4
    769e:	3714      	adds	r7, #20
    76a0:	3614      	adds	r6, #20
    76a2:	000c      	movs	r4, r1
    76a4:	2501      	movs	r5, #1
    76a6:	e791      	b.n	75cc <__mdiff+0x5c>

000076a8 <__d2b>:
    76a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    76aa:	2101      	movs	r1, #1
    76ac:	001c      	movs	r4, r3
    76ae:	b083      	sub	sp, #12
    76b0:	9e08      	ldr	r6, [sp, #32]
    76b2:	0015      	movs	r5, r2
    76b4:	f7ff fd0e 	bl	70d4 <_Balloc>
    76b8:	0323      	lsls	r3, r4, #12
    76ba:	0064      	lsls	r4, r4, #1
    76bc:	0007      	movs	r7, r0
    76be:	0b1b      	lsrs	r3, r3, #12
    76c0:	0d64      	lsrs	r4, r4, #21
    76c2:	d002      	beq.n	76ca <__d2b+0x22>
    76c4:	2280      	movs	r2, #128	; 0x80
    76c6:	0352      	lsls	r2, r2, #13
    76c8:	4313      	orrs	r3, r2
    76ca:	9301      	str	r3, [sp, #4]
    76cc:	2d00      	cmp	r5, #0
    76ce:	d019      	beq.n	7704 <__d2b+0x5c>
    76d0:	4668      	mov	r0, sp
    76d2:	9500      	str	r5, [sp, #0]
    76d4:	f7ff fd90 	bl	71f8 <__lo0bits>
    76d8:	2800      	cmp	r0, #0
    76da:	d130      	bne.n	773e <__d2b+0x96>
    76dc:	9b00      	ldr	r3, [sp, #0]
    76de:	617b      	str	r3, [r7, #20]
    76e0:	9b01      	ldr	r3, [sp, #4]
    76e2:	61bb      	str	r3, [r7, #24]
    76e4:	1e5a      	subs	r2, r3, #1
    76e6:	4193      	sbcs	r3, r2
    76e8:	1c5d      	adds	r5, r3, #1
    76ea:	613d      	str	r5, [r7, #16]
    76ec:	2c00      	cmp	r4, #0
    76ee:	d014      	beq.n	771a <__d2b+0x72>
    76f0:	4b19      	ldr	r3, [pc, #100]	; (7758 <__d2b+0xb0>)
    76f2:	469c      	mov	ip, r3
    76f4:	2335      	movs	r3, #53	; 0x35
    76f6:	4464      	add	r4, ip
    76f8:	1824      	adds	r4, r4, r0
    76fa:	1a18      	subs	r0, r3, r0
    76fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    76fe:	6034      	str	r4, [r6, #0]
    7700:	6018      	str	r0, [r3, #0]
    7702:	e019      	b.n	7738 <__d2b+0x90>
    7704:	a801      	add	r0, sp, #4
    7706:	f7ff fd77 	bl	71f8 <__lo0bits>
    770a:	9b01      	ldr	r3, [sp, #4]
    770c:	3020      	adds	r0, #32
    770e:	617b      	str	r3, [r7, #20]
    7710:	2301      	movs	r3, #1
    7712:	2501      	movs	r5, #1
    7714:	613b      	str	r3, [r7, #16]
    7716:	2c00      	cmp	r4, #0
    7718:	d1ea      	bne.n	76f0 <__d2b+0x48>
    771a:	4b10      	ldr	r3, [pc, #64]	; (775c <__d2b+0xb4>)
    771c:	469c      	mov	ip, r3
    771e:	4b10      	ldr	r3, [pc, #64]	; (7760 <__d2b+0xb8>)
    7720:	4460      	add	r0, ip
    7722:	18eb      	adds	r3, r5, r3
    7724:	009b      	lsls	r3, r3, #2
    7726:	18fb      	adds	r3, r7, r3
    7728:	6030      	str	r0, [r6, #0]
    772a:	6958      	ldr	r0, [r3, #20]
    772c:	f7ff fd4a 	bl	71c4 <__hi0bits>
    7730:	016b      	lsls	r3, r5, #5
    7732:	1a18      	subs	r0, r3, r0
    7734:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7736:	6018      	str	r0, [r3, #0]
    7738:	0038      	movs	r0, r7
    773a:	b003      	add	sp, #12
    773c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    773e:	9b01      	ldr	r3, [sp, #4]
    7740:	2220      	movs	r2, #32
    7742:	0019      	movs	r1, r3
    7744:	1a12      	subs	r2, r2, r0
    7746:	4091      	lsls	r1, r2
    7748:	000a      	movs	r2, r1
    774a:	40c3      	lsrs	r3, r0
    774c:	9900      	ldr	r1, [sp, #0]
    774e:	9301      	str	r3, [sp, #4]
    7750:	430a      	orrs	r2, r1
    7752:	617a      	str	r2, [r7, #20]
    7754:	e7c5      	b.n	76e2 <__d2b+0x3a>
    7756:	46c0      	nop			; (mov r8, r8)
    7758:	fffffbcd 	.word	0xfffffbcd
    775c:	fffffbce 	.word	0xfffffbce
    7760:	3fffffff 	.word	0x3fffffff

00007764 <_sbrk_r>:
    7764:	2300      	movs	r3, #0
    7766:	b570      	push	{r4, r5, r6, lr}
    7768:	4c06      	ldr	r4, [pc, #24]	; (7784 <_sbrk_r+0x20>)
    776a:	0005      	movs	r5, r0
    776c:	0008      	movs	r0, r1
    776e:	6023      	str	r3, [r4, #0]
    7770:	f7fa fe60 	bl	2434 <_sbrk>
    7774:	1c43      	adds	r3, r0, #1
    7776:	d000      	beq.n	777a <_sbrk_r+0x16>
    7778:	bd70      	pop	{r4, r5, r6, pc}
    777a:	6823      	ldr	r3, [r4, #0]
    777c:	2b00      	cmp	r3, #0
    777e:	d0fb      	beq.n	7778 <_sbrk_r+0x14>
    7780:	602b      	str	r3, [r5, #0]
    7782:	e7f9      	b.n	7778 <_sbrk_r+0x14>
    7784:	20000f64 	.word	0x20000f64

00007788 <__ssprint_r>:
    7788:	b5f0      	push	{r4, r5, r6, r7, lr}
    778a:	4657      	mov	r7, sl
    778c:	464e      	mov	r6, r9
    778e:	46de      	mov	lr, fp
    7790:	4645      	mov	r5, r8
    7792:	b5e0      	push	{r5, r6, r7, lr}
    7794:	6893      	ldr	r3, [r2, #8]
    7796:	b083      	sub	sp, #12
    7798:	9001      	str	r0, [sp, #4]
    779a:	000e      	movs	r6, r1
    779c:	4692      	mov	sl, r2
    779e:	2b00      	cmp	r3, #0
    77a0:	d070      	beq.n	7884 <__ssprint_r+0xfc>
    77a2:	688d      	ldr	r5, [r1, #8]
    77a4:	6813      	ldr	r3, [r2, #0]
    77a6:	002c      	movs	r4, r5
    77a8:	6808      	ldr	r0, [r1, #0]
    77aa:	001d      	movs	r5, r3
    77ac:	e046      	b.n	783c <__ssprint_r+0xb4>
    77ae:	2290      	movs	r2, #144	; 0x90
    77b0:	89b3      	ldrh	r3, [r6, #12]
    77b2:	00d2      	lsls	r2, r2, #3
    77b4:	4213      	tst	r3, r2
    77b6:	d030      	beq.n	781a <__ssprint_r+0x92>
    77b8:	6931      	ldr	r1, [r6, #16]
    77ba:	1a42      	subs	r2, r0, r1
    77bc:	4693      	mov	fp, r2
    77be:	6970      	ldr	r0, [r6, #20]
    77c0:	0042      	lsls	r2, r0, #1
    77c2:	1812      	adds	r2, r2, r0
    77c4:	0fd0      	lsrs	r0, r2, #31
    77c6:	1882      	adds	r2, r0, r2
    77c8:	1052      	asrs	r2, r2, #1
    77ca:	4690      	mov	r8, r2
    77cc:	465a      	mov	r2, fp
    77ce:	1c50      	adds	r0, r2, #1
    77d0:	19c0      	adds	r0, r0, r7
    77d2:	4642      	mov	r2, r8
    77d4:	4540      	cmp	r0, r8
    77d6:	d901      	bls.n	77dc <__ssprint_r+0x54>
    77d8:	4680      	mov	r8, r0
    77da:	0002      	movs	r2, r0
    77dc:	2080      	movs	r0, #128	; 0x80
    77de:	00c0      	lsls	r0, r0, #3
    77e0:	4203      	tst	r3, r0
    77e2:	d038      	beq.n	7856 <__ssprint_r+0xce>
    77e4:	0011      	movs	r1, r2
    77e6:	9801      	ldr	r0, [sp, #4]
    77e8:	f7ff f970 	bl	6acc <_malloc_r>
    77ec:	1e04      	subs	r4, r0, #0
    77ee:	d054      	beq.n	789a <__ssprint_r+0x112>
    77f0:	465a      	mov	r2, fp
    77f2:	6931      	ldr	r1, [r6, #16]
    77f4:	f7fc fc5c 	bl	40b0 <memcpy>
    77f8:	89b3      	ldrh	r3, [r6, #12]
    77fa:	4a2a      	ldr	r2, [pc, #168]	; (78a4 <__ssprint_r+0x11c>)
    77fc:	4013      	ands	r3, r2
    77fe:	2280      	movs	r2, #128	; 0x80
    7800:	4313      	orrs	r3, r2
    7802:	81b3      	strh	r3, [r6, #12]
    7804:	4643      	mov	r3, r8
    7806:	0020      	movs	r0, r4
    7808:	465a      	mov	r2, fp
    780a:	6134      	str	r4, [r6, #16]
    780c:	46b8      	mov	r8, r7
    780e:	003c      	movs	r4, r7
    7810:	4458      	add	r0, fp
    7812:	6173      	str	r3, [r6, #20]
    7814:	1a9b      	subs	r3, r3, r2
    7816:	6030      	str	r0, [r6, #0]
    7818:	60b3      	str	r3, [r6, #8]
    781a:	4642      	mov	r2, r8
    781c:	4649      	mov	r1, r9
    781e:	f000 f9b3 	bl	7b88 <memmove>
    7822:	68b3      	ldr	r3, [r6, #8]
    7824:	1b1c      	subs	r4, r3, r4
    7826:	6833      	ldr	r3, [r6, #0]
    7828:	60b4      	str	r4, [r6, #8]
    782a:	4443      	add	r3, r8
    782c:	6033      	str	r3, [r6, #0]
    782e:	0018      	movs	r0, r3
    7830:	4653      	mov	r3, sl
    7832:	689b      	ldr	r3, [r3, #8]
    7834:	1bdf      	subs	r7, r3, r7
    7836:	4653      	mov	r3, sl
    7838:	609f      	str	r7, [r3, #8]
    783a:	d023      	beq.n	7884 <__ssprint_r+0xfc>
    783c:	686f      	ldr	r7, [r5, #4]
    783e:	002b      	movs	r3, r5
    7840:	3508      	adds	r5, #8
    7842:	2f00      	cmp	r7, #0
    7844:	d0fa      	beq.n	783c <__ssprint_r+0xb4>
    7846:	681b      	ldr	r3, [r3, #0]
    7848:	46a0      	mov	r8, r4
    784a:	4699      	mov	r9, r3
    784c:	42a7      	cmp	r7, r4
    784e:	d2ae      	bcs.n	77ae <__ssprint_r+0x26>
    7850:	003c      	movs	r4, r7
    7852:	46b8      	mov	r8, r7
    7854:	e7e1      	b.n	781a <__ssprint_r+0x92>
    7856:	9801      	ldr	r0, [sp, #4]
    7858:	f000 f9e6 	bl	7c28 <_realloc_r>
    785c:	1e04      	subs	r4, r0, #0
    785e:	d1d1      	bne.n	7804 <__ssprint_r+0x7c>
    7860:	9c01      	ldr	r4, [sp, #4]
    7862:	6931      	ldr	r1, [r6, #16]
    7864:	0020      	movs	r0, r4
    7866:	f000 f89b 	bl	79a0 <_free_r>
    786a:	230c      	movs	r3, #12
    786c:	6023      	str	r3, [r4, #0]
    786e:	2240      	movs	r2, #64	; 0x40
    7870:	89b3      	ldrh	r3, [r6, #12]
    7872:	2001      	movs	r0, #1
    7874:	4313      	orrs	r3, r2
    7876:	81b3      	strh	r3, [r6, #12]
    7878:	4652      	mov	r2, sl
    787a:	2300      	movs	r3, #0
    787c:	4240      	negs	r0, r0
    787e:	6093      	str	r3, [r2, #8]
    7880:	6053      	str	r3, [r2, #4]
    7882:	e003      	b.n	788c <__ssprint_r+0x104>
    7884:	2300      	movs	r3, #0
    7886:	4652      	mov	r2, sl
    7888:	2000      	movs	r0, #0
    788a:	6053      	str	r3, [r2, #4]
    788c:	b003      	add	sp, #12
    788e:	bc3c      	pop	{r2, r3, r4, r5}
    7890:	4690      	mov	r8, r2
    7892:	4699      	mov	r9, r3
    7894:	46a2      	mov	sl, r4
    7896:	46ab      	mov	fp, r5
    7898:	bdf0      	pop	{r4, r5, r6, r7, pc}
    789a:	230c      	movs	r3, #12
    789c:	9a01      	ldr	r2, [sp, #4]
    789e:	6013      	str	r3, [r2, #0]
    78a0:	e7e5      	b.n	786e <__ssprint_r+0xe6>
    78a2:	46c0      	nop			; (mov r8, r8)
    78a4:	fffffb7f 	.word	0xfffffb7f

000078a8 <_calloc_r>:
    78a8:	b510      	push	{r4, lr}
    78aa:	4351      	muls	r1, r2
    78ac:	f7ff f90e 	bl	6acc <_malloc_r>
    78b0:	1e04      	subs	r4, r0, #0
    78b2:	d01c      	beq.n	78ee <_calloc_r+0x46>
    78b4:	0003      	movs	r3, r0
    78b6:	3b08      	subs	r3, #8
    78b8:	685a      	ldr	r2, [r3, #4]
    78ba:	2303      	movs	r3, #3
    78bc:	439a      	bics	r2, r3
    78be:	3a04      	subs	r2, #4
    78c0:	2a24      	cmp	r2, #36	; 0x24
    78c2:	d816      	bhi.n	78f2 <_calloc_r+0x4a>
    78c4:	0003      	movs	r3, r0
    78c6:	2a13      	cmp	r2, #19
    78c8:	d90d      	bls.n	78e6 <_calloc_r+0x3e>
    78ca:	2100      	movs	r1, #0
    78cc:	3308      	adds	r3, #8
    78ce:	6001      	str	r1, [r0, #0]
    78d0:	6041      	str	r1, [r0, #4]
    78d2:	2a1b      	cmp	r2, #27
    78d4:	d907      	bls.n	78e6 <_calloc_r+0x3e>
    78d6:	6081      	str	r1, [r0, #8]
    78d8:	60c1      	str	r1, [r0, #12]
    78da:	2a24      	cmp	r2, #36	; 0x24
    78dc:	d10d      	bne.n	78fa <_calloc_r+0x52>
    78de:	0003      	movs	r3, r0
    78e0:	6101      	str	r1, [r0, #16]
    78e2:	3318      	adds	r3, #24
    78e4:	6141      	str	r1, [r0, #20]
    78e6:	2200      	movs	r2, #0
    78e8:	601a      	str	r2, [r3, #0]
    78ea:	605a      	str	r2, [r3, #4]
    78ec:	609a      	str	r2, [r3, #8]
    78ee:	0020      	movs	r0, r4
    78f0:	bd10      	pop	{r4, pc}
    78f2:	2100      	movs	r1, #0
    78f4:	f7fc fc1e 	bl	4134 <memset>
    78f8:	e7f9      	b.n	78ee <_calloc_r+0x46>
    78fa:	0003      	movs	r3, r0
    78fc:	3310      	adds	r3, #16
    78fe:	e7f2      	b.n	78e6 <_calloc_r+0x3e>

00007900 <_malloc_trim_r>:
    7900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7902:	000c      	movs	r4, r1
    7904:	0006      	movs	r6, r0
    7906:	f7ff fbd5 	bl	70b4 <__malloc_lock>
    790a:	4f20      	ldr	r7, [pc, #128]	; (798c <_malloc_trim_r+0x8c>)
    790c:	68bb      	ldr	r3, [r7, #8]
    790e:	685d      	ldr	r5, [r3, #4]
    7910:	2303      	movs	r3, #3
    7912:	439d      	bics	r5, r3
    7914:	4b1e      	ldr	r3, [pc, #120]	; (7990 <_malloc_trim_r+0x90>)
    7916:	1b2c      	subs	r4, r5, r4
    7918:	469c      	mov	ip, r3
    791a:	4464      	add	r4, ip
    791c:	0b24      	lsrs	r4, r4, #12
    791e:	4b1d      	ldr	r3, [pc, #116]	; (7994 <_malloc_trim_r+0x94>)
    7920:	3c01      	subs	r4, #1
    7922:	0324      	lsls	r4, r4, #12
    7924:	429c      	cmp	r4, r3
    7926:	dd07      	ble.n	7938 <_malloc_trim_r+0x38>
    7928:	2100      	movs	r1, #0
    792a:	0030      	movs	r0, r6
    792c:	f7ff ff1a 	bl	7764 <_sbrk_r>
    7930:	68bb      	ldr	r3, [r7, #8]
    7932:	195b      	adds	r3, r3, r5
    7934:	4298      	cmp	r0, r3
    7936:	d004      	beq.n	7942 <_malloc_trim_r+0x42>
    7938:	0030      	movs	r0, r6
    793a:	f7ff fbc3 	bl	70c4 <__malloc_unlock>
    793e:	2000      	movs	r0, #0
    7940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7942:	4261      	negs	r1, r4
    7944:	0030      	movs	r0, r6
    7946:	f7ff ff0d 	bl	7764 <_sbrk_r>
    794a:	1c43      	adds	r3, r0, #1
    794c:	d00d      	beq.n	796a <_malloc_trim_r+0x6a>
    794e:	2201      	movs	r2, #1
    7950:	68bb      	ldr	r3, [r7, #8]
    7952:	1b2d      	subs	r5, r5, r4
    7954:	4315      	orrs	r5, r2
    7956:	605d      	str	r5, [r3, #4]
    7958:	4b0f      	ldr	r3, [pc, #60]	; (7998 <_malloc_trim_r+0x98>)
    795a:	0030      	movs	r0, r6
    795c:	681a      	ldr	r2, [r3, #0]
    795e:	1b14      	subs	r4, r2, r4
    7960:	601c      	str	r4, [r3, #0]
    7962:	f7ff fbaf 	bl	70c4 <__malloc_unlock>
    7966:	2001      	movs	r0, #1
    7968:	e7ea      	b.n	7940 <_malloc_trim_r+0x40>
    796a:	2100      	movs	r1, #0
    796c:	0030      	movs	r0, r6
    796e:	f7ff fef9 	bl	7764 <_sbrk_r>
    7972:	68ba      	ldr	r2, [r7, #8]
    7974:	1a83      	subs	r3, r0, r2
    7976:	2b0f      	cmp	r3, #15
    7978:	ddde      	ble.n	7938 <_malloc_trim_r+0x38>
    797a:	4908      	ldr	r1, [pc, #32]	; (799c <_malloc_trim_r+0x9c>)
    797c:	6809      	ldr	r1, [r1, #0]
    797e:	1a40      	subs	r0, r0, r1
    7980:	4905      	ldr	r1, [pc, #20]	; (7998 <_malloc_trim_r+0x98>)
    7982:	6008      	str	r0, [r1, #0]
    7984:	2101      	movs	r1, #1
    7986:	430b      	orrs	r3, r1
    7988:	6053      	str	r3, [r2, #4]
    798a:	e7d5      	b.n	7938 <_malloc_trim_r+0x38>
    798c:	20000444 	.word	0x20000444
    7990:	00000fef 	.word	0x00000fef
    7994:	00000fff 	.word	0x00000fff
    7998:	20000b44 	.word	0x20000b44
    799c:	2000084c 	.word	0x2000084c

000079a0 <_free_r>:
    79a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    79a2:	0004      	movs	r4, r0
    79a4:	1e0d      	subs	r5, r1, #0
    79a6:	d03c      	beq.n	7a22 <_free_r+0x82>
    79a8:	f7ff fb84 	bl	70b4 <__malloc_lock>
    79ac:	0029      	movs	r1, r5
    79ae:	3908      	subs	r1, #8
    79b0:	6848      	ldr	r0, [r1, #4]
    79b2:	2301      	movs	r3, #1
    79b4:	0005      	movs	r5, r0
    79b6:	2603      	movs	r6, #3
    79b8:	439d      	bics	r5, r3
    79ba:	194a      	adds	r2, r1, r5
    79bc:	469c      	mov	ip, r3
    79be:	4f61      	ldr	r7, [pc, #388]	; (7b44 <_free_r+0x1a4>)
    79c0:	6853      	ldr	r3, [r2, #4]
    79c2:	43b3      	bics	r3, r6
    79c4:	68be      	ldr	r6, [r7, #8]
    79c6:	42b2      	cmp	r2, r6
    79c8:	d056      	beq.n	7a78 <_free_r+0xd8>
    79ca:	4666      	mov	r6, ip
    79cc:	6053      	str	r3, [r2, #4]
    79ce:	4206      	tst	r6, r0
    79d0:	d10a      	bne.n	79e8 <_free_r+0x48>
    79d2:	003e      	movs	r6, r7
    79d4:	6808      	ldr	r0, [r1, #0]
    79d6:	3608      	adds	r6, #8
    79d8:	1a09      	subs	r1, r1, r0
    79da:	182d      	adds	r5, r5, r0
    79dc:	6888      	ldr	r0, [r1, #8]
    79de:	42b0      	cmp	r0, r6
    79e0:	d065      	beq.n	7aae <_free_r+0x10e>
    79e2:	68ce      	ldr	r6, [r1, #12]
    79e4:	60c6      	str	r6, [r0, #12]
    79e6:	60b0      	str	r0, [r6, #8]
    79e8:	2001      	movs	r0, #1
    79ea:	18d6      	adds	r6, r2, r3
    79ec:	6876      	ldr	r6, [r6, #4]
    79ee:	4206      	tst	r6, r0
    79f0:	d033      	beq.n	7a5a <_free_r+0xba>
    79f2:	4b55      	ldr	r3, [pc, #340]	; (7b48 <_free_r+0x1a8>)
    79f4:	4328      	orrs	r0, r5
    79f6:	6048      	str	r0, [r1, #4]
    79f8:	514d      	str	r5, [r1, r5]
    79fa:	429d      	cmp	r5, r3
    79fc:	d812      	bhi.n	7a24 <_free_r+0x84>
    79fe:	08ed      	lsrs	r5, r5, #3
    7a00:	3bff      	subs	r3, #255	; 0xff
    7a02:	10aa      	asrs	r2, r5, #2
    7a04:	3bff      	subs	r3, #255	; 0xff
    7a06:	4093      	lsls	r3, r2
    7a08:	687a      	ldr	r2, [r7, #4]
    7a0a:	00ed      	lsls	r5, r5, #3
    7a0c:	4313      	orrs	r3, r2
    7a0e:	607b      	str	r3, [r7, #4]
    7a10:	19ef      	adds	r7, r5, r7
    7a12:	68bb      	ldr	r3, [r7, #8]
    7a14:	60cf      	str	r7, [r1, #12]
    7a16:	608b      	str	r3, [r1, #8]
    7a18:	60b9      	str	r1, [r7, #8]
    7a1a:	60d9      	str	r1, [r3, #12]
    7a1c:	0020      	movs	r0, r4
    7a1e:	f7ff fb51 	bl	70c4 <__malloc_unlock>
    7a22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7a24:	0a68      	lsrs	r0, r5, #9
    7a26:	2804      	cmp	r0, #4
    7a28:	d850      	bhi.n	7acc <_free_r+0x12c>
    7a2a:	09a8      	lsrs	r0, r5, #6
    7a2c:	0002      	movs	r2, r0
    7a2e:	3039      	adds	r0, #57	; 0x39
    7a30:	3238      	adds	r2, #56	; 0x38
    7a32:	00c0      	lsls	r0, r0, #3
    7a34:	1838      	adds	r0, r7, r0
    7a36:	3808      	subs	r0, #8
    7a38:	6883      	ldr	r3, [r0, #8]
    7a3a:	2603      	movs	r6, #3
    7a3c:	4298      	cmp	r0, r3
    7a3e:	d04c      	beq.n	7ada <_free_r+0x13a>
    7a40:	685a      	ldr	r2, [r3, #4]
    7a42:	43b2      	bics	r2, r6
    7a44:	4295      	cmp	r5, r2
    7a46:	d230      	bcs.n	7aaa <_free_r+0x10a>
    7a48:	689b      	ldr	r3, [r3, #8]
    7a4a:	4298      	cmp	r0, r3
    7a4c:	d1f8      	bne.n	7a40 <_free_r+0xa0>
    7a4e:	68c3      	ldr	r3, [r0, #12]
    7a50:	60cb      	str	r3, [r1, #12]
    7a52:	6088      	str	r0, [r1, #8]
    7a54:	6099      	str	r1, [r3, #8]
    7a56:	60c1      	str	r1, [r0, #12]
    7a58:	e7e0      	b.n	7a1c <_free_r+0x7c>
    7a5a:	18ed      	adds	r5, r5, r3
    7a5c:	4e3b      	ldr	r6, [pc, #236]	; (7b4c <_free_r+0x1ac>)
    7a5e:	6893      	ldr	r3, [r2, #8]
    7a60:	42b3      	cmp	r3, r6
    7a62:	d042      	beq.n	7aea <_free_r+0x14a>
    7a64:	68d2      	ldr	r2, [r2, #12]
    7a66:	4328      	orrs	r0, r5
    7a68:	60da      	str	r2, [r3, #12]
    7a6a:	6093      	str	r3, [r2, #8]
    7a6c:	4b36      	ldr	r3, [pc, #216]	; (7b48 <_free_r+0x1a8>)
    7a6e:	6048      	str	r0, [r1, #4]
    7a70:	514d      	str	r5, [r1, r5]
    7a72:	429d      	cmp	r5, r3
    7a74:	d8d6      	bhi.n	7a24 <_free_r+0x84>
    7a76:	e7c2      	b.n	79fe <_free_r+0x5e>
    7a78:	4662      	mov	r2, ip
    7a7a:	18eb      	adds	r3, r5, r3
    7a7c:	4202      	tst	r2, r0
    7a7e:	d106      	bne.n	7a8e <_free_r+0xee>
    7a80:	680a      	ldr	r2, [r1, #0]
    7a82:	1a89      	subs	r1, r1, r2
    7a84:	6888      	ldr	r0, [r1, #8]
    7a86:	189b      	adds	r3, r3, r2
    7a88:	68ca      	ldr	r2, [r1, #12]
    7a8a:	60c2      	str	r2, [r0, #12]
    7a8c:	6090      	str	r0, [r2, #8]
    7a8e:	2201      	movs	r2, #1
    7a90:	431a      	orrs	r2, r3
    7a92:	604a      	str	r2, [r1, #4]
    7a94:	4a2e      	ldr	r2, [pc, #184]	; (7b50 <_free_r+0x1b0>)
    7a96:	60b9      	str	r1, [r7, #8]
    7a98:	6812      	ldr	r2, [r2, #0]
    7a9a:	4293      	cmp	r3, r2
    7a9c:	d3be      	bcc.n	7a1c <_free_r+0x7c>
    7a9e:	4b2d      	ldr	r3, [pc, #180]	; (7b54 <_free_r+0x1b4>)
    7aa0:	0020      	movs	r0, r4
    7aa2:	6819      	ldr	r1, [r3, #0]
    7aa4:	f7ff ff2c 	bl	7900 <_malloc_trim_r>
    7aa8:	e7b8      	b.n	7a1c <_free_r+0x7c>
    7aaa:	0018      	movs	r0, r3
    7aac:	e7cf      	b.n	7a4e <_free_r+0xae>
    7aae:	4666      	mov	r6, ip
    7ab0:	18d0      	adds	r0, r2, r3
    7ab2:	6840      	ldr	r0, [r0, #4]
    7ab4:	4230      	tst	r0, r6
    7ab6:	d13f      	bne.n	7b38 <_free_r+0x198>
    7ab8:	6890      	ldr	r0, [r2, #8]
    7aba:	195d      	adds	r5, r3, r5
    7abc:	68d3      	ldr	r3, [r2, #12]
    7abe:	60c3      	str	r3, [r0, #12]
    7ac0:	6098      	str	r0, [r3, #8]
    7ac2:	4663      	mov	r3, ip
    7ac4:	432b      	orrs	r3, r5
    7ac6:	604b      	str	r3, [r1, #4]
    7ac8:	514d      	str	r5, [r1, r5]
    7aca:	e7a7      	b.n	7a1c <_free_r+0x7c>
    7acc:	2814      	cmp	r0, #20
    7ace:	d814      	bhi.n	7afa <_free_r+0x15a>
    7ad0:	0002      	movs	r2, r0
    7ad2:	305c      	adds	r0, #92	; 0x5c
    7ad4:	325b      	adds	r2, #91	; 0x5b
    7ad6:	00c0      	lsls	r0, r0, #3
    7ad8:	e7ac      	b.n	7a34 <_free_r+0x94>
    7ada:	2301      	movs	r3, #1
    7adc:	1092      	asrs	r2, r2, #2
    7ade:	4093      	lsls	r3, r2
    7ae0:	687a      	ldr	r2, [r7, #4]
    7ae2:	4313      	orrs	r3, r2
    7ae4:	607b      	str	r3, [r7, #4]
    7ae6:	0003      	movs	r3, r0
    7ae8:	e7b2      	b.n	7a50 <_free_r+0xb0>
    7aea:	4328      	orrs	r0, r5
    7aec:	60d9      	str	r1, [r3, #12]
    7aee:	6099      	str	r1, [r3, #8]
    7af0:	60cb      	str	r3, [r1, #12]
    7af2:	608b      	str	r3, [r1, #8]
    7af4:	6048      	str	r0, [r1, #4]
    7af6:	514d      	str	r5, [r1, r5]
    7af8:	e790      	b.n	7a1c <_free_r+0x7c>
    7afa:	2854      	cmp	r0, #84	; 0x54
    7afc:	d805      	bhi.n	7b0a <_free_r+0x16a>
    7afe:	0b28      	lsrs	r0, r5, #12
    7b00:	0002      	movs	r2, r0
    7b02:	306f      	adds	r0, #111	; 0x6f
    7b04:	326e      	adds	r2, #110	; 0x6e
    7b06:	00c0      	lsls	r0, r0, #3
    7b08:	e794      	b.n	7a34 <_free_r+0x94>
    7b0a:	22aa      	movs	r2, #170	; 0xaa
    7b0c:	0052      	lsls	r2, r2, #1
    7b0e:	4290      	cmp	r0, r2
    7b10:	d805      	bhi.n	7b1e <_free_r+0x17e>
    7b12:	0be8      	lsrs	r0, r5, #15
    7b14:	0002      	movs	r2, r0
    7b16:	3078      	adds	r0, #120	; 0x78
    7b18:	3277      	adds	r2, #119	; 0x77
    7b1a:	00c0      	lsls	r0, r0, #3
    7b1c:	e78a      	b.n	7a34 <_free_r+0x94>
    7b1e:	4a0e      	ldr	r2, [pc, #56]	; (7b58 <_free_r+0x1b8>)
    7b20:	4290      	cmp	r0, r2
    7b22:	d805      	bhi.n	7b30 <_free_r+0x190>
    7b24:	0ca8      	lsrs	r0, r5, #18
    7b26:	0002      	movs	r2, r0
    7b28:	307d      	adds	r0, #125	; 0x7d
    7b2a:	327c      	adds	r2, #124	; 0x7c
    7b2c:	00c0      	lsls	r0, r0, #3
    7b2e:	e781      	b.n	7a34 <_free_r+0x94>
    7b30:	20fe      	movs	r0, #254	; 0xfe
    7b32:	227e      	movs	r2, #126	; 0x7e
    7b34:	0080      	lsls	r0, r0, #2
    7b36:	e77d      	b.n	7a34 <_free_r+0x94>
    7b38:	4663      	mov	r3, ip
    7b3a:	432b      	orrs	r3, r5
    7b3c:	604b      	str	r3, [r1, #4]
    7b3e:	6015      	str	r5, [r2, #0]
    7b40:	e76c      	b.n	7a1c <_free_r+0x7c>
    7b42:	46c0      	nop			; (mov r8, r8)
    7b44:	20000444 	.word	0x20000444
    7b48:	000001ff 	.word	0x000001ff
    7b4c:	2000044c 	.word	0x2000044c
    7b50:	20000850 	.word	0x20000850
    7b54:	20000b74 	.word	0x20000b74
    7b58:	00000554 	.word	0x00000554

00007b5c <__ascii_mbtowc>:
    7b5c:	b082      	sub	sp, #8
    7b5e:	2900      	cmp	r1, #0
    7b60:	d00a      	beq.n	7b78 <__ascii_mbtowc+0x1c>
    7b62:	2a00      	cmp	r2, #0
    7b64:	d00b      	beq.n	7b7e <__ascii_mbtowc+0x22>
    7b66:	2b00      	cmp	r3, #0
    7b68:	d00b      	beq.n	7b82 <__ascii_mbtowc+0x26>
    7b6a:	7813      	ldrb	r3, [r2, #0]
    7b6c:	600b      	str	r3, [r1, #0]
    7b6e:	7810      	ldrb	r0, [r2, #0]
    7b70:	1e43      	subs	r3, r0, #1
    7b72:	4198      	sbcs	r0, r3
    7b74:	b002      	add	sp, #8
    7b76:	4770      	bx	lr
    7b78:	a901      	add	r1, sp, #4
    7b7a:	2a00      	cmp	r2, #0
    7b7c:	d1f3      	bne.n	7b66 <__ascii_mbtowc+0xa>
    7b7e:	2000      	movs	r0, #0
    7b80:	e7f8      	b.n	7b74 <__ascii_mbtowc+0x18>
    7b82:	2002      	movs	r0, #2
    7b84:	4240      	negs	r0, r0
    7b86:	e7f5      	b.n	7b74 <__ascii_mbtowc+0x18>

00007b88 <memmove>:
    7b88:	b5f0      	push	{r4, r5, r6, r7, lr}
    7b8a:	4288      	cmp	r0, r1
    7b8c:	d90a      	bls.n	7ba4 <memmove+0x1c>
    7b8e:	188b      	adds	r3, r1, r2
    7b90:	4298      	cmp	r0, r3
    7b92:	d207      	bcs.n	7ba4 <memmove+0x1c>
    7b94:	1e53      	subs	r3, r2, #1
    7b96:	2a00      	cmp	r2, #0
    7b98:	d003      	beq.n	7ba2 <memmove+0x1a>
    7b9a:	5cca      	ldrb	r2, [r1, r3]
    7b9c:	54c2      	strb	r2, [r0, r3]
    7b9e:	3b01      	subs	r3, #1
    7ba0:	d2fb      	bcs.n	7b9a <memmove+0x12>
    7ba2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7ba4:	0005      	movs	r5, r0
    7ba6:	2a0f      	cmp	r2, #15
    7ba8:	d808      	bhi.n	7bbc <memmove+0x34>
    7baa:	2a00      	cmp	r2, #0
    7bac:	d0f9      	beq.n	7ba2 <memmove+0x1a>
    7bae:	2300      	movs	r3, #0
    7bb0:	5ccc      	ldrb	r4, [r1, r3]
    7bb2:	54ec      	strb	r4, [r5, r3]
    7bb4:	3301      	adds	r3, #1
    7bb6:	4293      	cmp	r3, r2
    7bb8:	d1fa      	bne.n	7bb0 <memmove+0x28>
    7bba:	e7f2      	b.n	7ba2 <memmove+0x1a>
    7bbc:	000b      	movs	r3, r1
    7bbe:	4303      	orrs	r3, r0
    7bc0:	079b      	lsls	r3, r3, #30
    7bc2:	d12d      	bne.n	7c20 <memmove+0x98>
    7bc4:	0015      	movs	r5, r2
    7bc6:	000c      	movs	r4, r1
    7bc8:	0003      	movs	r3, r0
    7bca:	3d10      	subs	r5, #16
    7bcc:	092f      	lsrs	r7, r5, #4
    7bce:	3701      	adds	r7, #1
    7bd0:	013f      	lsls	r7, r7, #4
    7bd2:	19c7      	adds	r7, r0, r7
    7bd4:	6826      	ldr	r6, [r4, #0]
    7bd6:	601e      	str	r6, [r3, #0]
    7bd8:	6866      	ldr	r6, [r4, #4]
    7bda:	605e      	str	r6, [r3, #4]
    7bdc:	68a6      	ldr	r6, [r4, #8]
    7bde:	609e      	str	r6, [r3, #8]
    7be0:	68e6      	ldr	r6, [r4, #12]
    7be2:	3410      	adds	r4, #16
    7be4:	60de      	str	r6, [r3, #12]
    7be6:	3310      	adds	r3, #16
    7be8:	429f      	cmp	r7, r3
    7bea:	d1f3      	bne.n	7bd4 <memmove+0x4c>
    7bec:	240f      	movs	r4, #15
    7bee:	43a5      	bics	r5, r4
    7bf0:	3510      	adds	r5, #16
    7bf2:	1949      	adds	r1, r1, r5
    7bf4:	4014      	ands	r4, r2
    7bf6:	1945      	adds	r5, r0, r5
    7bf8:	2c03      	cmp	r4, #3
    7bfa:	d913      	bls.n	7c24 <memmove+0x9c>
    7bfc:	2300      	movs	r3, #0
    7bfe:	1f27      	subs	r7, r4, #4
    7c00:	08be      	lsrs	r6, r7, #2
    7c02:	3601      	adds	r6, #1
    7c04:	00b6      	lsls	r6, r6, #2
    7c06:	58cc      	ldr	r4, [r1, r3]
    7c08:	50ec      	str	r4, [r5, r3]
    7c0a:	3304      	adds	r3, #4
    7c0c:	42b3      	cmp	r3, r6
    7c0e:	d1fa      	bne.n	7c06 <memmove+0x7e>
    7c10:	2603      	movs	r6, #3
    7c12:	43b7      	bics	r7, r6
    7c14:	1d3c      	adds	r4, r7, #4
    7c16:	1909      	adds	r1, r1, r4
    7c18:	192d      	adds	r5, r5, r4
    7c1a:	4032      	ands	r2, r6
    7c1c:	d1c7      	bne.n	7bae <memmove+0x26>
    7c1e:	e7c0      	b.n	7ba2 <memmove+0x1a>
    7c20:	0005      	movs	r5, r0
    7c22:	e7c4      	b.n	7bae <memmove+0x26>
    7c24:	0022      	movs	r2, r4
    7c26:	e7c0      	b.n	7baa <memmove+0x22>

00007c28 <_realloc_r>:
    7c28:	b5f0      	push	{r4, r5, r6, r7, lr}
    7c2a:	464e      	mov	r6, r9
    7c2c:	4645      	mov	r5, r8
    7c2e:	46de      	mov	lr, fp
    7c30:	4657      	mov	r7, sl
    7c32:	b5e0      	push	{r5, r6, r7, lr}
    7c34:	b085      	sub	sp, #20
    7c36:	9001      	str	r0, [sp, #4]
    7c38:	000e      	movs	r6, r1
    7c3a:	0015      	movs	r5, r2
    7c3c:	2900      	cmp	r1, #0
    7c3e:	d100      	bne.n	7c42 <_realloc_r+0x1a>
    7c40:	e09e      	b.n	7d80 <_realloc_r+0x158>
    7c42:	0037      	movs	r7, r6
    7c44:	9801      	ldr	r0, [sp, #4]
    7c46:	3f08      	subs	r7, #8
    7c48:	f7ff fa34 	bl	70b4 <__malloc_lock>
    7c4c:	687a      	ldr	r2, [r7, #4]
    7c4e:	2303      	movs	r3, #3
    7c50:	0014      	movs	r4, r2
    7c52:	439c      	bics	r4, r3
    7c54:	002b      	movs	r3, r5
    7c56:	330b      	adds	r3, #11
    7c58:	46b9      	mov	r9, r7
    7c5a:	2b16      	cmp	r3, #22
    7c5c:	d847      	bhi.n	7cee <_realloc_r+0xc6>
    7c5e:	2110      	movs	r1, #16
    7c60:	2310      	movs	r3, #16
    7c62:	4688      	mov	r8, r1
    7c64:	4545      	cmp	r5, r8
    7c66:	d846      	bhi.n	7cf6 <_realloc_r+0xce>
    7c68:	429c      	cmp	r4, r3
    7c6a:	da49      	bge.n	7d00 <_realloc_r+0xd8>
    7c6c:	49cc      	ldr	r1, [pc, #816]	; (7fa0 <_realloc_r+0x378>)
    7c6e:	1938      	adds	r0, r7, r4
    7c70:	468b      	mov	fp, r1
    7c72:	6889      	ldr	r1, [r1, #8]
    7c74:	9002      	str	r0, [sp, #8]
    7c76:	4288      	cmp	r0, r1
    7c78:	d100      	bne.n	7c7c <_realloc_r+0x54>
    7c7a:	e0c2      	b.n	7e02 <_realloc_r+0x1da>
    7c7c:	2101      	movs	r1, #1
    7c7e:	468a      	mov	sl, r1
    7c80:	6840      	ldr	r0, [r0, #4]
    7c82:	0001      	movs	r1, r0
    7c84:	9003      	str	r0, [sp, #12]
    7c86:	4650      	mov	r0, sl
    7c88:	4381      	bics	r1, r0
    7c8a:	468c      	mov	ip, r1
    7c8c:	9902      	ldr	r1, [sp, #8]
    7c8e:	468b      	mov	fp, r1
    7c90:	44dc      	add	ip, fp
    7c92:	4661      	mov	r1, ip
    7c94:	6849      	ldr	r1, [r1, #4]
    7c96:	4201      	tst	r1, r0
    7c98:	d04d      	beq.n	7d36 <_realloc_r+0x10e>
    7c9a:	4210      	tst	r0, r2
    7c9c:	d100      	bne.n	7ca0 <_realloc_r+0x78>
    7c9e:	e0a2      	b.n	7de6 <_realloc_r+0x1be>
    7ca0:	0029      	movs	r1, r5
    7ca2:	9801      	ldr	r0, [sp, #4]
    7ca4:	f7fe ff12 	bl	6acc <_malloc_r>
    7ca8:	1e05      	subs	r5, r0, #0
    7caa:	d039      	beq.n	7d20 <_realloc_r+0xf8>
    7cac:	2301      	movs	r3, #1
    7cae:	0002      	movs	r2, r0
    7cb0:	6879      	ldr	r1, [r7, #4]
    7cb2:	3a08      	subs	r2, #8
    7cb4:	4399      	bics	r1, r3
    7cb6:	187f      	adds	r7, r7, r1
    7cb8:	42ba      	cmp	r2, r7
    7cba:	d100      	bne.n	7cbe <_realloc_r+0x96>
    7cbc:	e12e      	b.n	7f1c <_realloc_r+0x2f4>
    7cbe:	1f22      	subs	r2, r4, #4
    7cc0:	2a24      	cmp	r2, #36	; 0x24
    7cc2:	d900      	bls.n	7cc6 <_realloc_r+0x9e>
    7cc4:	e114      	b.n	7ef0 <_realloc_r+0x2c8>
    7cc6:	2a13      	cmp	r2, #19
    7cc8:	d900      	bls.n	7ccc <_realloc_r+0xa4>
    7cca:	e0e8      	b.n	7e9e <_realloc_r+0x276>
    7ccc:	0003      	movs	r3, r0
    7cce:	0032      	movs	r2, r6
    7cd0:	6811      	ldr	r1, [r2, #0]
    7cd2:	6019      	str	r1, [r3, #0]
    7cd4:	6851      	ldr	r1, [r2, #4]
    7cd6:	6059      	str	r1, [r3, #4]
    7cd8:	6892      	ldr	r2, [r2, #8]
    7cda:	609a      	str	r2, [r3, #8]
    7cdc:	9c01      	ldr	r4, [sp, #4]
    7cde:	0031      	movs	r1, r6
    7ce0:	0020      	movs	r0, r4
    7ce2:	f7ff fe5d 	bl	79a0 <_free_r>
    7ce6:	0020      	movs	r0, r4
    7ce8:	f7ff f9ec 	bl	70c4 <__malloc_unlock>
    7cec:	e01b      	b.n	7d26 <_realloc_r+0xfe>
    7cee:	2107      	movs	r1, #7
    7cf0:	438b      	bics	r3, r1
    7cf2:	4698      	mov	r8, r3
    7cf4:	d5b6      	bpl.n	7c64 <_realloc_r+0x3c>
    7cf6:	230c      	movs	r3, #12
    7cf8:	9a01      	ldr	r2, [sp, #4]
    7cfa:	2500      	movs	r5, #0
    7cfc:	6013      	str	r3, [r2, #0]
    7cfe:	e012      	b.n	7d26 <_realloc_r+0xfe>
    7d00:	0035      	movs	r5, r6
    7d02:	4643      	mov	r3, r8
    7d04:	1ae3      	subs	r3, r4, r3
    7d06:	2b0f      	cmp	r3, #15
    7d08:	d825      	bhi.n	7d56 <_realloc_r+0x12e>
    7d0a:	464b      	mov	r3, r9
    7d0c:	2201      	movs	r2, #1
    7d0e:	4649      	mov	r1, r9
    7d10:	685b      	ldr	r3, [r3, #4]
    7d12:	4013      	ands	r3, r2
    7d14:	4323      	orrs	r3, r4
    7d16:	604b      	str	r3, [r1, #4]
    7d18:	444c      	add	r4, r9
    7d1a:	6863      	ldr	r3, [r4, #4]
    7d1c:	431a      	orrs	r2, r3
    7d1e:	6062      	str	r2, [r4, #4]
    7d20:	9801      	ldr	r0, [sp, #4]
    7d22:	f7ff f9cf 	bl	70c4 <__malloc_unlock>
    7d26:	0028      	movs	r0, r5
    7d28:	b005      	add	sp, #20
    7d2a:	bc3c      	pop	{r2, r3, r4, r5}
    7d2c:	4690      	mov	r8, r2
    7d2e:	4699      	mov	r9, r3
    7d30:	46a2      	mov	sl, r4
    7d32:	46ab      	mov	fp, r5
    7d34:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7d36:	2103      	movs	r1, #3
    7d38:	9803      	ldr	r0, [sp, #12]
    7d3a:	468c      	mov	ip, r1
    7d3c:	4388      	bics	r0, r1
    7d3e:	1821      	adds	r1, r4, r0
    7d40:	468b      	mov	fp, r1
    7d42:	4299      	cmp	r1, r3
    7d44:	db21      	blt.n	7d8a <_realloc_r+0x162>
    7d46:	9a02      	ldr	r2, [sp, #8]
    7d48:	0035      	movs	r5, r6
    7d4a:	68d3      	ldr	r3, [r2, #12]
    7d4c:	6892      	ldr	r2, [r2, #8]
    7d4e:	465c      	mov	r4, fp
    7d50:	60d3      	str	r3, [r2, #12]
    7d52:	609a      	str	r2, [r3, #8]
    7d54:	e7d5      	b.n	7d02 <_realloc_r+0xda>
    7d56:	464a      	mov	r2, r9
    7d58:	2001      	movs	r0, #1
    7d5a:	4646      	mov	r6, r8
    7d5c:	6852      	ldr	r2, [r2, #4]
    7d5e:	4649      	mov	r1, r9
    7d60:	4002      	ands	r2, r0
    7d62:	4332      	orrs	r2, r6
    7d64:	464e      	mov	r6, r9
    7d66:	4441      	add	r1, r8
    7d68:	4303      	orrs	r3, r0
    7d6a:	6072      	str	r2, [r6, #4]
    7d6c:	444c      	add	r4, r9
    7d6e:	604b      	str	r3, [r1, #4]
    7d70:	6863      	ldr	r3, [r4, #4]
    7d72:	3108      	adds	r1, #8
    7d74:	4318      	orrs	r0, r3
    7d76:	6060      	str	r0, [r4, #4]
    7d78:	9801      	ldr	r0, [sp, #4]
    7d7a:	f7ff fe11 	bl	79a0 <_free_r>
    7d7e:	e7cf      	b.n	7d20 <_realloc_r+0xf8>
    7d80:	0011      	movs	r1, r2
    7d82:	f7fe fea3 	bl	6acc <_malloc_r>
    7d86:	0005      	movs	r5, r0
    7d88:	e7cd      	b.n	7d26 <_realloc_r+0xfe>
    7d8a:	4651      	mov	r1, sl
    7d8c:	4211      	tst	r1, r2
    7d8e:	d000      	beq.n	7d92 <_realloc_r+0x16a>
    7d90:	e786      	b.n	7ca0 <_realloc_r+0x78>
    7d92:	4661      	mov	r1, ip
    7d94:	683a      	ldr	r2, [r7, #0]
    7d96:	1aba      	subs	r2, r7, r2
    7d98:	4692      	mov	sl, r2
    7d9a:	6852      	ldr	r2, [r2, #4]
    7d9c:	438a      	bics	r2, r1
    7d9e:	1880      	adds	r0, r0, r2
    7da0:	4683      	mov	fp, r0
    7da2:	44a3      	add	fp, r4
    7da4:	459b      	cmp	fp, r3
    7da6:	db26      	blt.n	7df6 <_realloc_r+0x1ce>
    7da8:	9a02      	ldr	r2, [sp, #8]
    7daa:	68d3      	ldr	r3, [r2, #12]
    7dac:	6892      	ldr	r2, [r2, #8]
    7dae:	60d3      	str	r3, [r2, #12]
    7db0:	609a      	str	r2, [r3, #8]
    7db2:	4653      	mov	r3, sl
    7db4:	4652      	mov	r2, sl
    7db6:	4655      	mov	r5, sl
    7db8:	6892      	ldr	r2, [r2, #8]
    7dba:	68db      	ldr	r3, [r3, #12]
    7dbc:	3508      	adds	r5, #8
    7dbe:	60d3      	str	r3, [r2, #12]
    7dc0:	609a      	str	r2, [r3, #8]
    7dc2:	1f22      	subs	r2, r4, #4
    7dc4:	2a24      	cmp	r2, #36	; 0x24
    7dc6:	d900      	bls.n	7dca <_realloc_r+0x1a2>
    7dc8:	e096      	b.n	7ef8 <_realloc_r+0x2d0>
    7dca:	2a13      	cmp	r2, #19
    7dcc:	d972      	bls.n	7eb4 <_realloc_r+0x28c>
    7dce:	4653      	mov	r3, sl
    7dd0:	6831      	ldr	r1, [r6, #0]
    7dd2:	6099      	str	r1, [r3, #8]
    7dd4:	6871      	ldr	r1, [r6, #4]
    7dd6:	60d9      	str	r1, [r3, #12]
    7dd8:	2a1b      	cmp	r2, #27
    7dda:	d900      	bls.n	7dde <_realloc_r+0x1b6>
    7ddc:	e0a4      	b.n	7f28 <_realloc_r+0x300>
    7dde:	0032      	movs	r2, r6
    7de0:	3310      	adds	r3, #16
    7de2:	3208      	adds	r2, #8
    7de4:	e068      	b.n	7eb8 <_realloc_r+0x290>
    7de6:	683a      	ldr	r2, [r7, #0]
    7de8:	1aba      	subs	r2, r7, r2
    7dea:	4692      	mov	sl, r2
    7dec:	4651      	mov	r1, sl
    7dee:	2203      	movs	r2, #3
    7df0:	6849      	ldr	r1, [r1, #4]
    7df2:	4391      	bics	r1, r2
    7df4:	000a      	movs	r2, r1
    7df6:	4693      	mov	fp, r2
    7df8:	44a3      	add	fp, r4
    7dfa:	459b      	cmp	fp, r3
    7dfc:	da00      	bge.n	7e00 <_realloc_r+0x1d8>
    7dfe:	e74f      	b.n	7ca0 <_realloc_r+0x78>
    7e00:	e7d7      	b.n	7db2 <_realloc_r+0x18a>
    7e02:	2003      	movs	r0, #3
    7e04:	9902      	ldr	r1, [sp, #8]
    7e06:	4684      	mov	ip, r0
    7e08:	6849      	ldr	r1, [r1, #4]
    7e0a:	4381      	bics	r1, r0
    7e0c:	4640      	mov	r0, r8
    7e0e:	1909      	adds	r1, r1, r4
    7e10:	3010      	adds	r0, #16
    7e12:	9002      	str	r0, [sp, #8]
    7e14:	4281      	cmp	r1, r0
    7e16:	da58      	bge.n	7eca <_realloc_r+0x2a2>
    7e18:	07d2      	lsls	r2, r2, #31
    7e1a:	d500      	bpl.n	7e1e <_realloc_r+0x1f6>
    7e1c:	e740      	b.n	7ca0 <_realloc_r+0x78>
    7e1e:	4660      	mov	r0, ip
    7e20:	683a      	ldr	r2, [r7, #0]
    7e22:	1aba      	subs	r2, r7, r2
    7e24:	4692      	mov	sl, r2
    7e26:	6852      	ldr	r2, [r2, #4]
    7e28:	4382      	bics	r2, r0
    7e2a:	9802      	ldr	r0, [sp, #8]
    7e2c:	1851      	adds	r1, r2, r1
    7e2e:	9103      	str	r1, [sp, #12]
    7e30:	4288      	cmp	r0, r1
    7e32:	dce0      	bgt.n	7df6 <_realloc_r+0x1ce>
    7e34:	4653      	mov	r3, sl
    7e36:	4652      	mov	r2, sl
    7e38:	4655      	mov	r5, sl
    7e3a:	6892      	ldr	r2, [r2, #8]
    7e3c:	68db      	ldr	r3, [r3, #12]
    7e3e:	3508      	adds	r5, #8
    7e40:	60d3      	str	r3, [r2, #12]
    7e42:	609a      	str	r2, [r3, #8]
    7e44:	1f22      	subs	r2, r4, #4
    7e46:	2a24      	cmp	r2, #36	; 0x24
    7e48:	d900      	bls.n	7e4c <_realloc_r+0x224>
    7e4a:	e08e      	b.n	7f6a <_realloc_r+0x342>
    7e4c:	2a13      	cmp	r2, #19
    7e4e:	d800      	bhi.n	7e52 <_realloc_r+0x22a>
    7e50:	e088      	b.n	7f64 <_realloc_r+0x33c>
    7e52:	4653      	mov	r3, sl
    7e54:	6831      	ldr	r1, [r6, #0]
    7e56:	6099      	str	r1, [r3, #8]
    7e58:	6871      	ldr	r1, [r6, #4]
    7e5a:	60d9      	str	r1, [r3, #12]
    7e5c:	2a1b      	cmp	r2, #27
    7e5e:	d900      	bls.n	7e62 <_realloc_r+0x23a>
    7e60:	e088      	b.n	7f74 <_realloc_r+0x34c>
    7e62:	0032      	movs	r2, r6
    7e64:	3310      	adds	r3, #16
    7e66:	3208      	adds	r2, #8
    7e68:	6811      	ldr	r1, [r2, #0]
    7e6a:	6019      	str	r1, [r3, #0]
    7e6c:	6851      	ldr	r1, [r2, #4]
    7e6e:	6059      	str	r1, [r3, #4]
    7e70:	6892      	ldr	r2, [r2, #8]
    7e72:	609a      	str	r2, [r3, #8]
    7e74:	4651      	mov	r1, sl
    7e76:	465b      	mov	r3, fp
    7e78:	4642      	mov	r2, r8
    7e7a:	4441      	add	r1, r8
    7e7c:	6099      	str	r1, [r3, #8]
    7e7e:	9b03      	ldr	r3, [sp, #12]
    7e80:	9801      	ldr	r0, [sp, #4]
    7e82:	1a9a      	subs	r2, r3, r2
    7e84:	2301      	movs	r3, #1
    7e86:	431a      	orrs	r2, r3
    7e88:	604a      	str	r2, [r1, #4]
    7e8a:	4652      	mov	r2, sl
    7e8c:	6852      	ldr	r2, [r2, #4]
    7e8e:	4013      	ands	r3, r2
    7e90:	4642      	mov	r2, r8
    7e92:	4313      	orrs	r3, r2
    7e94:	4652      	mov	r2, sl
    7e96:	6053      	str	r3, [r2, #4]
    7e98:	f7ff f914 	bl	70c4 <__malloc_unlock>
    7e9c:	e743      	b.n	7d26 <_realloc_r+0xfe>
    7e9e:	6833      	ldr	r3, [r6, #0]
    7ea0:	6003      	str	r3, [r0, #0]
    7ea2:	6873      	ldr	r3, [r6, #4]
    7ea4:	6043      	str	r3, [r0, #4]
    7ea6:	2a1b      	cmp	r2, #27
    7ea8:	d82d      	bhi.n	7f06 <_realloc_r+0x2de>
    7eaa:	0003      	movs	r3, r0
    7eac:	0032      	movs	r2, r6
    7eae:	3308      	adds	r3, #8
    7eb0:	3208      	adds	r2, #8
    7eb2:	e70d      	b.n	7cd0 <_realloc_r+0xa8>
    7eb4:	002b      	movs	r3, r5
    7eb6:	0032      	movs	r2, r6
    7eb8:	6811      	ldr	r1, [r2, #0]
    7eba:	465c      	mov	r4, fp
    7ebc:	6019      	str	r1, [r3, #0]
    7ebe:	6851      	ldr	r1, [r2, #4]
    7ec0:	46d1      	mov	r9, sl
    7ec2:	6059      	str	r1, [r3, #4]
    7ec4:	6892      	ldr	r2, [r2, #8]
    7ec6:	609a      	str	r2, [r3, #8]
    7ec8:	e71b      	b.n	7d02 <_realloc_r+0xda>
    7eca:	4643      	mov	r3, r8
    7ecc:	18fa      	adds	r2, r7, r3
    7ece:	465b      	mov	r3, fp
    7ed0:	609a      	str	r2, [r3, #8]
    7ed2:	4643      	mov	r3, r8
    7ed4:	1ac9      	subs	r1, r1, r3
    7ed6:	2301      	movs	r3, #1
    7ed8:	4319      	orrs	r1, r3
    7eda:	6051      	str	r1, [r2, #4]
    7edc:	687a      	ldr	r2, [r7, #4]
    7ede:	9801      	ldr	r0, [sp, #4]
    7ee0:	4013      	ands	r3, r2
    7ee2:	4642      	mov	r2, r8
    7ee4:	4313      	orrs	r3, r2
    7ee6:	607b      	str	r3, [r7, #4]
    7ee8:	f7ff f8ec 	bl	70c4 <__malloc_unlock>
    7eec:	0035      	movs	r5, r6
    7eee:	e71a      	b.n	7d26 <_realloc_r+0xfe>
    7ef0:	0031      	movs	r1, r6
    7ef2:	f7ff fe49 	bl	7b88 <memmove>
    7ef6:	e6f1      	b.n	7cdc <_realloc_r+0xb4>
    7ef8:	0031      	movs	r1, r6
    7efa:	0028      	movs	r0, r5
    7efc:	f7ff fe44 	bl	7b88 <memmove>
    7f00:	465c      	mov	r4, fp
    7f02:	46d1      	mov	r9, sl
    7f04:	e6fd      	b.n	7d02 <_realloc_r+0xda>
    7f06:	68b3      	ldr	r3, [r6, #8]
    7f08:	6083      	str	r3, [r0, #8]
    7f0a:	68f3      	ldr	r3, [r6, #12]
    7f0c:	60c3      	str	r3, [r0, #12]
    7f0e:	2a24      	cmp	r2, #36	; 0x24
    7f10:	d015      	beq.n	7f3e <_realloc_r+0x316>
    7f12:	0003      	movs	r3, r0
    7f14:	0032      	movs	r2, r6
    7f16:	3310      	adds	r3, #16
    7f18:	3210      	adds	r2, #16
    7f1a:	e6d9      	b.n	7cd0 <_realloc_r+0xa8>
    7f1c:	6853      	ldr	r3, [r2, #4]
    7f1e:	2203      	movs	r2, #3
    7f20:	4393      	bics	r3, r2
    7f22:	18e4      	adds	r4, r4, r3
    7f24:	0035      	movs	r5, r6
    7f26:	e6ec      	b.n	7d02 <_realloc_r+0xda>
    7f28:	4653      	mov	r3, sl
    7f2a:	68b1      	ldr	r1, [r6, #8]
    7f2c:	6119      	str	r1, [r3, #16]
    7f2e:	68f1      	ldr	r1, [r6, #12]
    7f30:	6159      	str	r1, [r3, #20]
    7f32:	2a24      	cmp	r2, #36	; 0x24
    7f34:	d00c      	beq.n	7f50 <_realloc_r+0x328>
    7f36:	0032      	movs	r2, r6
    7f38:	3318      	adds	r3, #24
    7f3a:	3210      	adds	r2, #16
    7f3c:	e7bc      	b.n	7eb8 <_realloc_r+0x290>
    7f3e:	6933      	ldr	r3, [r6, #16]
    7f40:	0032      	movs	r2, r6
    7f42:	6103      	str	r3, [r0, #16]
    7f44:	0003      	movs	r3, r0
    7f46:	6971      	ldr	r1, [r6, #20]
    7f48:	3318      	adds	r3, #24
    7f4a:	3218      	adds	r2, #24
    7f4c:	6141      	str	r1, [r0, #20]
    7f4e:	e6bf      	b.n	7cd0 <_realloc_r+0xa8>
    7f50:	4653      	mov	r3, sl
    7f52:	6932      	ldr	r2, [r6, #16]
    7f54:	4651      	mov	r1, sl
    7f56:	619a      	str	r2, [r3, #24]
    7f58:	0032      	movs	r2, r6
    7f5a:	6970      	ldr	r0, [r6, #20]
    7f5c:	3320      	adds	r3, #32
    7f5e:	3218      	adds	r2, #24
    7f60:	61c8      	str	r0, [r1, #28]
    7f62:	e7a9      	b.n	7eb8 <_realloc_r+0x290>
    7f64:	002b      	movs	r3, r5
    7f66:	0032      	movs	r2, r6
    7f68:	e77e      	b.n	7e68 <_realloc_r+0x240>
    7f6a:	0031      	movs	r1, r6
    7f6c:	0028      	movs	r0, r5
    7f6e:	f7ff fe0b 	bl	7b88 <memmove>
    7f72:	e77f      	b.n	7e74 <_realloc_r+0x24c>
    7f74:	4653      	mov	r3, sl
    7f76:	68b1      	ldr	r1, [r6, #8]
    7f78:	6119      	str	r1, [r3, #16]
    7f7a:	68f1      	ldr	r1, [r6, #12]
    7f7c:	6159      	str	r1, [r3, #20]
    7f7e:	2a24      	cmp	r2, #36	; 0x24
    7f80:	d003      	beq.n	7f8a <_realloc_r+0x362>
    7f82:	0032      	movs	r2, r6
    7f84:	3318      	adds	r3, #24
    7f86:	3210      	adds	r2, #16
    7f88:	e76e      	b.n	7e68 <_realloc_r+0x240>
    7f8a:	4653      	mov	r3, sl
    7f8c:	6932      	ldr	r2, [r6, #16]
    7f8e:	4651      	mov	r1, sl
    7f90:	619a      	str	r2, [r3, #24]
    7f92:	0032      	movs	r2, r6
    7f94:	6970      	ldr	r0, [r6, #20]
    7f96:	3320      	adds	r3, #32
    7f98:	3218      	adds	r2, #24
    7f9a:	61c8      	str	r0, [r1, #28]
    7f9c:	e764      	b.n	7e68 <_realloc_r+0x240>
    7f9e:	46c0      	nop			; (mov r8, r8)
    7fa0:	20000444 	.word	0x20000444

00007fa4 <__ascii_wctomb>:
    7fa4:	2900      	cmp	r1, #0
    7fa6:	d004      	beq.n	7fb2 <__ascii_wctomb+0xe>
    7fa8:	2aff      	cmp	r2, #255	; 0xff
    7faa:	d804      	bhi.n	7fb6 <__ascii_wctomb+0x12>
    7fac:	2001      	movs	r0, #1
    7fae:	700a      	strb	r2, [r1, #0]
    7fb0:	4770      	bx	lr
    7fb2:	2000      	movs	r0, #0
    7fb4:	e7fc      	b.n	7fb0 <__ascii_wctomb+0xc>
    7fb6:	238a      	movs	r3, #138	; 0x8a
    7fb8:	6003      	str	r3, [r0, #0]
    7fba:	2001      	movs	r0, #1
    7fbc:	4240      	negs	r0, r0
    7fbe:	e7f7      	b.n	7fb0 <__ascii_wctomb+0xc>

00007fc0 <__divsi3>:
    7fc0:	4603      	mov	r3, r0
    7fc2:	430b      	orrs	r3, r1
    7fc4:	d47f      	bmi.n	80c6 <__divsi3+0x106>
    7fc6:	2200      	movs	r2, #0
    7fc8:	0843      	lsrs	r3, r0, #1
    7fca:	428b      	cmp	r3, r1
    7fcc:	d374      	bcc.n	80b8 <__divsi3+0xf8>
    7fce:	0903      	lsrs	r3, r0, #4
    7fd0:	428b      	cmp	r3, r1
    7fd2:	d35f      	bcc.n	8094 <__divsi3+0xd4>
    7fd4:	0a03      	lsrs	r3, r0, #8
    7fd6:	428b      	cmp	r3, r1
    7fd8:	d344      	bcc.n	8064 <__divsi3+0xa4>
    7fda:	0b03      	lsrs	r3, r0, #12
    7fdc:	428b      	cmp	r3, r1
    7fde:	d328      	bcc.n	8032 <__divsi3+0x72>
    7fe0:	0c03      	lsrs	r3, r0, #16
    7fe2:	428b      	cmp	r3, r1
    7fe4:	d30d      	bcc.n	8002 <__divsi3+0x42>
    7fe6:	22ff      	movs	r2, #255	; 0xff
    7fe8:	0209      	lsls	r1, r1, #8
    7fea:	ba12      	rev	r2, r2
    7fec:	0c03      	lsrs	r3, r0, #16
    7fee:	428b      	cmp	r3, r1
    7ff0:	d302      	bcc.n	7ff8 <__divsi3+0x38>
    7ff2:	1212      	asrs	r2, r2, #8
    7ff4:	0209      	lsls	r1, r1, #8
    7ff6:	d065      	beq.n	80c4 <__divsi3+0x104>
    7ff8:	0b03      	lsrs	r3, r0, #12
    7ffa:	428b      	cmp	r3, r1
    7ffc:	d319      	bcc.n	8032 <__divsi3+0x72>
    7ffe:	e000      	b.n	8002 <__divsi3+0x42>
    8000:	0a09      	lsrs	r1, r1, #8
    8002:	0bc3      	lsrs	r3, r0, #15
    8004:	428b      	cmp	r3, r1
    8006:	d301      	bcc.n	800c <__divsi3+0x4c>
    8008:	03cb      	lsls	r3, r1, #15
    800a:	1ac0      	subs	r0, r0, r3
    800c:	4152      	adcs	r2, r2
    800e:	0b83      	lsrs	r3, r0, #14
    8010:	428b      	cmp	r3, r1
    8012:	d301      	bcc.n	8018 <__divsi3+0x58>
    8014:	038b      	lsls	r3, r1, #14
    8016:	1ac0      	subs	r0, r0, r3
    8018:	4152      	adcs	r2, r2
    801a:	0b43      	lsrs	r3, r0, #13
    801c:	428b      	cmp	r3, r1
    801e:	d301      	bcc.n	8024 <__divsi3+0x64>
    8020:	034b      	lsls	r3, r1, #13
    8022:	1ac0      	subs	r0, r0, r3
    8024:	4152      	adcs	r2, r2
    8026:	0b03      	lsrs	r3, r0, #12
    8028:	428b      	cmp	r3, r1
    802a:	d301      	bcc.n	8030 <__divsi3+0x70>
    802c:	030b      	lsls	r3, r1, #12
    802e:	1ac0      	subs	r0, r0, r3
    8030:	4152      	adcs	r2, r2
    8032:	0ac3      	lsrs	r3, r0, #11
    8034:	428b      	cmp	r3, r1
    8036:	d301      	bcc.n	803c <__divsi3+0x7c>
    8038:	02cb      	lsls	r3, r1, #11
    803a:	1ac0      	subs	r0, r0, r3
    803c:	4152      	adcs	r2, r2
    803e:	0a83      	lsrs	r3, r0, #10
    8040:	428b      	cmp	r3, r1
    8042:	d301      	bcc.n	8048 <__divsi3+0x88>
    8044:	028b      	lsls	r3, r1, #10
    8046:	1ac0      	subs	r0, r0, r3
    8048:	4152      	adcs	r2, r2
    804a:	0a43      	lsrs	r3, r0, #9
    804c:	428b      	cmp	r3, r1
    804e:	d301      	bcc.n	8054 <__divsi3+0x94>
    8050:	024b      	lsls	r3, r1, #9
    8052:	1ac0      	subs	r0, r0, r3
    8054:	4152      	adcs	r2, r2
    8056:	0a03      	lsrs	r3, r0, #8
    8058:	428b      	cmp	r3, r1
    805a:	d301      	bcc.n	8060 <__divsi3+0xa0>
    805c:	020b      	lsls	r3, r1, #8
    805e:	1ac0      	subs	r0, r0, r3
    8060:	4152      	adcs	r2, r2
    8062:	d2cd      	bcs.n	8000 <__divsi3+0x40>
    8064:	09c3      	lsrs	r3, r0, #7
    8066:	428b      	cmp	r3, r1
    8068:	d301      	bcc.n	806e <__divsi3+0xae>
    806a:	01cb      	lsls	r3, r1, #7
    806c:	1ac0      	subs	r0, r0, r3
    806e:	4152      	adcs	r2, r2
    8070:	0983      	lsrs	r3, r0, #6
    8072:	428b      	cmp	r3, r1
    8074:	d301      	bcc.n	807a <__divsi3+0xba>
    8076:	018b      	lsls	r3, r1, #6
    8078:	1ac0      	subs	r0, r0, r3
    807a:	4152      	adcs	r2, r2
    807c:	0943      	lsrs	r3, r0, #5
    807e:	428b      	cmp	r3, r1
    8080:	d301      	bcc.n	8086 <__divsi3+0xc6>
    8082:	014b      	lsls	r3, r1, #5
    8084:	1ac0      	subs	r0, r0, r3
    8086:	4152      	adcs	r2, r2
    8088:	0903      	lsrs	r3, r0, #4
    808a:	428b      	cmp	r3, r1
    808c:	d301      	bcc.n	8092 <__divsi3+0xd2>
    808e:	010b      	lsls	r3, r1, #4
    8090:	1ac0      	subs	r0, r0, r3
    8092:	4152      	adcs	r2, r2
    8094:	08c3      	lsrs	r3, r0, #3
    8096:	428b      	cmp	r3, r1
    8098:	d301      	bcc.n	809e <__divsi3+0xde>
    809a:	00cb      	lsls	r3, r1, #3
    809c:	1ac0      	subs	r0, r0, r3
    809e:	4152      	adcs	r2, r2
    80a0:	0883      	lsrs	r3, r0, #2
    80a2:	428b      	cmp	r3, r1
    80a4:	d301      	bcc.n	80aa <__divsi3+0xea>
    80a6:	008b      	lsls	r3, r1, #2
    80a8:	1ac0      	subs	r0, r0, r3
    80aa:	4152      	adcs	r2, r2
    80ac:	0843      	lsrs	r3, r0, #1
    80ae:	428b      	cmp	r3, r1
    80b0:	d301      	bcc.n	80b6 <__divsi3+0xf6>
    80b2:	004b      	lsls	r3, r1, #1
    80b4:	1ac0      	subs	r0, r0, r3
    80b6:	4152      	adcs	r2, r2
    80b8:	1a41      	subs	r1, r0, r1
    80ba:	d200      	bcs.n	80be <__divsi3+0xfe>
    80bc:	4601      	mov	r1, r0
    80be:	4152      	adcs	r2, r2
    80c0:	4610      	mov	r0, r2
    80c2:	4770      	bx	lr
    80c4:	e05d      	b.n	8182 <__divsi3+0x1c2>
    80c6:	0fca      	lsrs	r2, r1, #31
    80c8:	d000      	beq.n	80cc <__divsi3+0x10c>
    80ca:	4249      	negs	r1, r1
    80cc:	1003      	asrs	r3, r0, #32
    80ce:	d300      	bcc.n	80d2 <__divsi3+0x112>
    80d0:	4240      	negs	r0, r0
    80d2:	4053      	eors	r3, r2
    80d4:	2200      	movs	r2, #0
    80d6:	469c      	mov	ip, r3
    80d8:	0903      	lsrs	r3, r0, #4
    80da:	428b      	cmp	r3, r1
    80dc:	d32d      	bcc.n	813a <__divsi3+0x17a>
    80de:	0a03      	lsrs	r3, r0, #8
    80e0:	428b      	cmp	r3, r1
    80e2:	d312      	bcc.n	810a <__divsi3+0x14a>
    80e4:	22fc      	movs	r2, #252	; 0xfc
    80e6:	0189      	lsls	r1, r1, #6
    80e8:	ba12      	rev	r2, r2
    80ea:	0a03      	lsrs	r3, r0, #8
    80ec:	428b      	cmp	r3, r1
    80ee:	d30c      	bcc.n	810a <__divsi3+0x14a>
    80f0:	0189      	lsls	r1, r1, #6
    80f2:	1192      	asrs	r2, r2, #6
    80f4:	428b      	cmp	r3, r1
    80f6:	d308      	bcc.n	810a <__divsi3+0x14a>
    80f8:	0189      	lsls	r1, r1, #6
    80fa:	1192      	asrs	r2, r2, #6
    80fc:	428b      	cmp	r3, r1
    80fe:	d304      	bcc.n	810a <__divsi3+0x14a>
    8100:	0189      	lsls	r1, r1, #6
    8102:	d03a      	beq.n	817a <__divsi3+0x1ba>
    8104:	1192      	asrs	r2, r2, #6
    8106:	e000      	b.n	810a <__divsi3+0x14a>
    8108:	0989      	lsrs	r1, r1, #6
    810a:	09c3      	lsrs	r3, r0, #7
    810c:	428b      	cmp	r3, r1
    810e:	d301      	bcc.n	8114 <__divsi3+0x154>
    8110:	01cb      	lsls	r3, r1, #7
    8112:	1ac0      	subs	r0, r0, r3
    8114:	4152      	adcs	r2, r2
    8116:	0983      	lsrs	r3, r0, #6
    8118:	428b      	cmp	r3, r1
    811a:	d301      	bcc.n	8120 <__divsi3+0x160>
    811c:	018b      	lsls	r3, r1, #6
    811e:	1ac0      	subs	r0, r0, r3
    8120:	4152      	adcs	r2, r2
    8122:	0943      	lsrs	r3, r0, #5
    8124:	428b      	cmp	r3, r1
    8126:	d301      	bcc.n	812c <__divsi3+0x16c>
    8128:	014b      	lsls	r3, r1, #5
    812a:	1ac0      	subs	r0, r0, r3
    812c:	4152      	adcs	r2, r2
    812e:	0903      	lsrs	r3, r0, #4
    8130:	428b      	cmp	r3, r1
    8132:	d301      	bcc.n	8138 <__divsi3+0x178>
    8134:	010b      	lsls	r3, r1, #4
    8136:	1ac0      	subs	r0, r0, r3
    8138:	4152      	adcs	r2, r2
    813a:	08c3      	lsrs	r3, r0, #3
    813c:	428b      	cmp	r3, r1
    813e:	d301      	bcc.n	8144 <__divsi3+0x184>
    8140:	00cb      	lsls	r3, r1, #3
    8142:	1ac0      	subs	r0, r0, r3
    8144:	4152      	adcs	r2, r2
    8146:	0883      	lsrs	r3, r0, #2
    8148:	428b      	cmp	r3, r1
    814a:	d301      	bcc.n	8150 <__divsi3+0x190>
    814c:	008b      	lsls	r3, r1, #2
    814e:	1ac0      	subs	r0, r0, r3
    8150:	4152      	adcs	r2, r2
    8152:	d2d9      	bcs.n	8108 <__divsi3+0x148>
    8154:	0843      	lsrs	r3, r0, #1
    8156:	428b      	cmp	r3, r1
    8158:	d301      	bcc.n	815e <__divsi3+0x19e>
    815a:	004b      	lsls	r3, r1, #1
    815c:	1ac0      	subs	r0, r0, r3
    815e:	4152      	adcs	r2, r2
    8160:	1a41      	subs	r1, r0, r1
    8162:	d200      	bcs.n	8166 <__divsi3+0x1a6>
    8164:	4601      	mov	r1, r0
    8166:	4663      	mov	r3, ip
    8168:	4152      	adcs	r2, r2
    816a:	105b      	asrs	r3, r3, #1
    816c:	4610      	mov	r0, r2
    816e:	d301      	bcc.n	8174 <__divsi3+0x1b4>
    8170:	4240      	negs	r0, r0
    8172:	2b00      	cmp	r3, #0
    8174:	d500      	bpl.n	8178 <__divsi3+0x1b8>
    8176:	4249      	negs	r1, r1
    8178:	4770      	bx	lr
    817a:	4663      	mov	r3, ip
    817c:	105b      	asrs	r3, r3, #1
    817e:	d300      	bcc.n	8182 <__divsi3+0x1c2>
    8180:	4240      	negs	r0, r0
    8182:	b501      	push	{r0, lr}
    8184:	2000      	movs	r0, #0
    8186:	f7fa fadf 	bl	2748 <__aeabi_idiv0>
    818a:	bd02      	pop	{r1, pc}

0000818c <__aeabi_idivmod>:
    818c:	2900      	cmp	r1, #0
    818e:	d0f8      	beq.n	8182 <__divsi3+0x1c2>
    8190:	e716      	b.n	7fc0 <__divsi3>
    8192:	4770      	bx	lr

00008194 <__aeabi_cdrcmple>:
    8194:	4684      	mov	ip, r0
    8196:	1c10      	adds	r0, r2, #0
    8198:	4662      	mov	r2, ip
    819a:	468c      	mov	ip, r1
    819c:	1c19      	adds	r1, r3, #0
    819e:	4663      	mov	r3, ip
    81a0:	e000      	b.n	81a4 <__aeabi_cdcmpeq>
    81a2:	46c0      	nop			; (mov r8, r8)

000081a4 <__aeabi_cdcmpeq>:
    81a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    81a6:	f000 f9b1 	bl	850c <__ledf2>
    81aa:	2800      	cmp	r0, #0
    81ac:	d401      	bmi.n	81b2 <__aeabi_cdcmpeq+0xe>
    81ae:	2100      	movs	r1, #0
    81b0:	42c8      	cmn	r0, r1
    81b2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000081b4 <__aeabi_dcmpeq>:
    81b4:	b510      	push	{r4, lr}
    81b6:	f000 f90b 	bl	83d0 <__eqdf2>
    81ba:	4240      	negs	r0, r0
    81bc:	3001      	adds	r0, #1
    81be:	bd10      	pop	{r4, pc}

000081c0 <__aeabi_dcmplt>:
    81c0:	b510      	push	{r4, lr}
    81c2:	f000 f9a3 	bl	850c <__ledf2>
    81c6:	2800      	cmp	r0, #0
    81c8:	db01      	blt.n	81ce <__aeabi_dcmplt+0xe>
    81ca:	2000      	movs	r0, #0
    81cc:	bd10      	pop	{r4, pc}
    81ce:	2001      	movs	r0, #1
    81d0:	bd10      	pop	{r4, pc}
    81d2:	46c0      	nop			; (mov r8, r8)

000081d4 <__aeabi_dcmple>:
    81d4:	b510      	push	{r4, lr}
    81d6:	f000 f999 	bl	850c <__ledf2>
    81da:	2800      	cmp	r0, #0
    81dc:	dd01      	ble.n	81e2 <__aeabi_dcmple+0xe>
    81de:	2000      	movs	r0, #0
    81e0:	bd10      	pop	{r4, pc}
    81e2:	2001      	movs	r0, #1
    81e4:	bd10      	pop	{r4, pc}
    81e6:	46c0      	nop			; (mov r8, r8)

000081e8 <__aeabi_dcmpgt>:
    81e8:	b510      	push	{r4, lr}
    81ea:	f000 f92b 	bl	8444 <__gedf2>
    81ee:	2800      	cmp	r0, #0
    81f0:	dc01      	bgt.n	81f6 <__aeabi_dcmpgt+0xe>
    81f2:	2000      	movs	r0, #0
    81f4:	bd10      	pop	{r4, pc}
    81f6:	2001      	movs	r0, #1
    81f8:	bd10      	pop	{r4, pc}
    81fa:	46c0      	nop			; (mov r8, r8)

000081fc <__aeabi_dcmpge>:
    81fc:	b510      	push	{r4, lr}
    81fe:	f000 f921 	bl	8444 <__gedf2>
    8202:	2800      	cmp	r0, #0
    8204:	da01      	bge.n	820a <__aeabi_dcmpge+0xe>
    8206:	2000      	movs	r0, #0
    8208:	bd10      	pop	{r4, pc}
    820a:	2001      	movs	r0, #1
    820c:	bd10      	pop	{r4, pc}
    820e:	46c0      	nop			; (mov r8, r8)

00008210 <__aeabi_uldivmod>:
    8210:	2b00      	cmp	r3, #0
    8212:	d111      	bne.n	8238 <__aeabi_uldivmod+0x28>
    8214:	2a00      	cmp	r2, #0
    8216:	d10f      	bne.n	8238 <__aeabi_uldivmod+0x28>
    8218:	2900      	cmp	r1, #0
    821a:	d100      	bne.n	821e <__aeabi_uldivmod+0xe>
    821c:	2800      	cmp	r0, #0
    821e:	d002      	beq.n	8226 <__aeabi_uldivmod+0x16>
    8220:	2100      	movs	r1, #0
    8222:	43c9      	mvns	r1, r1
    8224:	1c08      	adds	r0, r1, #0
    8226:	b407      	push	{r0, r1, r2}
    8228:	4802      	ldr	r0, [pc, #8]	; (8234 <__aeabi_uldivmod+0x24>)
    822a:	a102      	add	r1, pc, #8	; (adr r1, 8234 <__aeabi_uldivmod+0x24>)
    822c:	1840      	adds	r0, r0, r1
    822e:	9002      	str	r0, [sp, #8]
    8230:	bd03      	pop	{r0, r1, pc}
    8232:	46c0      	nop			; (mov r8, r8)
    8234:	ffffa515 	.word	0xffffa515
    8238:	b403      	push	{r0, r1}
    823a:	4668      	mov	r0, sp
    823c:	b501      	push	{r0, lr}
    823e:	9802      	ldr	r0, [sp, #8]
    8240:	f000 f806 	bl	8250 <__udivmoddi4>
    8244:	9b01      	ldr	r3, [sp, #4]
    8246:	469e      	mov	lr, r3
    8248:	b002      	add	sp, #8
    824a:	bc0c      	pop	{r2, r3}
    824c:	4770      	bx	lr
    824e:	46c0      	nop			; (mov r8, r8)

00008250 <__udivmoddi4>:
    8250:	b5f0      	push	{r4, r5, r6, r7, lr}
    8252:	4657      	mov	r7, sl
    8254:	464e      	mov	r6, r9
    8256:	4645      	mov	r5, r8
    8258:	46de      	mov	lr, fp
    825a:	b5e0      	push	{r5, r6, r7, lr}
    825c:	0004      	movs	r4, r0
    825e:	b083      	sub	sp, #12
    8260:	000d      	movs	r5, r1
    8262:	4692      	mov	sl, r2
    8264:	4699      	mov	r9, r3
    8266:	428b      	cmp	r3, r1
    8268:	d82f      	bhi.n	82ca <__udivmoddi4+0x7a>
    826a:	d02c      	beq.n	82c6 <__udivmoddi4+0x76>
    826c:	4649      	mov	r1, r9
    826e:	4650      	mov	r0, sl
    8270:	f000 fa10 	bl	8694 <__clzdi2>
    8274:	0029      	movs	r1, r5
    8276:	0006      	movs	r6, r0
    8278:	0020      	movs	r0, r4
    827a:	f000 fa0b 	bl	8694 <__clzdi2>
    827e:	1a33      	subs	r3, r6, r0
    8280:	4698      	mov	r8, r3
    8282:	3b20      	subs	r3, #32
    8284:	469b      	mov	fp, r3
    8286:	d500      	bpl.n	828a <__udivmoddi4+0x3a>
    8288:	e074      	b.n	8374 <__udivmoddi4+0x124>
    828a:	4653      	mov	r3, sl
    828c:	465a      	mov	r2, fp
    828e:	4093      	lsls	r3, r2
    8290:	001f      	movs	r7, r3
    8292:	4653      	mov	r3, sl
    8294:	4642      	mov	r2, r8
    8296:	4093      	lsls	r3, r2
    8298:	001e      	movs	r6, r3
    829a:	42af      	cmp	r7, r5
    829c:	d829      	bhi.n	82f2 <__udivmoddi4+0xa2>
    829e:	d026      	beq.n	82ee <__udivmoddi4+0x9e>
    82a0:	465b      	mov	r3, fp
    82a2:	1ba4      	subs	r4, r4, r6
    82a4:	41bd      	sbcs	r5, r7
    82a6:	2b00      	cmp	r3, #0
    82a8:	da00      	bge.n	82ac <__udivmoddi4+0x5c>
    82aa:	e079      	b.n	83a0 <__udivmoddi4+0x150>
    82ac:	2200      	movs	r2, #0
    82ae:	2300      	movs	r3, #0
    82b0:	9200      	str	r2, [sp, #0]
    82b2:	9301      	str	r3, [sp, #4]
    82b4:	2301      	movs	r3, #1
    82b6:	465a      	mov	r2, fp
    82b8:	4093      	lsls	r3, r2
    82ba:	9301      	str	r3, [sp, #4]
    82bc:	2301      	movs	r3, #1
    82be:	4642      	mov	r2, r8
    82c0:	4093      	lsls	r3, r2
    82c2:	9300      	str	r3, [sp, #0]
    82c4:	e019      	b.n	82fa <__udivmoddi4+0xaa>
    82c6:	4282      	cmp	r2, r0
    82c8:	d9d0      	bls.n	826c <__udivmoddi4+0x1c>
    82ca:	2200      	movs	r2, #0
    82cc:	2300      	movs	r3, #0
    82ce:	9200      	str	r2, [sp, #0]
    82d0:	9301      	str	r3, [sp, #4]
    82d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    82d4:	2b00      	cmp	r3, #0
    82d6:	d001      	beq.n	82dc <__udivmoddi4+0x8c>
    82d8:	601c      	str	r4, [r3, #0]
    82da:	605d      	str	r5, [r3, #4]
    82dc:	9800      	ldr	r0, [sp, #0]
    82de:	9901      	ldr	r1, [sp, #4]
    82e0:	b003      	add	sp, #12
    82e2:	bc3c      	pop	{r2, r3, r4, r5}
    82e4:	4690      	mov	r8, r2
    82e6:	4699      	mov	r9, r3
    82e8:	46a2      	mov	sl, r4
    82ea:	46ab      	mov	fp, r5
    82ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    82ee:	42a3      	cmp	r3, r4
    82f0:	d9d6      	bls.n	82a0 <__udivmoddi4+0x50>
    82f2:	2200      	movs	r2, #0
    82f4:	2300      	movs	r3, #0
    82f6:	9200      	str	r2, [sp, #0]
    82f8:	9301      	str	r3, [sp, #4]
    82fa:	4643      	mov	r3, r8
    82fc:	2b00      	cmp	r3, #0
    82fe:	d0e8      	beq.n	82d2 <__udivmoddi4+0x82>
    8300:	07fb      	lsls	r3, r7, #31
    8302:	0872      	lsrs	r2, r6, #1
    8304:	431a      	orrs	r2, r3
    8306:	4646      	mov	r6, r8
    8308:	087b      	lsrs	r3, r7, #1
    830a:	e00e      	b.n	832a <__udivmoddi4+0xda>
    830c:	42ab      	cmp	r3, r5
    830e:	d101      	bne.n	8314 <__udivmoddi4+0xc4>
    8310:	42a2      	cmp	r2, r4
    8312:	d80c      	bhi.n	832e <__udivmoddi4+0xde>
    8314:	1aa4      	subs	r4, r4, r2
    8316:	419d      	sbcs	r5, r3
    8318:	2001      	movs	r0, #1
    831a:	1924      	adds	r4, r4, r4
    831c:	416d      	adcs	r5, r5
    831e:	2100      	movs	r1, #0
    8320:	3e01      	subs	r6, #1
    8322:	1824      	adds	r4, r4, r0
    8324:	414d      	adcs	r5, r1
    8326:	2e00      	cmp	r6, #0
    8328:	d006      	beq.n	8338 <__udivmoddi4+0xe8>
    832a:	42ab      	cmp	r3, r5
    832c:	d9ee      	bls.n	830c <__udivmoddi4+0xbc>
    832e:	3e01      	subs	r6, #1
    8330:	1924      	adds	r4, r4, r4
    8332:	416d      	adcs	r5, r5
    8334:	2e00      	cmp	r6, #0
    8336:	d1f8      	bne.n	832a <__udivmoddi4+0xda>
    8338:	465b      	mov	r3, fp
    833a:	9800      	ldr	r0, [sp, #0]
    833c:	9901      	ldr	r1, [sp, #4]
    833e:	1900      	adds	r0, r0, r4
    8340:	4169      	adcs	r1, r5
    8342:	2b00      	cmp	r3, #0
    8344:	db22      	blt.n	838c <__udivmoddi4+0x13c>
    8346:	002b      	movs	r3, r5
    8348:	465a      	mov	r2, fp
    834a:	40d3      	lsrs	r3, r2
    834c:	002a      	movs	r2, r5
    834e:	4644      	mov	r4, r8
    8350:	40e2      	lsrs	r2, r4
    8352:	001c      	movs	r4, r3
    8354:	465b      	mov	r3, fp
    8356:	0015      	movs	r5, r2
    8358:	2b00      	cmp	r3, #0
    835a:	db2c      	blt.n	83b6 <__udivmoddi4+0x166>
    835c:	0026      	movs	r6, r4
    835e:	409e      	lsls	r6, r3
    8360:	0033      	movs	r3, r6
    8362:	0026      	movs	r6, r4
    8364:	4647      	mov	r7, r8
    8366:	40be      	lsls	r6, r7
    8368:	0032      	movs	r2, r6
    836a:	1a80      	subs	r0, r0, r2
    836c:	4199      	sbcs	r1, r3
    836e:	9000      	str	r0, [sp, #0]
    8370:	9101      	str	r1, [sp, #4]
    8372:	e7ae      	b.n	82d2 <__udivmoddi4+0x82>
    8374:	4642      	mov	r2, r8
    8376:	2320      	movs	r3, #32
    8378:	1a9b      	subs	r3, r3, r2
    837a:	4652      	mov	r2, sl
    837c:	40da      	lsrs	r2, r3
    837e:	4641      	mov	r1, r8
    8380:	0013      	movs	r3, r2
    8382:	464a      	mov	r2, r9
    8384:	408a      	lsls	r2, r1
    8386:	0017      	movs	r7, r2
    8388:	431f      	orrs	r7, r3
    838a:	e782      	b.n	8292 <__udivmoddi4+0x42>
    838c:	4642      	mov	r2, r8
    838e:	2320      	movs	r3, #32
    8390:	1a9b      	subs	r3, r3, r2
    8392:	002a      	movs	r2, r5
    8394:	4646      	mov	r6, r8
    8396:	409a      	lsls	r2, r3
    8398:	0023      	movs	r3, r4
    839a:	40f3      	lsrs	r3, r6
    839c:	4313      	orrs	r3, r2
    839e:	e7d5      	b.n	834c <__udivmoddi4+0xfc>
    83a0:	4642      	mov	r2, r8
    83a2:	2320      	movs	r3, #32
    83a4:	2100      	movs	r1, #0
    83a6:	1a9b      	subs	r3, r3, r2
    83a8:	2200      	movs	r2, #0
    83aa:	9100      	str	r1, [sp, #0]
    83ac:	9201      	str	r2, [sp, #4]
    83ae:	2201      	movs	r2, #1
    83b0:	40da      	lsrs	r2, r3
    83b2:	9201      	str	r2, [sp, #4]
    83b4:	e782      	b.n	82bc <__udivmoddi4+0x6c>
    83b6:	4642      	mov	r2, r8
    83b8:	2320      	movs	r3, #32
    83ba:	0026      	movs	r6, r4
    83bc:	1a9b      	subs	r3, r3, r2
    83be:	40de      	lsrs	r6, r3
    83c0:	002f      	movs	r7, r5
    83c2:	46b4      	mov	ip, r6
    83c4:	4097      	lsls	r7, r2
    83c6:	4666      	mov	r6, ip
    83c8:	003b      	movs	r3, r7
    83ca:	4333      	orrs	r3, r6
    83cc:	e7c9      	b.n	8362 <__udivmoddi4+0x112>
    83ce:	46c0      	nop			; (mov r8, r8)

000083d0 <__eqdf2>:
    83d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    83d2:	464f      	mov	r7, r9
    83d4:	4646      	mov	r6, r8
    83d6:	46d6      	mov	lr, sl
    83d8:	005c      	lsls	r4, r3, #1
    83da:	b5c0      	push	{r6, r7, lr}
    83dc:	031f      	lsls	r7, r3, #12
    83de:	0fdb      	lsrs	r3, r3, #31
    83e0:	469a      	mov	sl, r3
    83e2:	4b17      	ldr	r3, [pc, #92]	; (8440 <__eqdf2+0x70>)
    83e4:	030e      	lsls	r6, r1, #12
    83e6:	004d      	lsls	r5, r1, #1
    83e8:	4684      	mov	ip, r0
    83ea:	4680      	mov	r8, r0
    83ec:	0b36      	lsrs	r6, r6, #12
    83ee:	0d6d      	lsrs	r5, r5, #21
    83f0:	0fc9      	lsrs	r1, r1, #31
    83f2:	4691      	mov	r9, r2
    83f4:	0b3f      	lsrs	r7, r7, #12
    83f6:	0d64      	lsrs	r4, r4, #21
    83f8:	2001      	movs	r0, #1
    83fa:	429d      	cmp	r5, r3
    83fc:	d008      	beq.n	8410 <__eqdf2+0x40>
    83fe:	429c      	cmp	r4, r3
    8400:	d001      	beq.n	8406 <__eqdf2+0x36>
    8402:	42a5      	cmp	r5, r4
    8404:	d00b      	beq.n	841e <__eqdf2+0x4e>
    8406:	bc1c      	pop	{r2, r3, r4}
    8408:	4690      	mov	r8, r2
    840a:	4699      	mov	r9, r3
    840c:	46a2      	mov	sl, r4
    840e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8410:	4663      	mov	r3, ip
    8412:	4333      	orrs	r3, r6
    8414:	d1f7      	bne.n	8406 <__eqdf2+0x36>
    8416:	42ac      	cmp	r4, r5
    8418:	d1f5      	bne.n	8406 <__eqdf2+0x36>
    841a:	433a      	orrs	r2, r7
    841c:	d1f3      	bne.n	8406 <__eqdf2+0x36>
    841e:	2001      	movs	r0, #1
    8420:	42be      	cmp	r6, r7
    8422:	d1f0      	bne.n	8406 <__eqdf2+0x36>
    8424:	45c8      	cmp	r8, r9
    8426:	d1ee      	bne.n	8406 <__eqdf2+0x36>
    8428:	4551      	cmp	r1, sl
    842a:	d007      	beq.n	843c <__eqdf2+0x6c>
    842c:	2d00      	cmp	r5, #0
    842e:	d1ea      	bne.n	8406 <__eqdf2+0x36>
    8430:	4663      	mov	r3, ip
    8432:	431e      	orrs	r6, r3
    8434:	0030      	movs	r0, r6
    8436:	1e46      	subs	r6, r0, #1
    8438:	41b0      	sbcs	r0, r6
    843a:	e7e4      	b.n	8406 <__eqdf2+0x36>
    843c:	2000      	movs	r0, #0
    843e:	e7e2      	b.n	8406 <__eqdf2+0x36>
    8440:	000007ff 	.word	0x000007ff

00008444 <__gedf2>:
    8444:	b5f0      	push	{r4, r5, r6, r7, lr}
    8446:	4645      	mov	r5, r8
    8448:	46de      	mov	lr, fp
    844a:	4657      	mov	r7, sl
    844c:	464e      	mov	r6, r9
    844e:	b5e0      	push	{r5, r6, r7, lr}
    8450:	031f      	lsls	r7, r3, #12
    8452:	0b3d      	lsrs	r5, r7, #12
    8454:	4f2c      	ldr	r7, [pc, #176]	; (8508 <__gedf2+0xc4>)
    8456:	030e      	lsls	r6, r1, #12
    8458:	004c      	lsls	r4, r1, #1
    845a:	46ab      	mov	fp, r5
    845c:	005d      	lsls	r5, r3, #1
    845e:	4684      	mov	ip, r0
    8460:	0b36      	lsrs	r6, r6, #12
    8462:	0d64      	lsrs	r4, r4, #21
    8464:	0fc9      	lsrs	r1, r1, #31
    8466:	4690      	mov	r8, r2
    8468:	0d6d      	lsrs	r5, r5, #21
    846a:	0fdb      	lsrs	r3, r3, #31
    846c:	42bc      	cmp	r4, r7
    846e:	d02a      	beq.n	84c6 <__gedf2+0x82>
    8470:	4f25      	ldr	r7, [pc, #148]	; (8508 <__gedf2+0xc4>)
    8472:	42bd      	cmp	r5, r7
    8474:	d02d      	beq.n	84d2 <__gedf2+0x8e>
    8476:	2c00      	cmp	r4, #0
    8478:	d10f      	bne.n	849a <__gedf2+0x56>
    847a:	4330      	orrs	r0, r6
    847c:	0007      	movs	r7, r0
    847e:	4681      	mov	r9, r0
    8480:	4278      	negs	r0, r7
    8482:	4178      	adcs	r0, r7
    8484:	b2c0      	uxtb	r0, r0
    8486:	2d00      	cmp	r5, #0
    8488:	d117      	bne.n	84ba <__gedf2+0x76>
    848a:	465f      	mov	r7, fp
    848c:	433a      	orrs	r2, r7
    848e:	d114      	bne.n	84ba <__gedf2+0x76>
    8490:	464b      	mov	r3, r9
    8492:	2000      	movs	r0, #0
    8494:	2b00      	cmp	r3, #0
    8496:	d00a      	beq.n	84ae <__gedf2+0x6a>
    8498:	e006      	b.n	84a8 <__gedf2+0x64>
    849a:	2d00      	cmp	r5, #0
    849c:	d102      	bne.n	84a4 <__gedf2+0x60>
    849e:	4658      	mov	r0, fp
    84a0:	4302      	orrs	r2, r0
    84a2:	d001      	beq.n	84a8 <__gedf2+0x64>
    84a4:	4299      	cmp	r1, r3
    84a6:	d018      	beq.n	84da <__gedf2+0x96>
    84a8:	4248      	negs	r0, r1
    84aa:	2101      	movs	r1, #1
    84ac:	4308      	orrs	r0, r1
    84ae:	bc3c      	pop	{r2, r3, r4, r5}
    84b0:	4690      	mov	r8, r2
    84b2:	4699      	mov	r9, r3
    84b4:	46a2      	mov	sl, r4
    84b6:	46ab      	mov	fp, r5
    84b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    84ba:	2800      	cmp	r0, #0
    84bc:	d0f2      	beq.n	84a4 <__gedf2+0x60>
    84be:	2001      	movs	r0, #1
    84c0:	3b01      	subs	r3, #1
    84c2:	4318      	orrs	r0, r3
    84c4:	e7f3      	b.n	84ae <__gedf2+0x6a>
    84c6:	0037      	movs	r7, r6
    84c8:	4307      	orrs	r7, r0
    84ca:	d0d1      	beq.n	8470 <__gedf2+0x2c>
    84cc:	2002      	movs	r0, #2
    84ce:	4240      	negs	r0, r0
    84d0:	e7ed      	b.n	84ae <__gedf2+0x6a>
    84d2:	465f      	mov	r7, fp
    84d4:	4317      	orrs	r7, r2
    84d6:	d0ce      	beq.n	8476 <__gedf2+0x32>
    84d8:	e7f8      	b.n	84cc <__gedf2+0x88>
    84da:	42ac      	cmp	r4, r5
    84dc:	dce4      	bgt.n	84a8 <__gedf2+0x64>
    84de:	da03      	bge.n	84e8 <__gedf2+0xa4>
    84e0:	1e48      	subs	r0, r1, #1
    84e2:	2101      	movs	r1, #1
    84e4:	4308      	orrs	r0, r1
    84e6:	e7e2      	b.n	84ae <__gedf2+0x6a>
    84e8:	455e      	cmp	r6, fp
    84ea:	d8dd      	bhi.n	84a8 <__gedf2+0x64>
    84ec:	d006      	beq.n	84fc <__gedf2+0xb8>
    84ee:	2000      	movs	r0, #0
    84f0:	455e      	cmp	r6, fp
    84f2:	d2dc      	bcs.n	84ae <__gedf2+0x6a>
    84f4:	2301      	movs	r3, #1
    84f6:	1e48      	subs	r0, r1, #1
    84f8:	4318      	orrs	r0, r3
    84fa:	e7d8      	b.n	84ae <__gedf2+0x6a>
    84fc:	45c4      	cmp	ip, r8
    84fe:	d8d3      	bhi.n	84a8 <__gedf2+0x64>
    8500:	2000      	movs	r0, #0
    8502:	45c4      	cmp	ip, r8
    8504:	d3f6      	bcc.n	84f4 <__gedf2+0xb0>
    8506:	e7d2      	b.n	84ae <__gedf2+0x6a>
    8508:	000007ff 	.word	0x000007ff

0000850c <__ledf2>:
    850c:	b5f0      	push	{r4, r5, r6, r7, lr}
    850e:	464e      	mov	r6, r9
    8510:	4645      	mov	r5, r8
    8512:	46de      	mov	lr, fp
    8514:	4657      	mov	r7, sl
    8516:	005c      	lsls	r4, r3, #1
    8518:	b5e0      	push	{r5, r6, r7, lr}
    851a:	031f      	lsls	r7, r3, #12
    851c:	0fdb      	lsrs	r3, r3, #31
    851e:	4699      	mov	r9, r3
    8520:	4b2a      	ldr	r3, [pc, #168]	; (85cc <__ledf2+0xc0>)
    8522:	030e      	lsls	r6, r1, #12
    8524:	004d      	lsls	r5, r1, #1
    8526:	0fc9      	lsrs	r1, r1, #31
    8528:	4684      	mov	ip, r0
    852a:	0b36      	lsrs	r6, r6, #12
    852c:	0d6d      	lsrs	r5, r5, #21
    852e:	468b      	mov	fp, r1
    8530:	4690      	mov	r8, r2
    8532:	0b3f      	lsrs	r7, r7, #12
    8534:	0d64      	lsrs	r4, r4, #21
    8536:	429d      	cmp	r5, r3
    8538:	d020      	beq.n	857c <__ledf2+0x70>
    853a:	4b24      	ldr	r3, [pc, #144]	; (85cc <__ledf2+0xc0>)
    853c:	429c      	cmp	r4, r3
    853e:	d022      	beq.n	8586 <__ledf2+0x7a>
    8540:	2d00      	cmp	r5, #0
    8542:	d112      	bne.n	856a <__ledf2+0x5e>
    8544:	4330      	orrs	r0, r6
    8546:	4243      	negs	r3, r0
    8548:	4143      	adcs	r3, r0
    854a:	b2db      	uxtb	r3, r3
    854c:	2c00      	cmp	r4, #0
    854e:	d01f      	beq.n	8590 <__ledf2+0x84>
    8550:	2b00      	cmp	r3, #0
    8552:	d00c      	beq.n	856e <__ledf2+0x62>
    8554:	464b      	mov	r3, r9
    8556:	2001      	movs	r0, #1
    8558:	3b01      	subs	r3, #1
    855a:	4303      	orrs	r3, r0
    855c:	0018      	movs	r0, r3
    855e:	bc3c      	pop	{r2, r3, r4, r5}
    8560:	4690      	mov	r8, r2
    8562:	4699      	mov	r9, r3
    8564:	46a2      	mov	sl, r4
    8566:	46ab      	mov	fp, r5
    8568:	bdf0      	pop	{r4, r5, r6, r7, pc}
    856a:	2c00      	cmp	r4, #0
    856c:	d016      	beq.n	859c <__ledf2+0x90>
    856e:	45cb      	cmp	fp, r9
    8570:	d017      	beq.n	85a2 <__ledf2+0x96>
    8572:	465b      	mov	r3, fp
    8574:	4259      	negs	r1, r3
    8576:	2301      	movs	r3, #1
    8578:	430b      	orrs	r3, r1
    857a:	e7ef      	b.n	855c <__ledf2+0x50>
    857c:	0031      	movs	r1, r6
    857e:	2302      	movs	r3, #2
    8580:	4301      	orrs	r1, r0
    8582:	d1eb      	bne.n	855c <__ledf2+0x50>
    8584:	e7d9      	b.n	853a <__ledf2+0x2e>
    8586:	0039      	movs	r1, r7
    8588:	2302      	movs	r3, #2
    858a:	4311      	orrs	r1, r2
    858c:	d1e6      	bne.n	855c <__ledf2+0x50>
    858e:	e7d7      	b.n	8540 <__ledf2+0x34>
    8590:	433a      	orrs	r2, r7
    8592:	d1dd      	bne.n	8550 <__ledf2+0x44>
    8594:	2300      	movs	r3, #0
    8596:	2800      	cmp	r0, #0
    8598:	d0e0      	beq.n	855c <__ledf2+0x50>
    859a:	e7ea      	b.n	8572 <__ledf2+0x66>
    859c:	433a      	orrs	r2, r7
    859e:	d1e6      	bne.n	856e <__ledf2+0x62>
    85a0:	e7e7      	b.n	8572 <__ledf2+0x66>
    85a2:	42a5      	cmp	r5, r4
    85a4:	dce5      	bgt.n	8572 <__ledf2+0x66>
    85a6:	db05      	blt.n	85b4 <__ledf2+0xa8>
    85a8:	42be      	cmp	r6, r7
    85aa:	d8e2      	bhi.n	8572 <__ledf2+0x66>
    85ac:	d007      	beq.n	85be <__ledf2+0xb2>
    85ae:	2300      	movs	r3, #0
    85b0:	42be      	cmp	r6, r7
    85b2:	d2d3      	bcs.n	855c <__ledf2+0x50>
    85b4:	4659      	mov	r1, fp
    85b6:	2301      	movs	r3, #1
    85b8:	3901      	subs	r1, #1
    85ba:	430b      	orrs	r3, r1
    85bc:	e7ce      	b.n	855c <__ledf2+0x50>
    85be:	45c4      	cmp	ip, r8
    85c0:	d8d7      	bhi.n	8572 <__ledf2+0x66>
    85c2:	2300      	movs	r3, #0
    85c4:	45c4      	cmp	ip, r8
    85c6:	d3f5      	bcc.n	85b4 <__ledf2+0xa8>
    85c8:	e7c8      	b.n	855c <__ledf2+0x50>
    85ca:	46c0      	nop			; (mov r8, r8)
    85cc:	000007ff 	.word	0x000007ff

000085d0 <__aeabi_dcmpun>:
    85d0:	b570      	push	{r4, r5, r6, lr}
    85d2:	4e0e      	ldr	r6, [pc, #56]	; (860c <__aeabi_dcmpun+0x3c>)
    85d4:	030d      	lsls	r5, r1, #12
    85d6:	031c      	lsls	r4, r3, #12
    85d8:	0049      	lsls	r1, r1, #1
    85da:	005b      	lsls	r3, r3, #1
    85dc:	0b2d      	lsrs	r5, r5, #12
    85de:	0d49      	lsrs	r1, r1, #21
    85e0:	0b24      	lsrs	r4, r4, #12
    85e2:	0d5b      	lsrs	r3, r3, #21
    85e4:	42b1      	cmp	r1, r6
    85e6:	d004      	beq.n	85f2 <__aeabi_dcmpun+0x22>
    85e8:	4908      	ldr	r1, [pc, #32]	; (860c <__aeabi_dcmpun+0x3c>)
    85ea:	2000      	movs	r0, #0
    85ec:	428b      	cmp	r3, r1
    85ee:	d008      	beq.n	8602 <__aeabi_dcmpun+0x32>
    85f0:	bd70      	pop	{r4, r5, r6, pc}
    85f2:	4305      	orrs	r5, r0
    85f4:	2001      	movs	r0, #1
    85f6:	2d00      	cmp	r5, #0
    85f8:	d1fa      	bne.n	85f0 <__aeabi_dcmpun+0x20>
    85fa:	4904      	ldr	r1, [pc, #16]	; (860c <__aeabi_dcmpun+0x3c>)
    85fc:	2000      	movs	r0, #0
    85fe:	428b      	cmp	r3, r1
    8600:	d1f6      	bne.n	85f0 <__aeabi_dcmpun+0x20>
    8602:	4314      	orrs	r4, r2
    8604:	0020      	movs	r0, r4
    8606:	1e44      	subs	r4, r0, #1
    8608:	41a0      	sbcs	r0, r4
    860a:	e7f1      	b.n	85f0 <__aeabi_dcmpun+0x20>
    860c:	000007ff 	.word	0x000007ff

00008610 <__aeabi_i2d>:
    8610:	b570      	push	{r4, r5, r6, lr}
    8612:	2800      	cmp	r0, #0
    8614:	d030      	beq.n	8678 <__aeabi_i2d+0x68>
    8616:	17c3      	asrs	r3, r0, #31
    8618:	18c4      	adds	r4, r0, r3
    861a:	405c      	eors	r4, r3
    861c:	0fc5      	lsrs	r5, r0, #31
    861e:	0020      	movs	r0, r4
    8620:	f7fb fd04 	bl	402c <__clzsi2>
    8624:	4b17      	ldr	r3, [pc, #92]	; (8684 <__aeabi_i2d+0x74>)
    8626:	4a18      	ldr	r2, [pc, #96]	; (8688 <__aeabi_i2d+0x78>)
    8628:	1a1b      	subs	r3, r3, r0
    862a:	1ad2      	subs	r2, r2, r3
    862c:	2a1f      	cmp	r2, #31
    862e:	dd18      	ble.n	8662 <__aeabi_i2d+0x52>
    8630:	4a16      	ldr	r2, [pc, #88]	; (868c <__aeabi_i2d+0x7c>)
    8632:	1ad2      	subs	r2, r2, r3
    8634:	4094      	lsls	r4, r2
    8636:	2200      	movs	r2, #0
    8638:	0324      	lsls	r4, r4, #12
    863a:	055b      	lsls	r3, r3, #21
    863c:	0b24      	lsrs	r4, r4, #12
    863e:	0d5b      	lsrs	r3, r3, #21
    8640:	2100      	movs	r1, #0
    8642:	0010      	movs	r0, r2
    8644:	0324      	lsls	r4, r4, #12
    8646:	0d0a      	lsrs	r2, r1, #20
    8648:	0b24      	lsrs	r4, r4, #12
    864a:	0512      	lsls	r2, r2, #20
    864c:	4322      	orrs	r2, r4
    864e:	4c10      	ldr	r4, [pc, #64]	; (8690 <__aeabi_i2d+0x80>)
    8650:	051b      	lsls	r3, r3, #20
    8652:	4022      	ands	r2, r4
    8654:	4313      	orrs	r3, r2
    8656:	005b      	lsls	r3, r3, #1
    8658:	07ed      	lsls	r5, r5, #31
    865a:	085b      	lsrs	r3, r3, #1
    865c:	432b      	orrs	r3, r5
    865e:	0019      	movs	r1, r3
    8660:	bd70      	pop	{r4, r5, r6, pc}
    8662:	0021      	movs	r1, r4
    8664:	4091      	lsls	r1, r2
    8666:	000a      	movs	r2, r1
    8668:	210b      	movs	r1, #11
    866a:	1a08      	subs	r0, r1, r0
    866c:	40c4      	lsrs	r4, r0
    866e:	055b      	lsls	r3, r3, #21
    8670:	0324      	lsls	r4, r4, #12
    8672:	0b24      	lsrs	r4, r4, #12
    8674:	0d5b      	lsrs	r3, r3, #21
    8676:	e7e3      	b.n	8640 <__aeabi_i2d+0x30>
    8678:	2500      	movs	r5, #0
    867a:	2300      	movs	r3, #0
    867c:	2400      	movs	r4, #0
    867e:	2200      	movs	r2, #0
    8680:	e7de      	b.n	8640 <__aeabi_i2d+0x30>
    8682:	46c0      	nop			; (mov r8, r8)
    8684:	0000041e 	.word	0x0000041e
    8688:	00000433 	.word	0x00000433
    868c:	00000413 	.word	0x00000413
    8690:	800fffff 	.word	0x800fffff

00008694 <__clzdi2>:
    8694:	b510      	push	{r4, lr}
    8696:	2900      	cmp	r1, #0
    8698:	d103      	bne.n	86a2 <__clzdi2+0xe>
    869a:	f7fb fcc7 	bl	402c <__clzsi2>
    869e:	3020      	adds	r0, #32
    86a0:	e002      	b.n	86a8 <__clzdi2+0x14>
    86a2:	1c08      	adds	r0, r1, #0
    86a4:	f7fb fcc2 	bl	402c <__clzsi2>
    86a8:	bd10      	pop	{r4, pc}
    86aa:	46c0      	nop			; (mov r8, r8)
    86ac:	000002d8 	.word	0x000002d8
    86b0:	000002d8 	.word	0x000002d8
    86b4:	000002b4 	.word	0x000002b4
    86b8:	000002d8 	.word	0x000002d8
    86bc:	000002b4 	.word	0x000002b4
    86c0:	0000029a 	.word	0x0000029a
    86c4:	0000029a 	.word	0x0000029a
    86c8:	000002d8 	.word	0x000002d8
    86cc:	000002d8 	.word	0x000002d8
    86d0:	000002d8 	.word	0x000002d8
    86d4:	000002d8 	.word	0x000002d8
    86d8:	000002d8 	.word	0x000002d8
    86dc:	000002d8 	.word	0x000002d8
    86e0:	000002d8 	.word	0x000002d8
    86e4:	000002d8 	.word	0x000002d8
    86e8:	000002d8 	.word	0x000002d8
    86ec:	000002d8 	.word	0x000002d8
    86f0:	000002d8 	.word	0x000002d8
    86f4:	000002d8 	.word	0x000002d8
    86f8:	000002d8 	.word	0x000002d8
    86fc:	000002d8 	.word	0x000002d8
    8700:	000002d8 	.word	0x000002d8
    8704:	000002d8 	.word	0x000002d8
    8708:	000002d8 	.word	0x000002d8
    870c:	000002d8 	.word	0x000002d8
    8710:	000002d8 	.word	0x000002d8
    8714:	000002d8 	.word	0x000002d8
    8718:	000002d8 	.word	0x000002d8
    871c:	000002d8 	.word	0x000002d8
    8720:	000002d8 	.word	0x000002d8
    8724:	000002d8 	.word	0x000002d8
    8728:	000002d8 	.word	0x000002d8
    872c:	000002d8 	.word	0x000002d8
    8730:	000002d8 	.word	0x000002d8
    8734:	000002d8 	.word	0x000002d8
    8738:	000002d8 	.word	0x000002d8
    873c:	000002d8 	.word	0x000002d8
    8740:	000002d8 	.word	0x000002d8
    8744:	000002d8 	.word	0x000002d8
    8748:	000002d8 	.word	0x000002d8
    874c:	000002d8 	.word	0x000002d8
    8750:	000002d8 	.word	0x000002d8
    8754:	000002d8 	.word	0x000002d8
    8758:	000002d8 	.word	0x000002d8
    875c:	000002d8 	.word	0x000002d8
    8760:	000002d8 	.word	0x000002d8
    8764:	000002d8 	.word	0x000002d8
    8768:	000002d8 	.word	0x000002d8
    876c:	000002d8 	.word	0x000002d8
    8770:	000002d8 	.word	0x000002d8
    8774:	000002d8 	.word	0x000002d8
    8778:	000002d8 	.word	0x000002d8
    877c:	000002d8 	.word	0x000002d8
    8780:	000002d8 	.word	0x000002d8
    8784:	000002d8 	.word	0x000002d8
    8788:	000002d8 	.word	0x000002d8
    878c:	000002d8 	.word	0x000002d8
    8790:	000002d8 	.word	0x000002d8
    8794:	000002d8 	.word	0x000002d8
    8798:	000002d8 	.word	0x000002d8
    879c:	000002d8 	.word	0x000002d8
    87a0:	000002d8 	.word	0x000002d8
    87a4:	000002d8 	.word	0x000002d8
    87a8:	000002d8 	.word	0x000002d8
    87ac:	000002b4 	.word	0x000002b4
    87b0:	000002b4 	.word	0x000002b4
    87b4:	000002bc 	.word	0x000002bc
    87b8:	000002bc 	.word	0x000002bc
    87bc:	000002bc 	.word	0x000002bc
    87c0:	000002bc 	.word	0x000002bc
    87c4:	33323130 	.word	0x33323130
    87c8:	37363534 	.word	0x37363534
    87cc:	42413938 	.word	0x42413938
    87d0:	46454443 	.word	0x46454443
    87d4:	00733525 	.word	0x00733525
    87d8:	20632530 	.word	0x20632530
    87dc:	00000000 	.word	0x00000000
    87e0:	3a306325 	.word	0x3a306325
    87e4:	00002020 	.word	0x00002020
    87e8:	20783225 	.word	0x20783225
    87ec:	00000000 	.word	0x00000000
    87f0:	41744545 	.word	0x41744545
    87f4:	50524f4d 	.word	0x50524f4d
    87f8:	456d752e 	.word	0x456d752e
    87fc:	52415355 	.word	0x52415355
    8800:	4e492054 	.word	0x4e492054
    8804:	41495449 	.word	0x41495449
    8808:	455a494c 	.word	0x455a494c
    880c:	55442044 	.word	0x55442044
    8810:	474e4952 	.word	0x474e4952
    8814:	4f4f4220 	.word	0x4f4f4220
    8818:	414f4c54 	.word	0x414f4c54
    881c:	00000a44 	.word	0x00000a44
    8820:	42000800 	.word	0x42000800
    8824:	42000c00 	.word	0x42000c00
    8828:	42001000 	.word	0x42001000
    882c:	42001400 	.word	0x42001400
    8830:	42001800 	.word	0x42001800
    8834:	42001c00 	.word	0x42001c00
    8838:	00001cae 	.word	0x00001cae
    883c:	00001caa 	.word	0x00001caa
    8840:	00001caa 	.word	0x00001caa
    8844:	00001d10 	.word	0x00001d10
    8848:	00001d10 	.word	0x00001d10
    884c:	00001cc2 	.word	0x00001cc2
    8850:	00001cb4 	.word	0x00001cb4
    8854:	00001cc8 	.word	0x00001cc8
    8858:	00001cfe 	.word	0x00001cfe
    885c:	00001e50 	.word	0x00001e50
    8860:	00001e30 	.word	0x00001e30
    8864:	00001e30 	.word	0x00001e30
    8868:	00001ebc 	.word	0x00001ebc
    886c:	00001e42 	.word	0x00001e42
    8870:	00001e5e 	.word	0x00001e5e
    8874:	00001e34 	.word	0x00001e34
    8878:	00001e6c 	.word	0x00001e6c
    887c:	00001eac 	.word	0x00001eac
    8880:	6d206f4e 	.word	0x6d206f4e
    8884:	726f6d65 	.word	0x726f6d65
    8888:	65732079 	.word	0x65732079
    888c:	2e2e2e74 	.word	0x2e2e2e74
    8890:	6d754420 	.word	0x6d754420
    8894:	6e69796d 	.word	0x6e69796d
    8898:	00000a67 	.word	0x00000a67
    889c:	756c6c25 	.word	0x756c6c25
    88a0:	0000000a 	.word	0x0000000a
    88a4:	00733425 	.word	0x00733425
    88a8:	3a632530 	.word	0x3a632530
    88ac:	00000020 	.word	0x00000020
    88b0:	73323125 	.word	0x73323125
    88b4:	00000000 	.word	0x00000000
    88b8:	00002fb8 	.word	0x00002fb8
    88bc:	00002f9a 	.word	0x00002f9a
    88c0:	00002f54 	.word	0x00002f54
    88c4:	00002e72 	.word	0x00002e72
    88c8:	00002f54 	.word	0x00002f54
    88cc:	00002f8c 	.word	0x00002f8c
    88d0:	00002f54 	.word	0x00002f54
    88d4:	00002e72 	.word	0x00002e72
    88d8:	00002f9a 	.word	0x00002f9a
    88dc:	00002f9a 	.word	0x00002f9a
    88e0:	00002f8c 	.word	0x00002f8c
    88e4:	00002e72 	.word	0x00002e72
    88e8:	00002e6a 	.word	0x00002e6a
    88ec:	00002e6a 	.word	0x00002e6a
    88f0:	00002e6a 	.word	0x00002e6a
    88f4:	000031d0 	.word	0x000031d0
    88f8:	00003618 	.word	0x00003618
    88fc:	000034d8 	.word	0x000034d8
    8900:	000034d8 	.word	0x000034d8
    8904:	000034d4 	.word	0x000034d4
    8908:	000035f0 	.word	0x000035f0
    890c:	000035f0 	.word	0x000035f0
    8910:	000035e2 	.word	0x000035e2
    8914:	000034d4 	.word	0x000034d4
    8918:	000035f0 	.word	0x000035f0
    891c:	000035e2 	.word	0x000035e2
    8920:	000035f0 	.word	0x000035f0
    8924:	000034d4 	.word	0x000034d4
    8928:	000035f8 	.word	0x000035f8
    892c:	000035f8 	.word	0x000035f8
    8930:	000035f8 	.word	0x000035f8
    8934:	000037fc 	.word	0x000037fc

00008938 <_global_impure_ptr>:
    8938:	20000018 00004934 000049a8 000049a8     ... 4I...I...I..
    8948:	00004918 000049a8 000049a8 000049a8     .I...I...I...I..
    8958:	000049a8 000049a8 000049a8 00004920     .I...I...I.. I..
    8968:	00004402 000049a8 000043bc 0000440c     .D...I...C...D..
    8978:	000049a8 00004458 00004642 00004642     .I..XD..BF..BF..
    8988:	00004642 00004642 00004642 00004642     BF..BF..BF..BF..
    8998:	00004642 00004642 00004642 000049a8     BF..BF..BF...I..
    89a8:	000049a8 000049a8 000049a8 000049a8     .I...I...I...I..
    89b8:	000049a8 000049a8 000049a8 000049a8     .I...I...I...I..
    89c8:	000049a8 00004460 000045a8 000049a8     .I..`D...E...I..
    89d8:	000045a8 000049a8 000049a8 000049a8     .E...I...I...I..
    89e8:	000049a8 00004672 000049a8 000049a8     .I..rF...I...I..
    89f8:	0000467a 000049a8 000049a8 000049a8     zF...I...I...I..
    8a08:	000049a8 000049a8 0000471c 000049a8     .I...I...G...I..
    8a18:	000049a8 0000474e 000049a8 000049a8     .I..NG...I...I..
    8a28:	000049a8 000049a8 000049a8 000049a8     .I...I...I...I..
    8a38:	000049a8 000049a8 000049a8 000049a8     .I...I...I...I..
    8a48:	00004848 0000487c 000045a8 000045a8     HH..|H...E...E..
    8a58:	000045a8 0000488e 0000487c 000049a8     .E...H..|H...I..
    8a68:	000049a8 00004896 000049a8 000047b0     .I...H...I...G..
    8a78:	00004976 000048ec 000047e6 000049a8     vI...H...G...I..
    8a88:	000047ee 000049a8 00004944 000049a8     .G...I..DI...I..
    8a98:	000049a8 000048a6 00464e49 00666e69     .I...H..INF.inf.
    8aa8:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    8ab8:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    8ac8:	37363534 62613938 66656463 00000000     456789abcdef....
    8ad8:	6c756e28 0000296c 00000030              (null)..0...

00008ae4 <blanks.7223>:
    8ae4:	20202020 20202020 20202020 20202020                     

00008af4 <zeroes.7224>:
    8af4:	30303030 30303030 30303030 30303030     0000000000000000
    8b04:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
    8b14:	00000000                                ....

00008b18 <__mprec_bigtens>:
    8b18:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    8b28:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    8b38:	7f73bf3c 75154fdd                       <.s..O.u

00008b40 <__mprec_tens>:
    8b40:	00000000 3ff00000 00000000 40240000     .......?......$@
    8b50:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    8b60:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    8b70:	00000000 412e8480 00000000 416312d0     .......A......cA
    8b80:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    8b90:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    8ba0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    8bb0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    8bc0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    8bd0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    8be0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    8bf0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    8c00:	79d99db4 44ea7843                       ...yCx.D

00008c08 <p05.6055>:
    8c08:	00000005 00000019 0000007d 00000043     ........}...C...
    8c18:	49534f50 00000058 0000002e              POSIX.......

00008c24 <_ctype_>:
    8c24:	20202000 20202020 28282020 20282828     .         ((((( 
    8c34:	20202020 20202020 20202020 20202020                     
    8c44:	10108820 10101010 10101010 10101010      ...............
    8c54:	04040410 04040404 10040404 10101010     ................
    8c64:	41411010 41414141 01010101 01010101     ..AAAAAA........
    8c74:	01010101 01010101 01010101 10101010     ................
    8c84:	42421010 42424242 02020202 02020202     ..BBBBBB........
    8c94:	02020202 02020202 02020202 10101010     ................
    8ca4:	00000020 00000000 00000000 00000000      ...............
	...

00008d28 <_init>:
    8d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8d2a:	46c0      	nop			; (mov r8, r8)
    8d2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8d2e:	bc08      	pop	{r3}
    8d30:	469e      	mov	lr, r3
    8d32:	4770      	bx	lr

00008d34 <__init_array_start>:
    8d34:	00004275 	.word	0x00004275

00008d38 <__frame_dummy_init_array_entry>:
    8d38:	000000dd                                ....

00008d3c <_fini>:
    8d3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8d3e:	46c0      	nop			; (mov r8, r8)
    8d40:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8d42:	bc08      	pop	{r3}
    8d44:	469e      	mov	lr, r3
    8d46:	4770      	bx	lr

00008d48 <__fini_array_start>:
    8d48:	000000b5 	.word	0x000000b5
